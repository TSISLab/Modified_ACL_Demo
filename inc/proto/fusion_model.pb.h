// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fusion_model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_fusion_5fmodel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_fusion_5fmodel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "om.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_fusion_5fmodel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_fusion_5fmodel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_fusion_5fmodel_2eproto;
namespace domi {
class FusionModelDef;
class FusionModelDefDefaultTypeInternal;
extern FusionModelDefDefaultTypeInternal _FusionModelDef_default_instance_;
}  // namespace domi
PROTOBUF_NAMESPACE_OPEN
template<> ::domi::FusionModelDef* Arena::CreateMaybeMessage<::domi::FusionModelDef>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace domi {

// ===================================================================

class FusionModelDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FusionModelDef) */ {
 public:
  inline FusionModelDef() : FusionModelDef(nullptr) {}
  virtual ~FusionModelDef();

  FusionModelDef(const FusionModelDef& from);
  FusionModelDef(FusionModelDef&& from) noexcept
    : FusionModelDef() {
    *this = ::std::move(from);
  }

  inline FusionModelDef& operator=(const FusionModelDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FusionModelDef& operator=(FusionModelDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FusionModelDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FusionModelDef* internal_default_instance() {
    return reinterpret_cast<const FusionModelDef*>(
               &_FusionModelDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FusionModelDef& a, FusionModelDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FusionModelDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FusionModelDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FusionModelDef* New() const final {
    return CreateMaybeMessage<FusionModelDef>(nullptr);
  }

  FusionModelDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FusionModelDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FusionModelDef& from);
  void MergeFrom(const FusionModelDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FusionModelDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FusionModelDef";
  }
  protected:
  explicit FusionModelDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_fusion_5fmodel_2eproto);
    return ::descriptor_table_fusion_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFusionOpFieldNumber = 2,
    kVersionFieldNumber = 1,
  };
  // repeated .domi.OpDef fusion_op = 2;
  int fusion_op_size() const;
  private:
  int _internal_fusion_op_size() const;
  public:
  void clear_fusion_op();
  ::domi::OpDef* mutable_fusion_op(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::OpDef >*
      mutable_fusion_op();
  private:
  const ::domi::OpDef& _internal_fusion_op(int index) const;
  ::domi::OpDef* _internal_add_fusion_op();
  public:
  const ::domi::OpDef& fusion_op(int index) const;
  ::domi::OpDef* add_fusion_op();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::OpDef >&
      fusion_op() const;

  // string version = 1;
  void clear_version();
  const std::string& version() const;
  void set_version(const std::string& value);
  void set_version(std::string&& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  std::string* mutable_version();
  std::string* release_version();
  void set_allocated_version(std::string* version);
  private:
  const std::string& _internal_version() const;
  void _internal_set_version(const std::string& value);
  std::string* _internal_mutable_version();
  public:

  // @@protoc_insertion_point(class_scope:domi.FusionModelDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::OpDef > fusion_op_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr version_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fusion_5fmodel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FusionModelDef

// string version = 1;
inline void FusionModelDef::clear_version() {
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& FusionModelDef::version() const {
  // @@protoc_insertion_point(field_get:domi.FusionModelDef.version)
  return _internal_version();
}
inline void FusionModelDef::set_version(const std::string& value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:domi.FusionModelDef.version)
}
inline std::string* FusionModelDef::mutable_version() {
  // @@protoc_insertion_point(field_mutable:domi.FusionModelDef.version)
  return _internal_mutable_version();
}
inline const std::string& FusionModelDef::_internal_version() const {
  return version_.Get();
}
inline void FusionModelDef::_internal_set_version(const std::string& value) {
  
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void FusionModelDef::set_version(std::string&& value) {
  
  version_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.FusionModelDef.version)
}
inline void FusionModelDef::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.FusionModelDef.version)
}
inline void FusionModelDef::set_version(const char* value,
    size_t size) {
  
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.FusionModelDef.version)
}
inline std::string* FusionModelDef::_internal_mutable_version() {
  
  return version_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* FusionModelDef::release_version() {
  // @@protoc_insertion_point(field_release:domi.FusionModelDef.version)
  return version_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void FusionModelDef::set_allocated_version(std::string* version) {
  if (version != nullptr) {
    
  } else {
    
  }
  version_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), version,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.FusionModelDef.version)
}

// repeated .domi.OpDef fusion_op = 2;
inline int FusionModelDef::_internal_fusion_op_size() const {
  return fusion_op_.size();
}
inline int FusionModelDef::fusion_op_size() const {
  return _internal_fusion_op_size();
}
inline ::domi::OpDef* FusionModelDef::mutable_fusion_op(int index) {
  // @@protoc_insertion_point(field_mutable:domi.FusionModelDef.fusion_op)
  return fusion_op_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::OpDef >*
FusionModelDef::mutable_fusion_op() {
  // @@protoc_insertion_point(field_mutable_list:domi.FusionModelDef.fusion_op)
  return &fusion_op_;
}
inline const ::domi::OpDef& FusionModelDef::_internal_fusion_op(int index) const {
  return fusion_op_.Get(index);
}
inline const ::domi::OpDef& FusionModelDef::fusion_op(int index) const {
  // @@protoc_insertion_point(field_get:domi.FusionModelDef.fusion_op)
  return _internal_fusion_op(index);
}
inline ::domi::OpDef* FusionModelDef::_internal_add_fusion_op() {
  return fusion_op_.Add();
}
inline ::domi::OpDef* FusionModelDef::add_fusion_op() {
  // @@protoc_insertion_point(field_add:domi.FusionModelDef.fusion_op)
  return _internal_add_fusion_op();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::OpDef >&
FusionModelDef::fusion_op() const {
  // @@protoc_insertion_point(field_list:domi.FusionModelDef.fusion_op)
  return fusion_op_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace domi

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_fusion_5fmodel_2eproto
