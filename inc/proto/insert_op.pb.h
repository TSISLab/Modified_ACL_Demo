// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: insert_op.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_insert_5fop_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_insert_5fop_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_insert_5fop_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_insert_5fop_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_insert_5fop_2eproto;
namespace domi {
class AippOpParams;
class AippOpParamsDefaultTypeInternal;
extern AippOpParamsDefaultTypeInternal _AippOpParams_default_instance_;
class InsertNewOps;
class InsertNewOpsDefaultTypeInternal;
extern InsertNewOpsDefaultTypeInternal _InsertNewOps_default_instance_;
class MultiShapeOpParams;
class MultiShapeOpParamsDefaultTypeInternal;
extern MultiShapeOpParamsDefaultTypeInternal _MultiShapeOpParams_default_instance_;
}  // namespace domi
PROTOBUF_NAMESPACE_OPEN
template<> ::domi::AippOpParams* Arena::CreateMaybeMessage<::domi::AippOpParams>(Arena*);
template<> ::domi::InsertNewOps* Arena::CreateMaybeMessage<::domi::InsertNewOps>(Arena*);
template<> ::domi::MultiShapeOpParams* Arena::CreateMaybeMessage<::domi::MultiShapeOpParams>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace domi {

enum AippOpParams_InputFormat : int {
  AippOpParams_InputFormat_UNDEFINED = 0,
  AippOpParams_InputFormat_YUV420SP_U8 = 1,
  AippOpParams_InputFormat_XRGB8888_U8 = 2,
  AippOpParams_InputFormat_RGB888_U8 = 3,
  AippOpParams_InputFormat_YUV400_U8 = 4,
  AippOpParams_InputFormat_NC1HWC0DI_FP16 = 5,
  AippOpParams_InputFormat_NC1HWC0DI_S8 = 6,
  AippOpParams_InputFormat_ARGB8888_U8 = 7,
  AippOpParams_InputFormat_YUYV_U8 = 8,
  AippOpParams_InputFormat_YUV422SP_U8 = 9,
  AippOpParams_InputFormat_AYUV444_U8 = 10,
  AippOpParams_InputFormat_RAW10 = 11,
  AippOpParams_InputFormat_RAW12 = 12,
  AippOpParams_InputFormat_RAW16 = 13,
  AippOpParams_InputFormat_RAW24 = 14,
  AippOpParams_InputFormat_RGB16 = 15,
  AippOpParams_InputFormat_RGB20 = 16,
  AippOpParams_InputFormat_RGB24 = 17,
  AippOpParams_InputFormat_RGB8_IR = 18,
  AippOpParams_InputFormat_RGB16_IR = 19,
  AippOpParams_InputFormat_RGB24_IR = 20,
  AippOpParams_InputFormat_AippOpParams_InputFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AippOpParams_InputFormat_AippOpParams_InputFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AippOpParams_InputFormat_IsValid(int value);
constexpr AippOpParams_InputFormat AippOpParams_InputFormat_InputFormat_MIN = AippOpParams_InputFormat_UNDEFINED;
constexpr AippOpParams_InputFormat AippOpParams_InputFormat_InputFormat_MAX = AippOpParams_InputFormat_RGB24_IR;
constexpr int AippOpParams_InputFormat_InputFormat_ARRAYSIZE = AippOpParams_InputFormat_InputFormat_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AippOpParams_InputFormat_descriptor();
template<typename T>
inline const std::string& AippOpParams_InputFormat_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AippOpParams_InputFormat>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AippOpParams_InputFormat_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AippOpParams_InputFormat_descriptor(), enum_t_value);
}
inline bool AippOpParams_InputFormat_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, AippOpParams_InputFormat* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AippOpParams_InputFormat>(
    AippOpParams_InputFormat_descriptor(), name, value);
}
enum AippOpParams_AippMode : int {
  AippOpParams_AippMode_undefined = 0,
  AippOpParams_AippMode_static_ = 1,
  AippOpParams_AippMode_dynamic = 2,
  AippOpParams_AippMode_AippOpParams_AippMode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AippOpParams_AippMode_AippOpParams_AippMode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AippOpParams_AippMode_IsValid(int value);
constexpr AippOpParams_AippMode AippOpParams_AippMode_AippMode_MIN = AippOpParams_AippMode_undefined;
constexpr AippOpParams_AippMode AippOpParams_AippMode_AippMode_MAX = AippOpParams_AippMode_dynamic;
constexpr int AippOpParams_AippMode_AippMode_ARRAYSIZE = AippOpParams_AippMode_AippMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AippOpParams_AippMode_descriptor();
template<typename T>
inline const std::string& AippOpParams_AippMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AippOpParams_AippMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AippOpParams_AippMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AippOpParams_AippMode_descriptor(), enum_t_value);
}
inline bool AippOpParams_AippMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, AippOpParams_AippMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AippOpParams_AippMode>(
    AippOpParams_AippMode_descriptor(), name, value);
}
enum MultiShapeOpParams_MultiShapeMode : int {
  MultiShapeOpParams_MultiShapeMode_batch = 0,
  MultiShapeOpParams_MultiShapeMode_resolution = 1,
  MultiShapeOpParams_MultiShapeMode_MultiShapeOpParams_MultiShapeMode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MultiShapeOpParams_MultiShapeMode_MultiShapeOpParams_MultiShapeMode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MultiShapeOpParams_MultiShapeMode_IsValid(int value);
constexpr MultiShapeOpParams_MultiShapeMode MultiShapeOpParams_MultiShapeMode_MultiShapeMode_MIN = MultiShapeOpParams_MultiShapeMode_batch;
constexpr MultiShapeOpParams_MultiShapeMode MultiShapeOpParams_MultiShapeMode_MultiShapeMode_MAX = MultiShapeOpParams_MultiShapeMode_resolution;
constexpr int MultiShapeOpParams_MultiShapeMode_MultiShapeMode_ARRAYSIZE = MultiShapeOpParams_MultiShapeMode_MultiShapeMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MultiShapeOpParams_MultiShapeMode_descriptor();
template<typename T>
inline const std::string& MultiShapeOpParams_MultiShapeMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MultiShapeOpParams_MultiShapeMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MultiShapeOpParams_MultiShapeMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MultiShapeOpParams_MultiShapeMode_descriptor(), enum_t_value);
}
inline bool MultiShapeOpParams_MultiShapeMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MultiShapeOpParams_MultiShapeMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MultiShapeOpParams_MultiShapeMode>(
    MultiShapeOpParams_MultiShapeMode_descriptor(), name, value);
}
// ===================================================================

class InsertNewOps PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.InsertNewOps) */ {
 public:
  inline InsertNewOps() : InsertNewOps(nullptr) {}
  virtual ~InsertNewOps();

  InsertNewOps(const InsertNewOps& from);
  InsertNewOps(InsertNewOps&& from) noexcept
    : InsertNewOps() {
    *this = ::std::move(from);
  }

  inline InsertNewOps& operator=(const InsertNewOps& from) {
    CopyFrom(from);
    return *this;
  }
  inline InsertNewOps& operator=(InsertNewOps&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InsertNewOps& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InsertNewOps* internal_default_instance() {
    return reinterpret_cast<const InsertNewOps*>(
               &_InsertNewOps_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InsertNewOps& a, InsertNewOps& b) {
    a.Swap(&b);
  }
  inline void Swap(InsertNewOps* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InsertNewOps* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InsertNewOps* New() const final {
    return CreateMaybeMessage<InsertNewOps>(nullptr);
  }

  InsertNewOps* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InsertNewOps>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InsertNewOps& from);
  void MergeFrom(const InsertNewOps& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InsertNewOps* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.InsertNewOps";
  }
  protected:
  explicit InsertNewOps(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_insert_5fop_2eproto);
    return ::descriptor_table_insert_5fop_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAippOpFieldNumber = 1,
    kMultiShapeOpFieldNumber = 2,
  };
  // repeated .domi.AippOpParams aipp_op = 1;
  int aipp_op_size() const;
  private:
  int _internal_aipp_op_size() const;
  public:
  void clear_aipp_op();
  ::domi::AippOpParams* mutable_aipp_op(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AippOpParams >*
      mutable_aipp_op();
  private:
  const ::domi::AippOpParams& _internal_aipp_op(int index) const;
  ::domi::AippOpParams* _internal_add_aipp_op();
  public:
  const ::domi::AippOpParams& aipp_op(int index) const;
  ::domi::AippOpParams* add_aipp_op();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AippOpParams >&
      aipp_op() const;

  // repeated .domi.MultiShapeOpParams multi_shape_op = 2;
  int multi_shape_op_size() const;
  private:
  int _internal_multi_shape_op_size() const;
  public:
  void clear_multi_shape_op();
  ::domi::MultiShapeOpParams* mutable_multi_shape_op(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::MultiShapeOpParams >*
      mutable_multi_shape_op();
  private:
  const ::domi::MultiShapeOpParams& _internal_multi_shape_op(int index) const;
  ::domi::MultiShapeOpParams* _internal_add_multi_shape_op();
  public:
  const ::domi::MultiShapeOpParams& multi_shape_op(int index) const;
  ::domi::MultiShapeOpParams* add_multi_shape_op();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::MultiShapeOpParams >&
      multi_shape_op() const;

  // @@protoc_insertion_point(class_scope:domi.InsertNewOps)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AippOpParams > aipp_op_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::MultiShapeOpParams > multi_shape_op_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_insert_5fop_2eproto;
};
// -------------------------------------------------------------------

class AippOpParams PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.AippOpParams) */ {
 public:
  inline AippOpParams() : AippOpParams(nullptr) {}
  virtual ~AippOpParams();

  AippOpParams(const AippOpParams& from);
  AippOpParams(AippOpParams&& from) noexcept
    : AippOpParams() {
    *this = ::std::move(from);
  }

  inline AippOpParams& operator=(const AippOpParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline AippOpParams& operator=(AippOpParams&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AippOpParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AippOpParams* internal_default_instance() {
    return reinterpret_cast<const AippOpParams*>(
               &_AippOpParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AippOpParams& a, AippOpParams& b) {
    a.Swap(&b);
  }
  inline void Swap(AippOpParams* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AippOpParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AippOpParams* New() const final {
    return CreateMaybeMessage<AippOpParams>(nullptr);
  }

  AippOpParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AippOpParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AippOpParams& from);
  void MergeFrom(const AippOpParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AippOpParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.AippOpParams";
  }
  protected:
  explicit AippOpParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_insert_5fop_2eproto);
    return ::descriptor_table_insert_5fop_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AippOpParams_InputFormat InputFormat;
  static constexpr InputFormat UNDEFINED =
    AippOpParams_InputFormat_UNDEFINED;
  static constexpr InputFormat YUV420SP_U8 =
    AippOpParams_InputFormat_YUV420SP_U8;
  static constexpr InputFormat XRGB8888_U8 =
    AippOpParams_InputFormat_XRGB8888_U8;
  static constexpr InputFormat RGB888_U8 =
    AippOpParams_InputFormat_RGB888_U8;
  static constexpr InputFormat YUV400_U8 =
    AippOpParams_InputFormat_YUV400_U8;
  static constexpr InputFormat NC1HWC0DI_FP16 =
    AippOpParams_InputFormat_NC1HWC0DI_FP16;
  static constexpr InputFormat NC1HWC0DI_S8 =
    AippOpParams_InputFormat_NC1HWC0DI_S8;
  static constexpr InputFormat ARGB8888_U8 =
    AippOpParams_InputFormat_ARGB8888_U8;
  static constexpr InputFormat YUYV_U8 =
    AippOpParams_InputFormat_YUYV_U8;
  static constexpr InputFormat YUV422SP_U8 =
    AippOpParams_InputFormat_YUV422SP_U8;
  static constexpr InputFormat AYUV444_U8 =
    AippOpParams_InputFormat_AYUV444_U8;
  static constexpr InputFormat RAW10 =
    AippOpParams_InputFormat_RAW10;
  static constexpr InputFormat RAW12 =
    AippOpParams_InputFormat_RAW12;
  static constexpr InputFormat RAW16 =
    AippOpParams_InputFormat_RAW16;
  static constexpr InputFormat RAW24 =
    AippOpParams_InputFormat_RAW24;
  static constexpr InputFormat RGB16 =
    AippOpParams_InputFormat_RGB16;
  static constexpr InputFormat RGB20 =
    AippOpParams_InputFormat_RGB20;
  static constexpr InputFormat RGB24 =
    AippOpParams_InputFormat_RGB24;
  static constexpr InputFormat RGB8_IR =
    AippOpParams_InputFormat_RGB8_IR;
  static constexpr InputFormat RGB16_IR =
    AippOpParams_InputFormat_RGB16_IR;
  static constexpr InputFormat RGB24_IR =
    AippOpParams_InputFormat_RGB24_IR;
  static inline bool InputFormat_IsValid(int value) {
    return AippOpParams_InputFormat_IsValid(value);
  }
  static constexpr InputFormat InputFormat_MIN =
    AippOpParams_InputFormat_InputFormat_MIN;
  static constexpr InputFormat InputFormat_MAX =
    AippOpParams_InputFormat_InputFormat_MAX;
  static constexpr int InputFormat_ARRAYSIZE =
    AippOpParams_InputFormat_InputFormat_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  InputFormat_descriptor() {
    return AippOpParams_InputFormat_descriptor();
  }
  template<typename T>
  static inline const std::string& InputFormat_Name(T enum_t_value) {
    static_assert(::std::is_same<T, InputFormat>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function InputFormat_Name.");
    return AippOpParams_InputFormat_Name(enum_t_value);
  }
  static inline bool InputFormat_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      InputFormat* value) {
    return AippOpParams_InputFormat_Parse(name, value);
  }

  typedef AippOpParams_AippMode AippMode;
  static constexpr AippMode undefined =
    AippOpParams_AippMode_undefined;
  static constexpr AippMode static_ =
    AippOpParams_AippMode_static_;
  static constexpr AippMode dynamic =
    AippOpParams_AippMode_dynamic;
  static inline bool AippMode_IsValid(int value) {
    return AippOpParams_AippMode_IsValid(value);
  }
  static constexpr AippMode AippMode_MIN =
    AippOpParams_AippMode_AippMode_MIN;
  static constexpr AippMode AippMode_MAX =
    AippOpParams_AippMode_AippMode_MAX;
  static constexpr int AippMode_ARRAYSIZE =
    AippOpParams_AippMode_AippMode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  AippMode_descriptor() {
    return AippOpParams_AippMode_descriptor();
  }
  template<typename T>
  static inline const std::string& AippMode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, AippMode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function AippMode_Name.");
    return AippOpParams_AippMode_Name(enum_t_value);
  }
  static inline bool AippMode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      AippMode* value) {
    return AippOpParams_AippMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kInputEdgeIdxFieldNumber = 3,
    kVarReciChn0FieldNumber = 16,
    kVarReciChn1FieldNumber = 17,
    kVarReciChn2FieldNumber = 18,
    kVarReciChn3FieldNumber = 21,
    kMatrixR0C0FieldNumber = 30,
    kMatrixR0C1FieldNumber = 31,
    kMatrixR0C2FieldNumber = 32,
    kMatrixR1C0FieldNumber = 33,
    kMatrixR1C1FieldNumber = 34,
    kMatrixR1C2FieldNumber = 35,
    kMatrixR2C0FieldNumber = 36,
    kMatrixR2C1FieldNumber = 37,
    kMatrixR2C2FieldNumber = 38,
    kOutputBias0FieldNumber = 39,
    kOutputBias1FieldNumber = 40,
    kOutputBias2FieldNumber = 41,
    kInputBias0FieldNumber = 42,
    kInputBias1FieldNumber = 43,
    kInputBias2FieldNumber = 44,
    kRelatedInputNameFieldNumber = 6,
    kAippModeFieldNumber = 1,
    kRelatedInputRankFieldNumber = 2,
    kMaxSrcImageSizeFieldNumber = 4,
    kMeanChn0FieldNumber = 10,
    kMeanChn1FieldNumber = 11,
    kMeanChn2FieldNumber = 12,
    kMinChn0FieldNumber = 13,
    kMinChn1FieldNumber = 14,
    kMinChn2FieldNumber = 15,
    kMeanChn3FieldNumber = 19,
    kMinChn3FieldNumber = 20,
    kSupportRotationFieldNumber = 5,
    kCscSwitchFieldNumber = 52,
    kRbuvSwapSwitchFieldNumber = 54,
    kAxSwapSwitchFieldNumber = 55,
    kRawRgbirToF16NFieldNumber = 45,
    kInputFormatFieldNumber = 51,
    kCpaddingValueFieldNumber = 53,
    kSrcImageSizeWFieldNumber = 57,
    kPaddingValueFieldNumber = 72,
    kSrcImageSizeHFieldNumber = 58,
    kLoadStartPosWFieldNumber = 60,
    kLoadStartPosHFieldNumber = 61,
    kSingleLineModeFieldNumber = 56,
    kCropFieldNumber = 59,
    kResizeFieldNumber = 64,
    kPaddingFieldNumber = 67,
    kCropSizeWFieldNumber = 62,
    kCropSizeHFieldNumber = 63,
    kResizeOutputWFieldNumber = 65,
    kResizeOutputHFieldNumber = 66,
    kLeftPaddingSizeFieldNumber = 68,
    kRightPaddingSizeFieldNumber = 69,
    kTopPaddingSizeFieldNumber = 70,
    kBottomPaddingSizeFieldNumber = 71,
  };
  // repeated uint32 input_edge_idx = 3;
  int input_edge_idx_size() const;
  private:
  int _internal_input_edge_idx_size() const;
  public:
  void clear_input_edge_idx();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_edge_idx(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_input_edge_idx() const;
  void _internal_add_input_edge_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_input_edge_idx();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 input_edge_idx(int index) const;
  void set_input_edge_idx(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_input_edge_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      input_edge_idx() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_input_edge_idx();

  // repeated float var_reci_chn_0 = 16;
  int var_reci_chn_0_size() const;
  private:
  int _internal_var_reci_chn_0_size() const;
  public:
  void clear_var_reci_chn_0();
  private:
  float _internal_var_reci_chn_0(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_var_reci_chn_0() const;
  void _internal_add_var_reci_chn_0(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_var_reci_chn_0();
  public:
  float var_reci_chn_0(int index) const;
  void set_var_reci_chn_0(int index, float value);
  void add_var_reci_chn_0(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      var_reci_chn_0() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_var_reci_chn_0();

  // repeated float var_reci_chn_1 = 17;
  int var_reci_chn_1_size() const;
  private:
  int _internal_var_reci_chn_1_size() const;
  public:
  void clear_var_reci_chn_1();
  private:
  float _internal_var_reci_chn_1(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_var_reci_chn_1() const;
  void _internal_add_var_reci_chn_1(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_var_reci_chn_1();
  public:
  float var_reci_chn_1(int index) const;
  void set_var_reci_chn_1(int index, float value);
  void add_var_reci_chn_1(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      var_reci_chn_1() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_var_reci_chn_1();

  // repeated float var_reci_chn_2 = 18;
  int var_reci_chn_2_size() const;
  private:
  int _internal_var_reci_chn_2_size() const;
  public:
  void clear_var_reci_chn_2();
  private:
  float _internal_var_reci_chn_2(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_var_reci_chn_2() const;
  void _internal_add_var_reci_chn_2(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_var_reci_chn_2();
  public:
  float var_reci_chn_2(int index) const;
  void set_var_reci_chn_2(int index, float value);
  void add_var_reci_chn_2(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      var_reci_chn_2() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_var_reci_chn_2();

  // repeated float var_reci_chn_3 = 21;
  int var_reci_chn_3_size() const;
  private:
  int _internal_var_reci_chn_3_size() const;
  public:
  void clear_var_reci_chn_3();
  private:
  float _internal_var_reci_chn_3(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_var_reci_chn_3() const;
  void _internal_add_var_reci_chn_3(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_var_reci_chn_3();
  public:
  float var_reci_chn_3(int index) const;
  void set_var_reci_chn_3(int index, float value);
  void add_var_reci_chn_3(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      var_reci_chn_3() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_var_reci_chn_3();

  // repeated int32 matrix_r0c0 = 30;
  int matrix_r0c0_size() const;
  private:
  int _internal_matrix_r0c0_size() const;
  public:
  void clear_matrix_r0c0();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_matrix_r0c0(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_matrix_r0c0() const;
  void _internal_add_matrix_r0c0(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_matrix_r0c0();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 matrix_r0c0(int index) const;
  void set_matrix_r0c0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_matrix_r0c0(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      matrix_r0c0() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_matrix_r0c0();

  // repeated int32 matrix_r0c1 = 31;
  int matrix_r0c1_size() const;
  private:
  int _internal_matrix_r0c1_size() const;
  public:
  void clear_matrix_r0c1();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_matrix_r0c1(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_matrix_r0c1() const;
  void _internal_add_matrix_r0c1(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_matrix_r0c1();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 matrix_r0c1(int index) const;
  void set_matrix_r0c1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_matrix_r0c1(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      matrix_r0c1() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_matrix_r0c1();

  // repeated int32 matrix_r0c2 = 32;
  int matrix_r0c2_size() const;
  private:
  int _internal_matrix_r0c2_size() const;
  public:
  void clear_matrix_r0c2();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_matrix_r0c2(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_matrix_r0c2() const;
  void _internal_add_matrix_r0c2(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_matrix_r0c2();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 matrix_r0c2(int index) const;
  void set_matrix_r0c2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_matrix_r0c2(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      matrix_r0c2() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_matrix_r0c2();

  // repeated int32 matrix_r1c0 = 33;
  int matrix_r1c0_size() const;
  private:
  int _internal_matrix_r1c0_size() const;
  public:
  void clear_matrix_r1c0();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_matrix_r1c0(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_matrix_r1c0() const;
  void _internal_add_matrix_r1c0(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_matrix_r1c0();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 matrix_r1c0(int index) const;
  void set_matrix_r1c0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_matrix_r1c0(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      matrix_r1c0() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_matrix_r1c0();

  // repeated int32 matrix_r1c1 = 34;
  int matrix_r1c1_size() const;
  private:
  int _internal_matrix_r1c1_size() const;
  public:
  void clear_matrix_r1c1();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_matrix_r1c1(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_matrix_r1c1() const;
  void _internal_add_matrix_r1c1(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_matrix_r1c1();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 matrix_r1c1(int index) const;
  void set_matrix_r1c1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_matrix_r1c1(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      matrix_r1c1() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_matrix_r1c1();

  // repeated int32 matrix_r1c2 = 35;
  int matrix_r1c2_size() const;
  private:
  int _internal_matrix_r1c2_size() const;
  public:
  void clear_matrix_r1c2();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_matrix_r1c2(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_matrix_r1c2() const;
  void _internal_add_matrix_r1c2(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_matrix_r1c2();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 matrix_r1c2(int index) const;
  void set_matrix_r1c2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_matrix_r1c2(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      matrix_r1c2() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_matrix_r1c2();

  // repeated int32 matrix_r2c0 = 36;
  int matrix_r2c0_size() const;
  private:
  int _internal_matrix_r2c0_size() const;
  public:
  void clear_matrix_r2c0();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_matrix_r2c0(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_matrix_r2c0() const;
  void _internal_add_matrix_r2c0(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_matrix_r2c0();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 matrix_r2c0(int index) const;
  void set_matrix_r2c0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_matrix_r2c0(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      matrix_r2c0() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_matrix_r2c0();

  // repeated int32 matrix_r2c1 = 37;
  int matrix_r2c1_size() const;
  private:
  int _internal_matrix_r2c1_size() const;
  public:
  void clear_matrix_r2c1();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_matrix_r2c1(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_matrix_r2c1() const;
  void _internal_add_matrix_r2c1(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_matrix_r2c1();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 matrix_r2c1(int index) const;
  void set_matrix_r2c1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_matrix_r2c1(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      matrix_r2c1() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_matrix_r2c1();

  // repeated int32 matrix_r2c2 = 38;
  int matrix_r2c2_size() const;
  private:
  int _internal_matrix_r2c2_size() const;
  public:
  void clear_matrix_r2c2();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_matrix_r2c2(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_matrix_r2c2() const;
  void _internal_add_matrix_r2c2(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_matrix_r2c2();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 matrix_r2c2(int index) const;
  void set_matrix_r2c2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_matrix_r2c2(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      matrix_r2c2() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_matrix_r2c2();

  // repeated int32 output_bias_0 = 39;
  int output_bias_0_size() const;
  private:
  int _internal_output_bias_0_size() const;
  public:
  void clear_output_bias_0();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_output_bias_0(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_output_bias_0() const;
  void _internal_add_output_bias_0(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_output_bias_0();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 output_bias_0(int index) const;
  void set_output_bias_0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_output_bias_0(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      output_bias_0() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_output_bias_0();

  // repeated int32 output_bias_1 = 40;
  int output_bias_1_size() const;
  private:
  int _internal_output_bias_1_size() const;
  public:
  void clear_output_bias_1();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_output_bias_1(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_output_bias_1() const;
  void _internal_add_output_bias_1(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_output_bias_1();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 output_bias_1(int index) const;
  void set_output_bias_1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_output_bias_1(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      output_bias_1() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_output_bias_1();

  // repeated int32 output_bias_2 = 41;
  int output_bias_2_size() const;
  private:
  int _internal_output_bias_2_size() const;
  public:
  void clear_output_bias_2();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_output_bias_2(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_output_bias_2() const;
  void _internal_add_output_bias_2(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_output_bias_2();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 output_bias_2(int index) const;
  void set_output_bias_2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_output_bias_2(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      output_bias_2() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_output_bias_2();

  // repeated int32 input_bias_0 = 42;
  int input_bias_0_size() const;
  private:
  int _internal_input_bias_0_size() const;
  public:
  void clear_input_bias_0();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_input_bias_0(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_input_bias_0() const;
  void _internal_add_input_bias_0(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_input_bias_0();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 input_bias_0(int index) const;
  void set_input_bias_0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_input_bias_0(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      input_bias_0() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_input_bias_0();

  // repeated int32 input_bias_1 = 43;
  int input_bias_1_size() const;
  private:
  int _internal_input_bias_1_size() const;
  public:
  void clear_input_bias_1();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_input_bias_1(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_input_bias_1() const;
  void _internal_add_input_bias_1(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_input_bias_1();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 input_bias_1(int index) const;
  void set_input_bias_1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_input_bias_1(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      input_bias_1() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_input_bias_1();

  // repeated int32 input_bias_2 = 44;
  int input_bias_2_size() const;
  private:
  int _internal_input_bias_2_size() const;
  public:
  void clear_input_bias_2();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_input_bias_2(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_input_bias_2() const;
  void _internal_add_input_bias_2(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_input_bias_2();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 input_bias_2(int index) const;
  void set_input_bias_2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_input_bias_2(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      input_bias_2() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_input_bias_2();

  // string related_input_name = 6;
  void clear_related_input_name();
  const std::string& related_input_name() const;
  void set_related_input_name(const std::string& value);
  void set_related_input_name(std::string&& value);
  void set_related_input_name(const char* value);
  void set_related_input_name(const char* value, size_t size);
  std::string* mutable_related_input_name();
  std::string* release_related_input_name();
  void set_allocated_related_input_name(std::string* related_input_name);
  private:
  const std::string& _internal_related_input_name() const;
  void _internal_set_related_input_name(const std::string& value);
  std::string* _internal_mutable_related_input_name();
  public:

  // .domi.AippOpParams.AippMode aipp_mode = 1;
  void clear_aipp_mode();
  ::domi::AippOpParams_AippMode aipp_mode() const;
  void set_aipp_mode(::domi::AippOpParams_AippMode value);
  private:
  ::domi::AippOpParams_AippMode _internal_aipp_mode() const;
  void _internal_set_aipp_mode(::domi::AippOpParams_AippMode value);
  public:

  // uint32 related_input_rank = 2;
  void clear_related_input_rank();
  ::PROTOBUF_NAMESPACE_ID::uint32 related_input_rank() const;
  void set_related_input_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_related_input_rank() const;
  void _internal_set_related_input_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 max_src_image_size = 4;
  void clear_max_src_image_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_src_image_size() const;
  void set_max_src_image_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_src_image_size() const;
  void _internal_set_max_src_image_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 mean_chn_0 = 10;
  void clear_mean_chn_0();
  ::PROTOBUF_NAMESPACE_ID::int32 mean_chn_0() const;
  void set_mean_chn_0(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mean_chn_0() const;
  void _internal_set_mean_chn_0(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 mean_chn_1 = 11;
  void clear_mean_chn_1();
  ::PROTOBUF_NAMESPACE_ID::int32 mean_chn_1() const;
  void set_mean_chn_1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mean_chn_1() const;
  void _internal_set_mean_chn_1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 mean_chn_2 = 12;
  void clear_mean_chn_2();
  ::PROTOBUF_NAMESPACE_ID::int32 mean_chn_2() const;
  void set_mean_chn_2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mean_chn_2() const;
  void _internal_set_mean_chn_2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float min_chn_0 = 13;
  void clear_min_chn_0();
  float min_chn_0() const;
  void set_min_chn_0(float value);
  private:
  float _internal_min_chn_0() const;
  void _internal_set_min_chn_0(float value);
  public:

  // float min_chn_1 = 14;
  void clear_min_chn_1();
  float min_chn_1() const;
  void set_min_chn_1(float value);
  private:
  float _internal_min_chn_1() const;
  void _internal_set_min_chn_1(float value);
  public:

  // float min_chn_2 = 15;
  void clear_min_chn_2();
  float min_chn_2() const;
  void set_min_chn_2(float value);
  private:
  float _internal_min_chn_2() const;
  void _internal_set_min_chn_2(float value);
  public:

  // int32 mean_chn_3 = 19;
  void clear_mean_chn_3();
  ::PROTOBUF_NAMESPACE_ID::int32 mean_chn_3() const;
  void set_mean_chn_3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mean_chn_3() const;
  void _internal_set_mean_chn_3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float min_chn_3 = 20;
  void clear_min_chn_3();
  float min_chn_3() const;
  void set_min_chn_3(float value);
  private:
  float _internal_min_chn_3() const;
  void _internal_set_min_chn_3(float value);
  public:

  // bool support_rotation = 5;
  void clear_support_rotation();
  bool support_rotation() const;
  void set_support_rotation(bool value);
  private:
  bool _internal_support_rotation() const;
  void _internal_set_support_rotation(bool value);
  public:

  // bool csc_switch = 52;
  void clear_csc_switch();
  bool csc_switch() const;
  void set_csc_switch(bool value);
  private:
  bool _internal_csc_switch() const;
  void _internal_set_csc_switch(bool value);
  public:

  // bool rbuv_swap_switch = 54;
  void clear_rbuv_swap_switch();
  bool rbuv_swap_switch() const;
  void set_rbuv_swap_switch(bool value);
  private:
  bool _internal_rbuv_swap_switch() const;
  void _internal_set_rbuv_swap_switch(bool value);
  public:

  // bool ax_swap_switch = 55;
  void clear_ax_swap_switch();
  bool ax_swap_switch() const;
  void set_ax_swap_switch(bool value);
  private:
  bool _internal_ax_swap_switch() const;
  void _internal_set_ax_swap_switch(bool value);
  public:

  // uint32 raw_rgbir_to_f16_n = 45;
  void clear_raw_rgbir_to_f16_n();
  ::PROTOBUF_NAMESPACE_ID::uint32 raw_rgbir_to_f16_n() const;
  void set_raw_rgbir_to_f16_n(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_raw_rgbir_to_f16_n() const;
  void _internal_set_raw_rgbir_to_f16_n(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .domi.AippOpParams.InputFormat input_format = 51;
  void clear_input_format();
  ::domi::AippOpParams_InputFormat input_format() const;
  void set_input_format(::domi::AippOpParams_InputFormat value);
  private:
  ::domi::AippOpParams_InputFormat _internal_input_format() const;
  void _internal_set_input_format(::domi::AippOpParams_InputFormat value);
  public:

  // float cpadding_value = 53;
  void clear_cpadding_value();
  float cpadding_value() const;
  void set_cpadding_value(float value);
  private:
  float _internal_cpadding_value() const;
  void _internal_set_cpadding_value(float value);
  public:

  // int32 src_image_size_w = 57;
  void clear_src_image_size_w();
  ::PROTOBUF_NAMESPACE_ID::int32 src_image_size_w() const;
  void set_src_image_size_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_src_image_size_w() const;
  void _internal_set_src_image_size_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float padding_value = 72;
  void clear_padding_value();
  float padding_value() const;
  void set_padding_value(float value);
  private:
  float _internal_padding_value() const;
  void _internal_set_padding_value(float value);
  public:

  // int32 src_image_size_h = 58;
  void clear_src_image_size_h();
  ::PROTOBUF_NAMESPACE_ID::int32 src_image_size_h() const;
  void set_src_image_size_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_src_image_size_h() const;
  void _internal_set_src_image_size_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 load_start_pos_w = 60;
  void clear_load_start_pos_w();
  ::PROTOBUF_NAMESPACE_ID::int32 load_start_pos_w() const;
  void set_load_start_pos_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_load_start_pos_w() const;
  void _internal_set_load_start_pos_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 load_start_pos_h = 61;
  void clear_load_start_pos_h();
  ::PROTOBUF_NAMESPACE_ID::int32 load_start_pos_h() const;
  void set_load_start_pos_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_load_start_pos_h() const;
  void _internal_set_load_start_pos_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool single_line_mode = 56;
  void clear_single_line_mode();
  bool single_line_mode() const;
  void set_single_line_mode(bool value);
  private:
  bool _internal_single_line_mode() const;
  void _internal_set_single_line_mode(bool value);
  public:

  // bool crop = 59;
  void clear_crop();
  bool crop() const;
  void set_crop(bool value);
  private:
  bool _internal_crop() const;
  void _internal_set_crop(bool value);
  public:

  // bool resize = 64;
  void clear_resize();
  bool resize() const;
  void set_resize(bool value);
  private:
  bool _internal_resize() const;
  void _internal_set_resize(bool value);
  public:

  // bool padding = 67;
  void clear_padding();
  bool padding() const;
  void set_padding(bool value);
  private:
  bool _internal_padding() const;
  void _internal_set_padding(bool value);
  public:

  // int32 crop_size_w = 62;
  void clear_crop_size_w();
  ::PROTOBUF_NAMESPACE_ID::int32 crop_size_w() const;
  void set_crop_size_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_crop_size_w() const;
  void _internal_set_crop_size_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 crop_size_h = 63;
  void clear_crop_size_h();
  ::PROTOBUF_NAMESPACE_ID::int32 crop_size_h() const;
  void set_crop_size_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_crop_size_h() const;
  void _internal_set_crop_size_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 resize_output_w = 65;
  void clear_resize_output_w();
  ::PROTOBUF_NAMESPACE_ID::int32 resize_output_w() const;
  void set_resize_output_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_resize_output_w() const;
  void _internal_set_resize_output_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 resize_output_h = 66;
  void clear_resize_output_h();
  ::PROTOBUF_NAMESPACE_ID::int32 resize_output_h() const;
  void set_resize_output_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_resize_output_h() const;
  void _internal_set_resize_output_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 left_padding_size = 68;
  void clear_left_padding_size();
  ::PROTOBUF_NAMESPACE_ID::int32 left_padding_size() const;
  void set_left_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_padding_size() const;
  void _internal_set_left_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 right_padding_size = 69;
  void clear_right_padding_size();
  ::PROTOBUF_NAMESPACE_ID::int32 right_padding_size() const;
  void set_right_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_right_padding_size() const;
  void _internal_set_right_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 top_padding_size = 70;
  void clear_top_padding_size();
  ::PROTOBUF_NAMESPACE_ID::int32 top_padding_size() const;
  void set_top_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_top_padding_size() const;
  void _internal_set_top_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bottom_padding_size = 71;
  void clear_bottom_padding_size();
  ::PROTOBUF_NAMESPACE_ID::int32 bottom_padding_size() const;
  void set_bottom_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bottom_padding_size() const;
  void _internal_set_bottom_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.AippOpParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > input_edge_idx_;
  mutable std::atomic<int> _input_edge_idx_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > var_reci_chn_0_;
  mutable std::atomic<int> _var_reci_chn_0_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > var_reci_chn_1_;
  mutable std::atomic<int> _var_reci_chn_1_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > var_reci_chn_2_;
  mutable std::atomic<int> _var_reci_chn_2_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > var_reci_chn_3_;
  mutable std::atomic<int> _var_reci_chn_3_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > matrix_r0c0_;
  mutable std::atomic<int> _matrix_r0c0_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > matrix_r0c1_;
  mutable std::atomic<int> _matrix_r0c1_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > matrix_r0c2_;
  mutable std::atomic<int> _matrix_r0c2_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > matrix_r1c0_;
  mutable std::atomic<int> _matrix_r1c0_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > matrix_r1c1_;
  mutable std::atomic<int> _matrix_r1c1_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > matrix_r1c2_;
  mutable std::atomic<int> _matrix_r1c2_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > matrix_r2c0_;
  mutable std::atomic<int> _matrix_r2c0_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > matrix_r2c1_;
  mutable std::atomic<int> _matrix_r2c1_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > matrix_r2c2_;
  mutable std::atomic<int> _matrix_r2c2_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > output_bias_0_;
  mutable std::atomic<int> _output_bias_0_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > output_bias_1_;
  mutable std::atomic<int> _output_bias_1_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > output_bias_2_;
  mutable std::atomic<int> _output_bias_2_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > input_bias_0_;
  mutable std::atomic<int> _input_bias_0_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > input_bias_1_;
  mutable std::atomic<int> _input_bias_1_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > input_bias_2_;
  mutable std::atomic<int> _input_bias_2_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr related_input_name_;
  int aipp_mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 related_input_rank_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_src_image_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 mean_chn_0_;
  ::PROTOBUF_NAMESPACE_ID::int32 mean_chn_1_;
  ::PROTOBUF_NAMESPACE_ID::int32 mean_chn_2_;
  float min_chn_0_;
  float min_chn_1_;
  float min_chn_2_;
  ::PROTOBUF_NAMESPACE_ID::int32 mean_chn_3_;
  float min_chn_3_;
  bool support_rotation_;
  bool csc_switch_;
  bool rbuv_swap_switch_;
  bool ax_swap_switch_;
  ::PROTOBUF_NAMESPACE_ID::uint32 raw_rgbir_to_f16_n_;
  int input_format_;
  float cpadding_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 src_image_size_w_;
  float padding_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 src_image_size_h_;
  ::PROTOBUF_NAMESPACE_ID::int32 load_start_pos_w_;
  ::PROTOBUF_NAMESPACE_ID::int32 load_start_pos_h_;
  bool single_line_mode_;
  bool crop_;
  bool resize_;
  bool padding_;
  ::PROTOBUF_NAMESPACE_ID::int32 crop_size_w_;
  ::PROTOBUF_NAMESPACE_ID::int32 crop_size_h_;
  ::PROTOBUF_NAMESPACE_ID::int32 resize_output_w_;
  ::PROTOBUF_NAMESPACE_ID::int32 resize_output_h_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_padding_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_padding_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 top_padding_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 bottom_padding_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_insert_5fop_2eproto;
};
// -------------------------------------------------------------------

class MultiShapeOpParams PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.MultiShapeOpParams) */ {
 public:
  inline MultiShapeOpParams() : MultiShapeOpParams(nullptr) {}
  virtual ~MultiShapeOpParams();

  MultiShapeOpParams(const MultiShapeOpParams& from);
  MultiShapeOpParams(MultiShapeOpParams&& from) noexcept
    : MultiShapeOpParams() {
    *this = ::std::move(from);
  }

  inline MultiShapeOpParams& operator=(const MultiShapeOpParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiShapeOpParams& operator=(MultiShapeOpParams&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MultiShapeOpParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MultiShapeOpParams* internal_default_instance() {
    return reinterpret_cast<const MultiShapeOpParams*>(
               &_MultiShapeOpParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MultiShapeOpParams& a, MultiShapeOpParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MultiShapeOpParams* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultiShapeOpParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MultiShapeOpParams* New() const final {
    return CreateMaybeMessage<MultiShapeOpParams>(nullptr);
  }

  MultiShapeOpParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MultiShapeOpParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MultiShapeOpParams& from);
  void MergeFrom(const MultiShapeOpParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MultiShapeOpParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.MultiShapeOpParams";
  }
  protected:
  explicit MultiShapeOpParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_insert_5fop_2eproto);
    return ::descriptor_table_insert_5fop_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MultiShapeOpParams_MultiShapeMode MultiShapeMode;
  static constexpr MultiShapeMode batch =
    MultiShapeOpParams_MultiShapeMode_batch;
  static constexpr MultiShapeMode resolution =
    MultiShapeOpParams_MultiShapeMode_resolution;
  static inline bool MultiShapeMode_IsValid(int value) {
    return MultiShapeOpParams_MultiShapeMode_IsValid(value);
  }
  static constexpr MultiShapeMode MultiShapeMode_MIN =
    MultiShapeOpParams_MultiShapeMode_MultiShapeMode_MIN;
  static constexpr MultiShapeMode MultiShapeMode_MAX =
    MultiShapeOpParams_MultiShapeMode_MultiShapeMode_MAX;
  static constexpr int MultiShapeMode_ARRAYSIZE =
    MultiShapeOpParams_MultiShapeMode_MultiShapeMode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MultiShapeMode_descriptor() {
    return MultiShapeOpParams_MultiShapeMode_descriptor();
  }
  template<typename T>
  static inline const std::string& MultiShapeMode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MultiShapeMode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MultiShapeMode_Name.");
    return MultiShapeOpParams_MultiShapeMode_Name(enum_t_value);
  }
  static inline bool MultiShapeMode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MultiShapeMode* value) {
    return MultiShapeOpParams_MultiShapeMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBatchListFieldNumber = 11,
    kModeFieldNumber = 1,
    kRelatedInputRankFieldNumber = 2,
  };
  // repeated uint32 batch_list = 11;
  int batch_list_size() const;
  private:
  int _internal_batch_list_size() const;
  public:
  void clear_batch_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_batch_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_batch_list() const;
  void _internal_add_batch_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_batch_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 batch_list(int index) const;
  void set_batch_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_batch_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      batch_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_batch_list();

  // .domi.MultiShapeOpParams.MultiShapeMode mode = 1;
  void clear_mode();
  ::domi::MultiShapeOpParams_MultiShapeMode mode() const;
  void set_mode(::domi::MultiShapeOpParams_MultiShapeMode value);
  private:
  ::domi::MultiShapeOpParams_MultiShapeMode _internal_mode() const;
  void _internal_set_mode(::domi::MultiShapeOpParams_MultiShapeMode value);
  public:

  // uint32 related_input_rank = 2;
  void clear_related_input_rank();
  ::PROTOBUF_NAMESPACE_ID::uint32 related_input_rank() const;
  void set_related_input_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_related_input_rank() const;
  void _internal_set_related_input_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.MultiShapeOpParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > batch_list_;
  mutable std::atomic<int> _batch_list_cached_byte_size_;
  int mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 related_input_rank_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_insert_5fop_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InsertNewOps

// repeated .domi.AippOpParams aipp_op = 1;
inline int InsertNewOps::_internal_aipp_op_size() const {
  return aipp_op_.size();
}
inline int InsertNewOps::aipp_op_size() const {
  return _internal_aipp_op_size();
}
inline void InsertNewOps::clear_aipp_op() {
  aipp_op_.Clear();
}
inline ::domi::AippOpParams* InsertNewOps::mutable_aipp_op(int index) {
  // @@protoc_insertion_point(field_mutable:domi.InsertNewOps.aipp_op)
  return aipp_op_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AippOpParams >*
InsertNewOps::mutable_aipp_op() {
  // @@protoc_insertion_point(field_mutable_list:domi.InsertNewOps.aipp_op)
  return &aipp_op_;
}
inline const ::domi::AippOpParams& InsertNewOps::_internal_aipp_op(int index) const {
  return aipp_op_.Get(index);
}
inline const ::domi::AippOpParams& InsertNewOps::aipp_op(int index) const {
  // @@protoc_insertion_point(field_get:domi.InsertNewOps.aipp_op)
  return _internal_aipp_op(index);
}
inline ::domi::AippOpParams* InsertNewOps::_internal_add_aipp_op() {
  return aipp_op_.Add();
}
inline ::domi::AippOpParams* InsertNewOps::add_aipp_op() {
  // @@protoc_insertion_point(field_add:domi.InsertNewOps.aipp_op)
  return _internal_add_aipp_op();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AippOpParams >&
InsertNewOps::aipp_op() const {
  // @@protoc_insertion_point(field_list:domi.InsertNewOps.aipp_op)
  return aipp_op_;
}

// repeated .domi.MultiShapeOpParams multi_shape_op = 2;
inline int InsertNewOps::_internal_multi_shape_op_size() const {
  return multi_shape_op_.size();
}
inline int InsertNewOps::multi_shape_op_size() const {
  return _internal_multi_shape_op_size();
}
inline void InsertNewOps::clear_multi_shape_op() {
  multi_shape_op_.Clear();
}
inline ::domi::MultiShapeOpParams* InsertNewOps::mutable_multi_shape_op(int index) {
  // @@protoc_insertion_point(field_mutable:domi.InsertNewOps.multi_shape_op)
  return multi_shape_op_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::MultiShapeOpParams >*
InsertNewOps::mutable_multi_shape_op() {
  // @@protoc_insertion_point(field_mutable_list:domi.InsertNewOps.multi_shape_op)
  return &multi_shape_op_;
}
inline const ::domi::MultiShapeOpParams& InsertNewOps::_internal_multi_shape_op(int index) const {
  return multi_shape_op_.Get(index);
}
inline const ::domi::MultiShapeOpParams& InsertNewOps::multi_shape_op(int index) const {
  // @@protoc_insertion_point(field_get:domi.InsertNewOps.multi_shape_op)
  return _internal_multi_shape_op(index);
}
inline ::domi::MultiShapeOpParams* InsertNewOps::_internal_add_multi_shape_op() {
  return multi_shape_op_.Add();
}
inline ::domi::MultiShapeOpParams* InsertNewOps::add_multi_shape_op() {
  // @@protoc_insertion_point(field_add:domi.InsertNewOps.multi_shape_op)
  return _internal_add_multi_shape_op();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::MultiShapeOpParams >&
InsertNewOps::multi_shape_op() const {
  // @@protoc_insertion_point(field_list:domi.InsertNewOps.multi_shape_op)
  return multi_shape_op_;
}

// -------------------------------------------------------------------

// AippOpParams

// .domi.AippOpParams.AippMode aipp_mode = 1;
inline void AippOpParams::clear_aipp_mode() {
  aipp_mode_ = 0;
}
inline ::domi::AippOpParams_AippMode AippOpParams::_internal_aipp_mode() const {
  return static_cast< ::domi::AippOpParams_AippMode >(aipp_mode_);
}
inline ::domi::AippOpParams_AippMode AippOpParams::aipp_mode() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.aipp_mode)
  return _internal_aipp_mode();
}
inline void AippOpParams::_internal_set_aipp_mode(::domi::AippOpParams_AippMode value) {
  
  aipp_mode_ = value;
}
inline void AippOpParams::set_aipp_mode(::domi::AippOpParams_AippMode value) {
  _internal_set_aipp_mode(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.aipp_mode)
}

// uint32 related_input_rank = 2;
inline void AippOpParams::clear_related_input_rank() {
  related_input_rank_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AippOpParams::_internal_related_input_rank() const {
  return related_input_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AippOpParams::related_input_rank() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.related_input_rank)
  return _internal_related_input_rank();
}
inline void AippOpParams::_internal_set_related_input_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  related_input_rank_ = value;
}
inline void AippOpParams::set_related_input_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_related_input_rank(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.related_input_rank)
}

// string related_input_name = 6;
inline void AippOpParams::clear_related_input_name() {
  related_input_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AippOpParams::related_input_name() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.related_input_name)
  return _internal_related_input_name();
}
inline void AippOpParams::set_related_input_name(const std::string& value) {
  _internal_set_related_input_name(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.related_input_name)
}
inline std::string* AippOpParams::mutable_related_input_name() {
  // @@protoc_insertion_point(field_mutable:domi.AippOpParams.related_input_name)
  return _internal_mutable_related_input_name();
}
inline const std::string& AippOpParams::_internal_related_input_name() const {
  return related_input_name_.Get();
}
inline void AippOpParams::_internal_set_related_input_name(const std::string& value) {
  
  related_input_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AippOpParams::set_related_input_name(std::string&& value) {
  
  related_input_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.AippOpParams.related_input_name)
}
inline void AippOpParams::set_related_input_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  related_input_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.AippOpParams.related_input_name)
}
inline void AippOpParams::set_related_input_name(const char* value,
    size_t size) {
  
  related_input_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.AippOpParams.related_input_name)
}
inline std::string* AippOpParams::_internal_mutable_related_input_name() {
  
  return related_input_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AippOpParams::release_related_input_name() {
  // @@protoc_insertion_point(field_release:domi.AippOpParams.related_input_name)
  return related_input_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AippOpParams::set_allocated_related_input_name(std::string* related_input_name) {
  if (related_input_name != nullptr) {
    
  } else {
    
  }
  related_input_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), related_input_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.AippOpParams.related_input_name)
}

// repeated uint32 input_edge_idx = 3;
inline int AippOpParams::_internal_input_edge_idx_size() const {
  return input_edge_idx_.size();
}
inline int AippOpParams::input_edge_idx_size() const {
  return _internal_input_edge_idx_size();
}
inline void AippOpParams::clear_input_edge_idx() {
  input_edge_idx_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AippOpParams::_internal_input_edge_idx(int index) const {
  return input_edge_idx_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AippOpParams::input_edge_idx(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.input_edge_idx)
  return _internal_input_edge_idx(index);
}
inline void AippOpParams::set_input_edge_idx(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  input_edge_idx_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.input_edge_idx)
}
inline void AippOpParams::_internal_add_input_edge_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  input_edge_idx_.Add(value);
}
inline void AippOpParams::add_input_edge_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_input_edge_idx(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.input_edge_idx)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
AippOpParams::_internal_input_edge_idx() const {
  return input_edge_idx_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
AippOpParams::input_edge_idx() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.input_edge_idx)
  return _internal_input_edge_idx();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
AippOpParams::_internal_mutable_input_edge_idx() {
  return &input_edge_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
AippOpParams::mutable_input_edge_idx() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.input_edge_idx)
  return _internal_mutable_input_edge_idx();
}

// uint32 max_src_image_size = 4;
inline void AippOpParams::clear_max_src_image_size() {
  max_src_image_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AippOpParams::_internal_max_src_image_size() const {
  return max_src_image_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AippOpParams::max_src_image_size() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.max_src_image_size)
  return _internal_max_src_image_size();
}
inline void AippOpParams::_internal_set_max_src_image_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_src_image_size_ = value;
}
inline void AippOpParams::set_max_src_image_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_src_image_size(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.max_src_image_size)
}

// bool support_rotation = 5;
inline void AippOpParams::clear_support_rotation() {
  support_rotation_ = false;
}
inline bool AippOpParams::_internal_support_rotation() const {
  return support_rotation_;
}
inline bool AippOpParams::support_rotation() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.support_rotation)
  return _internal_support_rotation();
}
inline void AippOpParams::_internal_set_support_rotation(bool value) {
  
  support_rotation_ = value;
}
inline void AippOpParams::set_support_rotation(bool value) {
  _internal_set_support_rotation(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.support_rotation)
}

// .domi.AippOpParams.InputFormat input_format = 51;
inline void AippOpParams::clear_input_format() {
  input_format_ = 0;
}
inline ::domi::AippOpParams_InputFormat AippOpParams::_internal_input_format() const {
  return static_cast< ::domi::AippOpParams_InputFormat >(input_format_);
}
inline ::domi::AippOpParams_InputFormat AippOpParams::input_format() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.input_format)
  return _internal_input_format();
}
inline void AippOpParams::_internal_set_input_format(::domi::AippOpParams_InputFormat value) {
  
  input_format_ = value;
}
inline void AippOpParams::set_input_format(::domi::AippOpParams_InputFormat value) {
  _internal_set_input_format(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.input_format)
}

// bool csc_switch = 52;
inline void AippOpParams::clear_csc_switch() {
  csc_switch_ = false;
}
inline bool AippOpParams::_internal_csc_switch() const {
  return csc_switch_;
}
inline bool AippOpParams::csc_switch() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.csc_switch)
  return _internal_csc_switch();
}
inline void AippOpParams::_internal_set_csc_switch(bool value) {
  
  csc_switch_ = value;
}
inline void AippOpParams::set_csc_switch(bool value) {
  _internal_set_csc_switch(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.csc_switch)
}

// float cpadding_value = 53;
inline void AippOpParams::clear_cpadding_value() {
  cpadding_value_ = 0;
}
inline float AippOpParams::_internal_cpadding_value() const {
  return cpadding_value_;
}
inline float AippOpParams::cpadding_value() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.cpadding_value)
  return _internal_cpadding_value();
}
inline void AippOpParams::_internal_set_cpadding_value(float value) {
  
  cpadding_value_ = value;
}
inline void AippOpParams::set_cpadding_value(float value) {
  _internal_set_cpadding_value(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.cpadding_value)
}

// bool rbuv_swap_switch = 54;
inline void AippOpParams::clear_rbuv_swap_switch() {
  rbuv_swap_switch_ = false;
}
inline bool AippOpParams::_internal_rbuv_swap_switch() const {
  return rbuv_swap_switch_;
}
inline bool AippOpParams::rbuv_swap_switch() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.rbuv_swap_switch)
  return _internal_rbuv_swap_switch();
}
inline void AippOpParams::_internal_set_rbuv_swap_switch(bool value) {
  
  rbuv_swap_switch_ = value;
}
inline void AippOpParams::set_rbuv_swap_switch(bool value) {
  _internal_set_rbuv_swap_switch(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.rbuv_swap_switch)
}

// bool ax_swap_switch = 55;
inline void AippOpParams::clear_ax_swap_switch() {
  ax_swap_switch_ = false;
}
inline bool AippOpParams::_internal_ax_swap_switch() const {
  return ax_swap_switch_;
}
inline bool AippOpParams::ax_swap_switch() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.ax_swap_switch)
  return _internal_ax_swap_switch();
}
inline void AippOpParams::_internal_set_ax_swap_switch(bool value) {
  
  ax_swap_switch_ = value;
}
inline void AippOpParams::set_ax_swap_switch(bool value) {
  _internal_set_ax_swap_switch(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.ax_swap_switch)
}

// bool single_line_mode = 56;
inline void AippOpParams::clear_single_line_mode() {
  single_line_mode_ = false;
}
inline bool AippOpParams::_internal_single_line_mode() const {
  return single_line_mode_;
}
inline bool AippOpParams::single_line_mode() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.single_line_mode)
  return _internal_single_line_mode();
}
inline void AippOpParams::_internal_set_single_line_mode(bool value) {
  
  single_line_mode_ = value;
}
inline void AippOpParams::set_single_line_mode(bool value) {
  _internal_set_single_line_mode(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.single_line_mode)
}

// int32 src_image_size_w = 57;
inline void AippOpParams::clear_src_image_size_w() {
  src_image_size_w_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_src_image_size_w() const {
  return src_image_size_w_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::src_image_size_w() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.src_image_size_w)
  return _internal_src_image_size_w();
}
inline void AippOpParams::_internal_set_src_image_size_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  src_image_size_w_ = value;
}
inline void AippOpParams::set_src_image_size_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_src_image_size_w(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.src_image_size_w)
}

// int32 src_image_size_h = 58;
inline void AippOpParams::clear_src_image_size_h() {
  src_image_size_h_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_src_image_size_h() const {
  return src_image_size_h_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::src_image_size_h() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.src_image_size_h)
  return _internal_src_image_size_h();
}
inline void AippOpParams::_internal_set_src_image_size_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  src_image_size_h_ = value;
}
inline void AippOpParams::set_src_image_size_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_src_image_size_h(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.src_image_size_h)
}

// bool crop = 59;
inline void AippOpParams::clear_crop() {
  crop_ = false;
}
inline bool AippOpParams::_internal_crop() const {
  return crop_;
}
inline bool AippOpParams::crop() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.crop)
  return _internal_crop();
}
inline void AippOpParams::_internal_set_crop(bool value) {
  
  crop_ = value;
}
inline void AippOpParams::set_crop(bool value) {
  _internal_set_crop(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.crop)
}

// int32 load_start_pos_w = 60;
inline void AippOpParams::clear_load_start_pos_w() {
  load_start_pos_w_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_load_start_pos_w() const {
  return load_start_pos_w_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::load_start_pos_w() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.load_start_pos_w)
  return _internal_load_start_pos_w();
}
inline void AippOpParams::_internal_set_load_start_pos_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  load_start_pos_w_ = value;
}
inline void AippOpParams::set_load_start_pos_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_load_start_pos_w(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.load_start_pos_w)
}

// int32 load_start_pos_h = 61;
inline void AippOpParams::clear_load_start_pos_h() {
  load_start_pos_h_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_load_start_pos_h() const {
  return load_start_pos_h_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::load_start_pos_h() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.load_start_pos_h)
  return _internal_load_start_pos_h();
}
inline void AippOpParams::_internal_set_load_start_pos_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  load_start_pos_h_ = value;
}
inline void AippOpParams::set_load_start_pos_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_load_start_pos_h(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.load_start_pos_h)
}

// int32 crop_size_w = 62;
inline void AippOpParams::clear_crop_size_w() {
  crop_size_w_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_crop_size_w() const {
  return crop_size_w_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::crop_size_w() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.crop_size_w)
  return _internal_crop_size_w();
}
inline void AippOpParams::_internal_set_crop_size_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  crop_size_w_ = value;
}
inline void AippOpParams::set_crop_size_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_crop_size_w(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.crop_size_w)
}

// int32 crop_size_h = 63;
inline void AippOpParams::clear_crop_size_h() {
  crop_size_h_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_crop_size_h() const {
  return crop_size_h_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::crop_size_h() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.crop_size_h)
  return _internal_crop_size_h();
}
inline void AippOpParams::_internal_set_crop_size_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  crop_size_h_ = value;
}
inline void AippOpParams::set_crop_size_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_crop_size_h(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.crop_size_h)
}

// bool resize = 64;
inline void AippOpParams::clear_resize() {
  resize_ = false;
}
inline bool AippOpParams::_internal_resize() const {
  return resize_;
}
inline bool AippOpParams::resize() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.resize)
  return _internal_resize();
}
inline void AippOpParams::_internal_set_resize(bool value) {
  
  resize_ = value;
}
inline void AippOpParams::set_resize(bool value) {
  _internal_set_resize(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.resize)
}

// int32 resize_output_w = 65;
inline void AippOpParams::clear_resize_output_w() {
  resize_output_w_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_resize_output_w() const {
  return resize_output_w_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::resize_output_w() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.resize_output_w)
  return _internal_resize_output_w();
}
inline void AippOpParams::_internal_set_resize_output_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  resize_output_w_ = value;
}
inline void AippOpParams::set_resize_output_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_resize_output_w(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.resize_output_w)
}

// int32 resize_output_h = 66;
inline void AippOpParams::clear_resize_output_h() {
  resize_output_h_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_resize_output_h() const {
  return resize_output_h_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::resize_output_h() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.resize_output_h)
  return _internal_resize_output_h();
}
inline void AippOpParams::_internal_set_resize_output_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  resize_output_h_ = value;
}
inline void AippOpParams::set_resize_output_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_resize_output_h(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.resize_output_h)
}

// bool padding = 67;
inline void AippOpParams::clear_padding() {
  padding_ = false;
}
inline bool AippOpParams::_internal_padding() const {
  return padding_;
}
inline bool AippOpParams::padding() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.padding)
  return _internal_padding();
}
inline void AippOpParams::_internal_set_padding(bool value) {
  
  padding_ = value;
}
inline void AippOpParams::set_padding(bool value) {
  _internal_set_padding(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.padding)
}

// int32 left_padding_size = 68;
inline void AippOpParams::clear_left_padding_size() {
  left_padding_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_left_padding_size() const {
  return left_padding_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::left_padding_size() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.left_padding_size)
  return _internal_left_padding_size();
}
inline void AippOpParams::_internal_set_left_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  left_padding_size_ = value;
}
inline void AippOpParams::set_left_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_padding_size(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.left_padding_size)
}

// int32 right_padding_size = 69;
inline void AippOpParams::clear_right_padding_size() {
  right_padding_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_right_padding_size() const {
  return right_padding_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::right_padding_size() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.right_padding_size)
  return _internal_right_padding_size();
}
inline void AippOpParams::_internal_set_right_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  right_padding_size_ = value;
}
inline void AippOpParams::set_right_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_right_padding_size(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.right_padding_size)
}

// int32 top_padding_size = 70;
inline void AippOpParams::clear_top_padding_size() {
  top_padding_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_top_padding_size() const {
  return top_padding_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::top_padding_size() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.top_padding_size)
  return _internal_top_padding_size();
}
inline void AippOpParams::_internal_set_top_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  top_padding_size_ = value;
}
inline void AippOpParams::set_top_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_top_padding_size(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.top_padding_size)
}

// int32 bottom_padding_size = 71;
inline void AippOpParams::clear_bottom_padding_size() {
  bottom_padding_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_bottom_padding_size() const {
  return bottom_padding_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::bottom_padding_size() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.bottom_padding_size)
  return _internal_bottom_padding_size();
}
inline void AippOpParams::_internal_set_bottom_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bottom_padding_size_ = value;
}
inline void AippOpParams::set_bottom_padding_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bottom_padding_size(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.bottom_padding_size)
}

// float padding_value = 72;
inline void AippOpParams::clear_padding_value() {
  padding_value_ = 0;
}
inline float AippOpParams::_internal_padding_value() const {
  return padding_value_;
}
inline float AippOpParams::padding_value() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.padding_value)
  return _internal_padding_value();
}
inline void AippOpParams::_internal_set_padding_value(float value) {
  
  padding_value_ = value;
}
inline void AippOpParams::set_padding_value(float value) {
  _internal_set_padding_value(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.padding_value)
}

// int32 mean_chn_0 = 10;
inline void AippOpParams::clear_mean_chn_0() {
  mean_chn_0_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_mean_chn_0() const {
  return mean_chn_0_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::mean_chn_0() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.mean_chn_0)
  return _internal_mean_chn_0();
}
inline void AippOpParams::_internal_set_mean_chn_0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mean_chn_0_ = value;
}
inline void AippOpParams::set_mean_chn_0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mean_chn_0(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.mean_chn_0)
}

// int32 mean_chn_1 = 11;
inline void AippOpParams::clear_mean_chn_1() {
  mean_chn_1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_mean_chn_1() const {
  return mean_chn_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::mean_chn_1() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.mean_chn_1)
  return _internal_mean_chn_1();
}
inline void AippOpParams::_internal_set_mean_chn_1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mean_chn_1_ = value;
}
inline void AippOpParams::set_mean_chn_1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mean_chn_1(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.mean_chn_1)
}

// int32 mean_chn_2 = 12;
inline void AippOpParams::clear_mean_chn_2() {
  mean_chn_2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_mean_chn_2() const {
  return mean_chn_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::mean_chn_2() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.mean_chn_2)
  return _internal_mean_chn_2();
}
inline void AippOpParams::_internal_set_mean_chn_2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mean_chn_2_ = value;
}
inline void AippOpParams::set_mean_chn_2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mean_chn_2(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.mean_chn_2)
}

// int32 mean_chn_3 = 19;
inline void AippOpParams::clear_mean_chn_3() {
  mean_chn_3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_mean_chn_3() const {
  return mean_chn_3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::mean_chn_3() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.mean_chn_3)
  return _internal_mean_chn_3();
}
inline void AippOpParams::_internal_set_mean_chn_3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mean_chn_3_ = value;
}
inline void AippOpParams::set_mean_chn_3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mean_chn_3(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.mean_chn_3)
}

// float min_chn_0 = 13;
inline void AippOpParams::clear_min_chn_0() {
  min_chn_0_ = 0;
}
inline float AippOpParams::_internal_min_chn_0() const {
  return min_chn_0_;
}
inline float AippOpParams::min_chn_0() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.min_chn_0)
  return _internal_min_chn_0();
}
inline void AippOpParams::_internal_set_min_chn_0(float value) {
  
  min_chn_0_ = value;
}
inline void AippOpParams::set_min_chn_0(float value) {
  _internal_set_min_chn_0(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.min_chn_0)
}

// float min_chn_1 = 14;
inline void AippOpParams::clear_min_chn_1() {
  min_chn_1_ = 0;
}
inline float AippOpParams::_internal_min_chn_1() const {
  return min_chn_1_;
}
inline float AippOpParams::min_chn_1() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.min_chn_1)
  return _internal_min_chn_1();
}
inline void AippOpParams::_internal_set_min_chn_1(float value) {
  
  min_chn_1_ = value;
}
inline void AippOpParams::set_min_chn_1(float value) {
  _internal_set_min_chn_1(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.min_chn_1)
}

// float min_chn_2 = 15;
inline void AippOpParams::clear_min_chn_2() {
  min_chn_2_ = 0;
}
inline float AippOpParams::_internal_min_chn_2() const {
  return min_chn_2_;
}
inline float AippOpParams::min_chn_2() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.min_chn_2)
  return _internal_min_chn_2();
}
inline void AippOpParams::_internal_set_min_chn_2(float value) {
  
  min_chn_2_ = value;
}
inline void AippOpParams::set_min_chn_2(float value) {
  _internal_set_min_chn_2(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.min_chn_2)
}

// float min_chn_3 = 20;
inline void AippOpParams::clear_min_chn_3() {
  min_chn_3_ = 0;
}
inline float AippOpParams::_internal_min_chn_3() const {
  return min_chn_3_;
}
inline float AippOpParams::min_chn_3() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.min_chn_3)
  return _internal_min_chn_3();
}
inline void AippOpParams::_internal_set_min_chn_3(float value) {
  
  min_chn_3_ = value;
}
inline void AippOpParams::set_min_chn_3(float value) {
  _internal_set_min_chn_3(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.min_chn_3)
}

// repeated float var_reci_chn_0 = 16;
inline int AippOpParams::_internal_var_reci_chn_0_size() const {
  return var_reci_chn_0_.size();
}
inline int AippOpParams::var_reci_chn_0_size() const {
  return _internal_var_reci_chn_0_size();
}
inline void AippOpParams::clear_var_reci_chn_0() {
  var_reci_chn_0_.Clear();
}
inline float AippOpParams::_internal_var_reci_chn_0(int index) const {
  return var_reci_chn_0_.Get(index);
}
inline float AippOpParams::var_reci_chn_0(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.var_reci_chn_0)
  return _internal_var_reci_chn_0(index);
}
inline void AippOpParams::set_var_reci_chn_0(int index, float value) {
  var_reci_chn_0_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.var_reci_chn_0)
}
inline void AippOpParams::_internal_add_var_reci_chn_0(float value) {
  var_reci_chn_0_.Add(value);
}
inline void AippOpParams::add_var_reci_chn_0(float value) {
  _internal_add_var_reci_chn_0(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.var_reci_chn_0)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AippOpParams::_internal_var_reci_chn_0() const {
  return var_reci_chn_0_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AippOpParams::var_reci_chn_0() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.var_reci_chn_0)
  return _internal_var_reci_chn_0();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AippOpParams::_internal_mutable_var_reci_chn_0() {
  return &var_reci_chn_0_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AippOpParams::mutable_var_reci_chn_0() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.var_reci_chn_0)
  return _internal_mutable_var_reci_chn_0();
}

// repeated float var_reci_chn_1 = 17;
inline int AippOpParams::_internal_var_reci_chn_1_size() const {
  return var_reci_chn_1_.size();
}
inline int AippOpParams::var_reci_chn_1_size() const {
  return _internal_var_reci_chn_1_size();
}
inline void AippOpParams::clear_var_reci_chn_1() {
  var_reci_chn_1_.Clear();
}
inline float AippOpParams::_internal_var_reci_chn_1(int index) const {
  return var_reci_chn_1_.Get(index);
}
inline float AippOpParams::var_reci_chn_1(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.var_reci_chn_1)
  return _internal_var_reci_chn_1(index);
}
inline void AippOpParams::set_var_reci_chn_1(int index, float value) {
  var_reci_chn_1_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.var_reci_chn_1)
}
inline void AippOpParams::_internal_add_var_reci_chn_1(float value) {
  var_reci_chn_1_.Add(value);
}
inline void AippOpParams::add_var_reci_chn_1(float value) {
  _internal_add_var_reci_chn_1(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.var_reci_chn_1)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AippOpParams::_internal_var_reci_chn_1() const {
  return var_reci_chn_1_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AippOpParams::var_reci_chn_1() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.var_reci_chn_1)
  return _internal_var_reci_chn_1();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AippOpParams::_internal_mutable_var_reci_chn_1() {
  return &var_reci_chn_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AippOpParams::mutable_var_reci_chn_1() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.var_reci_chn_1)
  return _internal_mutable_var_reci_chn_1();
}

// repeated float var_reci_chn_2 = 18;
inline int AippOpParams::_internal_var_reci_chn_2_size() const {
  return var_reci_chn_2_.size();
}
inline int AippOpParams::var_reci_chn_2_size() const {
  return _internal_var_reci_chn_2_size();
}
inline void AippOpParams::clear_var_reci_chn_2() {
  var_reci_chn_2_.Clear();
}
inline float AippOpParams::_internal_var_reci_chn_2(int index) const {
  return var_reci_chn_2_.Get(index);
}
inline float AippOpParams::var_reci_chn_2(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.var_reci_chn_2)
  return _internal_var_reci_chn_2(index);
}
inline void AippOpParams::set_var_reci_chn_2(int index, float value) {
  var_reci_chn_2_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.var_reci_chn_2)
}
inline void AippOpParams::_internal_add_var_reci_chn_2(float value) {
  var_reci_chn_2_.Add(value);
}
inline void AippOpParams::add_var_reci_chn_2(float value) {
  _internal_add_var_reci_chn_2(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.var_reci_chn_2)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AippOpParams::_internal_var_reci_chn_2() const {
  return var_reci_chn_2_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AippOpParams::var_reci_chn_2() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.var_reci_chn_2)
  return _internal_var_reci_chn_2();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AippOpParams::_internal_mutable_var_reci_chn_2() {
  return &var_reci_chn_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AippOpParams::mutable_var_reci_chn_2() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.var_reci_chn_2)
  return _internal_mutable_var_reci_chn_2();
}

// repeated float var_reci_chn_3 = 21;
inline int AippOpParams::_internal_var_reci_chn_3_size() const {
  return var_reci_chn_3_.size();
}
inline int AippOpParams::var_reci_chn_3_size() const {
  return _internal_var_reci_chn_3_size();
}
inline void AippOpParams::clear_var_reci_chn_3() {
  var_reci_chn_3_.Clear();
}
inline float AippOpParams::_internal_var_reci_chn_3(int index) const {
  return var_reci_chn_3_.Get(index);
}
inline float AippOpParams::var_reci_chn_3(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.var_reci_chn_3)
  return _internal_var_reci_chn_3(index);
}
inline void AippOpParams::set_var_reci_chn_3(int index, float value) {
  var_reci_chn_3_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.var_reci_chn_3)
}
inline void AippOpParams::_internal_add_var_reci_chn_3(float value) {
  var_reci_chn_3_.Add(value);
}
inline void AippOpParams::add_var_reci_chn_3(float value) {
  _internal_add_var_reci_chn_3(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.var_reci_chn_3)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AippOpParams::_internal_var_reci_chn_3() const {
  return var_reci_chn_3_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AippOpParams::var_reci_chn_3() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.var_reci_chn_3)
  return _internal_var_reci_chn_3();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AippOpParams::_internal_mutable_var_reci_chn_3() {
  return &var_reci_chn_3_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AippOpParams::mutable_var_reci_chn_3() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.var_reci_chn_3)
  return _internal_mutable_var_reci_chn_3();
}

// repeated int32 matrix_r0c0 = 30;
inline int AippOpParams::_internal_matrix_r0c0_size() const {
  return matrix_r0c0_.size();
}
inline int AippOpParams::matrix_r0c0_size() const {
  return _internal_matrix_r0c0_size();
}
inline void AippOpParams::clear_matrix_r0c0() {
  matrix_r0c0_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_matrix_r0c0(int index) const {
  return matrix_r0c0_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::matrix_r0c0(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.matrix_r0c0)
  return _internal_matrix_r0c0(index);
}
inline void AippOpParams::set_matrix_r0c0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r0c0_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.matrix_r0c0)
}
inline void AippOpParams::_internal_add_matrix_r0c0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r0c0_.Add(value);
}
inline void AippOpParams::add_matrix_r0c0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_matrix_r0c0(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.matrix_r0c0)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_matrix_r0c0() const {
  return matrix_r0c0_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::matrix_r0c0() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.matrix_r0c0)
  return _internal_matrix_r0c0();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_matrix_r0c0() {
  return &matrix_r0c0_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_matrix_r0c0() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.matrix_r0c0)
  return _internal_mutable_matrix_r0c0();
}

// repeated int32 matrix_r0c1 = 31;
inline int AippOpParams::_internal_matrix_r0c1_size() const {
  return matrix_r0c1_.size();
}
inline int AippOpParams::matrix_r0c1_size() const {
  return _internal_matrix_r0c1_size();
}
inline void AippOpParams::clear_matrix_r0c1() {
  matrix_r0c1_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_matrix_r0c1(int index) const {
  return matrix_r0c1_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::matrix_r0c1(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.matrix_r0c1)
  return _internal_matrix_r0c1(index);
}
inline void AippOpParams::set_matrix_r0c1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r0c1_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.matrix_r0c1)
}
inline void AippOpParams::_internal_add_matrix_r0c1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r0c1_.Add(value);
}
inline void AippOpParams::add_matrix_r0c1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_matrix_r0c1(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.matrix_r0c1)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_matrix_r0c1() const {
  return matrix_r0c1_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::matrix_r0c1() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.matrix_r0c1)
  return _internal_matrix_r0c1();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_matrix_r0c1() {
  return &matrix_r0c1_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_matrix_r0c1() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.matrix_r0c1)
  return _internal_mutable_matrix_r0c1();
}

// repeated int32 matrix_r0c2 = 32;
inline int AippOpParams::_internal_matrix_r0c2_size() const {
  return matrix_r0c2_.size();
}
inline int AippOpParams::matrix_r0c2_size() const {
  return _internal_matrix_r0c2_size();
}
inline void AippOpParams::clear_matrix_r0c2() {
  matrix_r0c2_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_matrix_r0c2(int index) const {
  return matrix_r0c2_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::matrix_r0c2(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.matrix_r0c2)
  return _internal_matrix_r0c2(index);
}
inline void AippOpParams::set_matrix_r0c2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r0c2_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.matrix_r0c2)
}
inline void AippOpParams::_internal_add_matrix_r0c2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r0c2_.Add(value);
}
inline void AippOpParams::add_matrix_r0c2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_matrix_r0c2(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.matrix_r0c2)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_matrix_r0c2() const {
  return matrix_r0c2_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::matrix_r0c2() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.matrix_r0c2)
  return _internal_matrix_r0c2();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_matrix_r0c2() {
  return &matrix_r0c2_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_matrix_r0c2() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.matrix_r0c2)
  return _internal_mutable_matrix_r0c2();
}

// repeated int32 matrix_r1c0 = 33;
inline int AippOpParams::_internal_matrix_r1c0_size() const {
  return matrix_r1c0_.size();
}
inline int AippOpParams::matrix_r1c0_size() const {
  return _internal_matrix_r1c0_size();
}
inline void AippOpParams::clear_matrix_r1c0() {
  matrix_r1c0_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_matrix_r1c0(int index) const {
  return matrix_r1c0_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::matrix_r1c0(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.matrix_r1c0)
  return _internal_matrix_r1c0(index);
}
inline void AippOpParams::set_matrix_r1c0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r1c0_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.matrix_r1c0)
}
inline void AippOpParams::_internal_add_matrix_r1c0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r1c0_.Add(value);
}
inline void AippOpParams::add_matrix_r1c0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_matrix_r1c0(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.matrix_r1c0)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_matrix_r1c0() const {
  return matrix_r1c0_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::matrix_r1c0() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.matrix_r1c0)
  return _internal_matrix_r1c0();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_matrix_r1c0() {
  return &matrix_r1c0_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_matrix_r1c0() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.matrix_r1c0)
  return _internal_mutable_matrix_r1c0();
}

// repeated int32 matrix_r1c1 = 34;
inline int AippOpParams::_internal_matrix_r1c1_size() const {
  return matrix_r1c1_.size();
}
inline int AippOpParams::matrix_r1c1_size() const {
  return _internal_matrix_r1c1_size();
}
inline void AippOpParams::clear_matrix_r1c1() {
  matrix_r1c1_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_matrix_r1c1(int index) const {
  return matrix_r1c1_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::matrix_r1c1(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.matrix_r1c1)
  return _internal_matrix_r1c1(index);
}
inline void AippOpParams::set_matrix_r1c1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r1c1_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.matrix_r1c1)
}
inline void AippOpParams::_internal_add_matrix_r1c1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r1c1_.Add(value);
}
inline void AippOpParams::add_matrix_r1c1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_matrix_r1c1(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.matrix_r1c1)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_matrix_r1c1() const {
  return matrix_r1c1_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::matrix_r1c1() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.matrix_r1c1)
  return _internal_matrix_r1c1();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_matrix_r1c1() {
  return &matrix_r1c1_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_matrix_r1c1() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.matrix_r1c1)
  return _internal_mutable_matrix_r1c1();
}

// repeated int32 matrix_r1c2 = 35;
inline int AippOpParams::_internal_matrix_r1c2_size() const {
  return matrix_r1c2_.size();
}
inline int AippOpParams::matrix_r1c2_size() const {
  return _internal_matrix_r1c2_size();
}
inline void AippOpParams::clear_matrix_r1c2() {
  matrix_r1c2_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_matrix_r1c2(int index) const {
  return matrix_r1c2_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::matrix_r1c2(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.matrix_r1c2)
  return _internal_matrix_r1c2(index);
}
inline void AippOpParams::set_matrix_r1c2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r1c2_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.matrix_r1c2)
}
inline void AippOpParams::_internal_add_matrix_r1c2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r1c2_.Add(value);
}
inline void AippOpParams::add_matrix_r1c2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_matrix_r1c2(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.matrix_r1c2)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_matrix_r1c2() const {
  return matrix_r1c2_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::matrix_r1c2() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.matrix_r1c2)
  return _internal_matrix_r1c2();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_matrix_r1c2() {
  return &matrix_r1c2_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_matrix_r1c2() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.matrix_r1c2)
  return _internal_mutable_matrix_r1c2();
}

// repeated int32 matrix_r2c0 = 36;
inline int AippOpParams::_internal_matrix_r2c0_size() const {
  return matrix_r2c0_.size();
}
inline int AippOpParams::matrix_r2c0_size() const {
  return _internal_matrix_r2c0_size();
}
inline void AippOpParams::clear_matrix_r2c0() {
  matrix_r2c0_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_matrix_r2c0(int index) const {
  return matrix_r2c0_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::matrix_r2c0(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.matrix_r2c0)
  return _internal_matrix_r2c0(index);
}
inline void AippOpParams::set_matrix_r2c0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r2c0_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.matrix_r2c0)
}
inline void AippOpParams::_internal_add_matrix_r2c0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r2c0_.Add(value);
}
inline void AippOpParams::add_matrix_r2c0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_matrix_r2c0(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.matrix_r2c0)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_matrix_r2c0() const {
  return matrix_r2c0_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::matrix_r2c0() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.matrix_r2c0)
  return _internal_matrix_r2c0();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_matrix_r2c0() {
  return &matrix_r2c0_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_matrix_r2c0() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.matrix_r2c0)
  return _internal_mutable_matrix_r2c0();
}

// repeated int32 matrix_r2c1 = 37;
inline int AippOpParams::_internal_matrix_r2c1_size() const {
  return matrix_r2c1_.size();
}
inline int AippOpParams::matrix_r2c1_size() const {
  return _internal_matrix_r2c1_size();
}
inline void AippOpParams::clear_matrix_r2c1() {
  matrix_r2c1_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_matrix_r2c1(int index) const {
  return matrix_r2c1_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::matrix_r2c1(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.matrix_r2c1)
  return _internal_matrix_r2c1(index);
}
inline void AippOpParams::set_matrix_r2c1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r2c1_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.matrix_r2c1)
}
inline void AippOpParams::_internal_add_matrix_r2c1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r2c1_.Add(value);
}
inline void AippOpParams::add_matrix_r2c1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_matrix_r2c1(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.matrix_r2c1)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_matrix_r2c1() const {
  return matrix_r2c1_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::matrix_r2c1() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.matrix_r2c1)
  return _internal_matrix_r2c1();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_matrix_r2c1() {
  return &matrix_r2c1_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_matrix_r2c1() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.matrix_r2c1)
  return _internal_mutable_matrix_r2c1();
}

// repeated int32 matrix_r2c2 = 38;
inline int AippOpParams::_internal_matrix_r2c2_size() const {
  return matrix_r2c2_.size();
}
inline int AippOpParams::matrix_r2c2_size() const {
  return _internal_matrix_r2c2_size();
}
inline void AippOpParams::clear_matrix_r2c2() {
  matrix_r2c2_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_matrix_r2c2(int index) const {
  return matrix_r2c2_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::matrix_r2c2(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.matrix_r2c2)
  return _internal_matrix_r2c2(index);
}
inline void AippOpParams::set_matrix_r2c2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r2c2_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.matrix_r2c2)
}
inline void AippOpParams::_internal_add_matrix_r2c2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  matrix_r2c2_.Add(value);
}
inline void AippOpParams::add_matrix_r2c2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_matrix_r2c2(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.matrix_r2c2)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_matrix_r2c2() const {
  return matrix_r2c2_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::matrix_r2c2() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.matrix_r2c2)
  return _internal_matrix_r2c2();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_matrix_r2c2() {
  return &matrix_r2c2_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_matrix_r2c2() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.matrix_r2c2)
  return _internal_mutable_matrix_r2c2();
}

// repeated int32 output_bias_0 = 39;
inline int AippOpParams::_internal_output_bias_0_size() const {
  return output_bias_0_.size();
}
inline int AippOpParams::output_bias_0_size() const {
  return _internal_output_bias_0_size();
}
inline void AippOpParams::clear_output_bias_0() {
  output_bias_0_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_output_bias_0(int index) const {
  return output_bias_0_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::output_bias_0(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.output_bias_0)
  return _internal_output_bias_0(index);
}
inline void AippOpParams::set_output_bias_0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  output_bias_0_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.output_bias_0)
}
inline void AippOpParams::_internal_add_output_bias_0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  output_bias_0_.Add(value);
}
inline void AippOpParams::add_output_bias_0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_output_bias_0(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.output_bias_0)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_output_bias_0() const {
  return output_bias_0_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::output_bias_0() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.output_bias_0)
  return _internal_output_bias_0();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_output_bias_0() {
  return &output_bias_0_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_output_bias_0() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.output_bias_0)
  return _internal_mutable_output_bias_0();
}

// repeated int32 output_bias_1 = 40;
inline int AippOpParams::_internal_output_bias_1_size() const {
  return output_bias_1_.size();
}
inline int AippOpParams::output_bias_1_size() const {
  return _internal_output_bias_1_size();
}
inline void AippOpParams::clear_output_bias_1() {
  output_bias_1_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_output_bias_1(int index) const {
  return output_bias_1_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::output_bias_1(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.output_bias_1)
  return _internal_output_bias_1(index);
}
inline void AippOpParams::set_output_bias_1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  output_bias_1_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.output_bias_1)
}
inline void AippOpParams::_internal_add_output_bias_1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  output_bias_1_.Add(value);
}
inline void AippOpParams::add_output_bias_1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_output_bias_1(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.output_bias_1)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_output_bias_1() const {
  return output_bias_1_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::output_bias_1() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.output_bias_1)
  return _internal_output_bias_1();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_output_bias_1() {
  return &output_bias_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_output_bias_1() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.output_bias_1)
  return _internal_mutable_output_bias_1();
}

// repeated int32 output_bias_2 = 41;
inline int AippOpParams::_internal_output_bias_2_size() const {
  return output_bias_2_.size();
}
inline int AippOpParams::output_bias_2_size() const {
  return _internal_output_bias_2_size();
}
inline void AippOpParams::clear_output_bias_2() {
  output_bias_2_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_output_bias_2(int index) const {
  return output_bias_2_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::output_bias_2(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.output_bias_2)
  return _internal_output_bias_2(index);
}
inline void AippOpParams::set_output_bias_2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  output_bias_2_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.output_bias_2)
}
inline void AippOpParams::_internal_add_output_bias_2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  output_bias_2_.Add(value);
}
inline void AippOpParams::add_output_bias_2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_output_bias_2(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.output_bias_2)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_output_bias_2() const {
  return output_bias_2_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::output_bias_2() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.output_bias_2)
  return _internal_output_bias_2();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_output_bias_2() {
  return &output_bias_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_output_bias_2() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.output_bias_2)
  return _internal_mutable_output_bias_2();
}

// repeated int32 input_bias_0 = 42;
inline int AippOpParams::_internal_input_bias_0_size() const {
  return input_bias_0_.size();
}
inline int AippOpParams::input_bias_0_size() const {
  return _internal_input_bias_0_size();
}
inline void AippOpParams::clear_input_bias_0() {
  input_bias_0_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_input_bias_0(int index) const {
  return input_bias_0_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::input_bias_0(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.input_bias_0)
  return _internal_input_bias_0(index);
}
inline void AippOpParams::set_input_bias_0(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  input_bias_0_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.input_bias_0)
}
inline void AippOpParams::_internal_add_input_bias_0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  input_bias_0_.Add(value);
}
inline void AippOpParams::add_input_bias_0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_input_bias_0(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.input_bias_0)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_input_bias_0() const {
  return input_bias_0_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::input_bias_0() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.input_bias_0)
  return _internal_input_bias_0();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_input_bias_0() {
  return &input_bias_0_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_input_bias_0() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.input_bias_0)
  return _internal_mutable_input_bias_0();
}

// repeated int32 input_bias_1 = 43;
inline int AippOpParams::_internal_input_bias_1_size() const {
  return input_bias_1_.size();
}
inline int AippOpParams::input_bias_1_size() const {
  return _internal_input_bias_1_size();
}
inline void AippOpParams::clear_input_bias_1() {
  input_bias_1_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_input_bias_1(int index) const {
  return input_bias_1_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::input_bias_1(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.input_bias_1)
  return _internal_input_bias_1(index);
}
inline void AippOpParams::set_input_bias_1(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  input_bias_1_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.input_bias_1)
}
inline void AippOpParams::_internal_add_input_bias_1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  input_bias_1_.Add(value);
}
inline void AippOpParams::add_input_bias_1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_input_bias_1(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.input_bias_1)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_input_bias_1() const {
  return input_bias_1_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::input_bias_1() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.input_bias_1)
  return _internal_input_bias_1();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_input_bias_1() {
  return &input_bias_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_input_bias_1() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.input_bias_1)
  return _internal_mutable_input_bias_1();
}

// repeated int32 input_bias_2 = 44;
inline int AippOpParams::_internal_input_bias_2_size() const {
  return input_bias_2_.size();
}
inline int AippOpParams::input_bias_2_size() const {
  return _internal_input_bias_2_size();
}
inline void AippOpParams::clear_input_bias_2() {
  input_bias_2_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::_internal_input_bias_2(int index) const {
  return input_bias_2_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AippOpParams::input_bias_2(int index) const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.input_bias_2)
  return _internal_input_bias_2(index);
}
inline void AippOpParams::set_input_bias_2(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  input_bias_2_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.input_bias_2)
}
inline void AippOpParams::_internal_add_input_bias_2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  input_bias_2_.Add(value);
}
inline void AippOpParams::add_input_bias_2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_input_bias_2(value);
  // @@protoc_insertion_point(field_add:domi.AippOpParams.input_bias_2)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::_internal_input_bias_2() const {
  return input_bias_2_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AippOpParams::input_bias_2() const {
  // @@protoc_insertion_point(field_list:domi.AippOpParams.input_bias_2)
  return _internal_input_bias_2();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::_internal_mutable_input_bias_2() {
  return &input_bias_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AippOpParams::mutable_input_bias_2() {
  // @@protoc_insertion_point(field_mutable_list:domi.AippOpParams.input_bias_2)
  return _internal_mutable_input_bias_2();
}

// uint32 raw_rgbir_to_f16_n = 45;
inline void AippOpParams::clear_raw_rgbir_to_f16_n() {
  raw_rgbir_to_f16_n_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AippOpParams::_internal_raw_rgbir_to_f16_n() const {
  return raw_rgbir_to_f16_n_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AippOpParams::raw_rgbir_to_f16_n() const {
  // @@protoc_insertion_point(field_get:domi.AippOpParams.raw_rgbir_to_f16_n)
  return _internal_raw_rgbir_to_f16_n();
}
inline void AippOpParams::_internal_set_raw_rgbir_to_f16_n(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  raw_rgbir_to_f16_n_ = value;
}
inline void AippOpParams::set_raw_rgbir_to_f16_n(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_raw_rgbir_to_f16_n(value);
  // @@protoc_insertion_point(field_set:domi.AippOpParams.raw_rgbir_to_f16_n)
}

// -------------------------------------------------------------------

// MultiShapeOpParams

// .domi.MultiShapeOpParams.MultiShapeMode mode = 1;
inline void MultiShapeOpParams::clear_mode() {
  mode_ = 0;
}
inline ::domi::MultiShapeOpParams_MultiShapeMode MultiShapeOpParams::_internal_mode() const {
  return static_cast< ::domi::MultiShapeOpParams_MultiShapeMode >(mode_);
}
inline ::domi::MultiShapeOpParams_MultiShapeMode MultiShapeOpParams::mode() const {
  // @@protoc_insertion_point(field_get:domi.MultiShapeOpParams.mode)
  return _internal_mode();
}
inline void MultiShapeOpParams::_internal_set_mode(::domi::MultiShapeOpParams_MultiShapeMode value) {
  
  mode_ = value;
}
inline void MultiShapeOpParams::set_mode(::domi::MultiShapeOpParams_MultiShapeMode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:domi.MultiShapeOpParams.mode)
}

// uint32 related_input_rank = 2;
inline void MultiShapeOpParams::clear_related_input_rank() {
  related_input_rank_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MultiShapeOpParams::_internal_related_input_rank() const {
  return related_input_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MultiShapeOpParams::related_input_rank() const {
  // @@protoc_insertion_point(field_get:domi.MultiShapeOpParams.related_input_rank)
  return _internal_related_input_rank();
}
inline void MultiShapeOpParams::_internal_set_related_input_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  related_input_rank_ = value;
}
inline void MultiShapeOpParams::set_related_input_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_related_input_rank(value);
  // @@protoc_insertion_point(field_set:domi.MultiShapeOpParams.related_input_rank)
}

// repeated uint32 batch_list = 11;
inline int MultiShapeOpParams::_internal_batch_list_size() const {
  return batch_list_.size();
}
inline int MultiShapeOpParams::batch_list_size() const {
  return _internal_batch_list_size();
}
inline void MultiShapeOpParams::clear_batch_list() {
  batch_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MultiShapeOpParams::_internal_batch_list(int index) const {
  return batch_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MultiShapeOpParams::batch_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.MultiShapeOpParams.batch_list)
  return _internal_batch_list(index);
}
inline void MultiShapeOpParams::set_batch_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  batch_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.MultiShapeOpParams.batch_list)
}
inline void MultiShapeOpParams::_internal_add_batch_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  batch_list_.Add(value);
}
inline void MultiShapeOpParams::add_batch_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_batch_list(value);
  // @@protoc_insertion_point(field_add:domi.MultiShapeOpParams.batch_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MultiShapeOpParams::_internal_batch_list() const {
  return batch_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MultiShapeOpParams::batch_list() const {
  // @@protoc_insertion_point(field_list:domi.MultiShapeOpParams.batch_list)
  return _internal_batch_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MultiShapeOpParams::_internal_mutable_batch_list() {
  return &batch_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MultiShapeOpParams::mutable_batch_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.MultiShapeOpParams.batch_list)
  return _internal_mutable_batch_list();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace domi

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::domi::AippOpParams_InputFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::domi::AippOpParams_InputFormat>() {
  return ::domi::AippOpParams_InputFormat_descriptor();
}
template <> struct is_proto_enum< ::domi::AippOpParams_AippMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::domi::AippOpParams_AippMode>() {
  return ::domi::AippOpParams_AippMode_descriptor();
}
template <> struct is_proto_enum< ::domi::MultiShapeOpParams_MultiShapeMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::domi::MultiShapeOpParams_MultiShapeMode>() {
  return ::domi::MultiShapeOpParams_MultiShapeMode_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_insert_5fop_2eproto
