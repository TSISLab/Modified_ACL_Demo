// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: task.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_task_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_task_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_task_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_task_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[59]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_task_2eproto;
namespace domi {
class AdditionalDataDef;
class AdditionalDataDefDefaultTypeInternal;
extern AdditionalDataDefDefaultTypeInternal _AdditionalDataDef_default_instance_;
class ArgsInfo;
class ArgsInfoDefaultTypeInternal;
extern ArgsInfoDefaultTypeInternal _ArgsInfo_default_instance_;
class AutoThreadAicAivDef;
class AutoThreadAicAivDefDefaultTypeInternal;
extern AutoThreadAicAivDefDefaultTypeInternal _AutoThreadAicAivDef_default_instance_;
class AutoThreadCacheDef;
class AutoThreadCacheDefDefaultTypeInternal;
extern AutoThreadCacheDefDefaultTypeInternal _AutoThreadCacheDef_default_instance_;
class AutoThreadPrefetchDef;
class AutoThreadPrefetchDefDefaultTypeInternal;
extern AutoThreadPrefetchDefDefaultTypeInternal _AutoThreadPrefetchDef_default_instance_;
class CmoBarrierInfoDef;
class CmoBarrierInfoDefDefaultTypeInternal;
extern CmoBarrierInfoDefDefaultTypeInternal _CmoBarrierInfoDef_default_instance_;
class CmoBarrierTaskDef;
class CmoBarrierTaskDefDefaultTypeInternal;
extern CmoBarrierTaskDefDefaultTypeInternal _CmoBarrierTaskDef_default_instance_;
class CmoTaskDef;
class CmoTaskDefDefaultTypeInternal;
extern CmoTaskDefDefaultTypeInternal _CmoTaskDef_default_instance_;
class DSATaskArgsDef;
class DSATaskArgsDefDefaultTypeInternal;
extern DSATaskArgsDefDefaultTypeInternal _DSATaskArgsDef_default_instance_;
class DSATaskDef;
class DSATaskDefDefaultTypeInternal;
extern DSATaskDefDefaultTypeInternal _DSATaskDef_default_instance_;
class DvppTaskDef;
class DvppTaskDefDefaultTypeInternal;
extern DvppTaskDefDefaultTypeInternal _DvppTaskDef_default_instance_;
class EventExDef;
class EventExDefDefaultTypeInternal;
extern EventExDefDefaultTypeInternal _EventExDef_default_instance_;
class FftsDescInfoDef;
class FftsDescInfoDefDefaultTypeInternal;
extern FftsDescInfoDefDefaultTypeInternal _FftsDescInfoDef_default_instance_;
class FftsPlusAicAivCtxDef;
class FftsPlusAicAivCtxDefDefaultTypeInternal;
extern FftsPlusAicAivCtxDefDefaultTypeInternal _FftsPlusAicAivCtxDef_default_instance_;
class FftsPlusAicpuCtxDef;
class FftsPlusAicpuCtxDefDefaultTypeInternal;
extern FftsPlusAicpuCtxDefDefaultTypeInternal _FftsPlusAicpuCtxDef_default_instance_;
class FftsPlusAtEndCtxDef;
class FftsPlusAtEndCtxDefDefaultTypeInternal;
extern FftsPlusAtEndCtxDefDefaultTypeInternal _FftsPlusAtEndCtxDef_default_instance_;
class FftsPlusAtStartCtxDef;
class FftsPlusAtStartCtxDefDefaultTypeInternal;
extern FftsPlusAtStartCtxDefDefaultTypeInternal _FftsPlusAtStartCtxDef_default_instance_;
class FftsPlusCachePersistCtxDef;
class FftsPlusCachePersistCtxDefDefaultTypeInternal;
extern FftsPlusCachePersistCtxDefDefaultTypeInternal _FftsPlusCachePersistCtxDef_default_instance_;
class FftsPlusCaseDefaultCtxDef;
class FftsPlusCaseDefaultCtxDefDefaultTypeInternal;
extern FftsPlusCaseDefaultCtxDefDefaultTypeInternal _FftsPlusCaseDefaultCtxDef_default_instance_;
class FftsPlusCaseSwitchCtxDef;
class FftsPlusCaseSwitchCtxDefDefaultTypeInternal;
extern FftsPlusCaseSwitchCtxDefDefaultTypeInternal _FftsPlusCaseSwitchCtxDef_default_instance_;
class FftsPlusCondSwitchCtxDef;
class FftsPlusCondSwitchCtxDefDefaultTypeInternal;
extern FftsPlusCondSwitchCtxDefDefaultTypeInternal _FftsPlusCondSwitchCtxDef_default_instance_;
class FftsPlusCtxDef;
class FftsPlusCtxDefDefaultTypeInternal;
extern FftsPlusCtxDefDefaultTypeInternal _FftsPlusCtxDef_default_instance_;
class FftsPlusDataCtxDef;
class FftsPlusDataCtxDefDefaultTypeInternal;
extern FftsPlusDataCtxDefDefaultTypeInternal _FftsPlusDataCtxDef_default_instance_;
class FftsPlusDsaCtxDef;
class FftsPlusDsaCtxDefDefaultTypeInternal;
extern FftsPlusDsaCtxDefDefaultTypeInternal _FftsPlusDsaCtxDef_default_instance_;
class FftsPlusLabelCtxDef;
class FftsPlusLabelCtxDefDefaultTypeInternal;
extern FftsPlusLabelCtxDefDefaultTypeInternal _FftsPlusLabelCtxDef_default_instance_;
class FftsPlusMixAicAivCtxDef;
class FftsPlusMixAicAivCtxDefDefaultTypeInternal;
extern FftsPlusMixAicAivCtxDefDefaultTypeInternal _FftsPlusMixAicAivCtxDef_default_instance_;
class FftsPlusNotifyCtxDef;
class FftsPlusNotifyCtxDefDefaultTypeInternal;
extern FftsPlusNotifyCtxDefDefaultTypeInternal _FftsPlusNotifyCtxDef_default_instance_;
class FftsPlusSdmaCtxDef;
class FftsPlusSdmaCtxDefDefaultTypeInternal;
extern FftsPlusSdmaCtxDefDefaultTypeInternal _FftsPlusSdmaCtxDef_default_instance_;
class FftsPlusSqeDef;
class FftsPlusSqeDefDefaultTypeInternal;
extern FftsPlusSqeDefDefaultTypeInternal _FftsPlusSqeDef_default_instance_;
class FftsPlusTaskDef;
class FftsPlusTaskDefDefaultTypeInternal;
extern FftsPlusTaskDefDefaultTypeInternal _FftsPlusTaskDef_default_instance_;
class FftsPlusWriteValueCtxDef;
class FftsPlusWriteValueCtxDefDefaultTypeInternal;
extern FftsPlusWriteValueCtxDefDefaultTypeInternal _FftsPlusWriteValueCtxDef_default_instance_;
class FftsSubTaskDef;
class FftsSubTaskDefDefaultTypeInternal;
extern FftsSubTaskDefDefaultTypeInternal _FftsSubTaskDef_default_instance_;
class FftsTaskDef;
class FftsTaskDefDefaultTypeInternal;
extern FftsTaskDefDefaultTypeInternal _FftsTaskDef_default_instance_;
class KernelContext;
class KernelContextDefaultTypeInternal;
extern KernelContextDefaultTypeInternal _KernelContext_default_instance_;
class KernelDef;
class KernelDefDefaultTypeInternal;
extern KernelDefDefaultTypeInternal _KernelDef_default_instance_;
class KernelDefWithHandle;
class KernelDefWithHandleDefaultTypeInternal;
extern KernelDefWithHandleDefaultTypeInternal _KernelDefWithHandle_default_instance_;
class KernelExDef;
class KernelExDefDefaultTypeInternal;
extern KernelExDefDefaultTypeInternal _KernelExDef_default_instance_;
class KernelHcclDef;
class KernelHcclDefDefaultTypeInternal;
extern KernelHcclDefDefaultTypeInternal _KernelHcclDef_default_instance_;
class LabelGotoExDef;
class LabelGotoExDefDefaultTypeInternal;
extern LabelGotoExDefDefaultTypeInternal _LabelGotoExDef_default_instance_;
class LabelSetDef;
class LabelSetDefDefaultTypeInternal;
extern LabelSetDefDefaultTypeInternal _LabelSetDef_default_instance_;
class LabelSwitchByIndexDef;
class LabelSwitchByIndexDefDefaultTypeInternal;
extern LabelSwitchByIndexDefDefaultTypeInternal _LabelSwitchByIndexDef_default_instance_;
class LogTimeStampDef;
class LogTimeStampDefDefaultTypeInternal;
extern LogTimeStampDefDefaultTypeInternal _LogTimeStampDef_default_instance_;
class ManualThreadAicAivDef;
class ManualThreadAicAivDefDefaultTypeInternal;
extern ManualThreadAicAivDefDefaultTypeInternal _ManualThreadAicAivDef_default_instance_;
class ManualThreadCacheDef;
class ManualThreadCacheDefDefaultTypeInternal;
extern ManualThreadCacheDefDefaultTypeInternal _ManualThreadCacheDef_default_instance_;
class ManualThreadDependencyDef;
class ManualThreadDependencyDefDefaultTypeInternal;
extern ManualThreadDependencyDefDefaultTypeInternal _ManualThreadDependencyDef_default_instance_;
class ManualThreadDmuDef;
class ManualThreadDmuDefDefaultTypeInternal;
extern ManualThreadDmuDefDefaultTypeInternal _ManualThreadDmuDef_default_instance_;
class ManualThreadNopDef;
class ManualThreadNopDefDefaultTypeInternal;
extern ManualThreadNopDefDefaultTypeInternal _ManualThreadNopDef_default_instance_;
class MemcpyAsyncDef;
class MemcpyAsyncDefDefaultTypeInternal;
extern MemcpyAsyncDefDefaultTypeInternal _MemcpyAsyncDef_default_instance_;
class ModelTaskDef;
class ModelTaskDefDefaultTypeInternal;
extern ModelTaskDefDefaultTypeInternal _ModelTaskDef_default_instance_;
class ModelTaskDef_AttrEntry_DoNotUse;
class ModelTaskDef_AttrEntry_DoNotUseDefaultTypeInternal;
extern ModelTaskDef_AttrEntry_DoNotUseDefaultTypeInternal _ModelTaskDef_AttrEntry_DoNotUse_default_instance_;
class NpuClearFloatStatusDef;
class NpuClearFloatStatusDefDefaultTypeInternal;
extern NpuClearFloatStatusDefDefaultTypeInternal _NpuClearFloatStatusDef_default_instance_;
class NpuGetFloatStatusDef;
class NpuGetFloatStatusDefDefaultTypeInternal;
extern NpuGetFloatStatusDefDefaultTypeInternal _NpuGetFloatStatusDef_default_instance_;
class StarsSqeHeaderDef;
class StarsSqeHeaderDefDefaultTypeInternal;
extern StarsSqeHeaderDefDefaultTypeInternal _StarsSqeHeaderDef_default_instance_;
class StreamActiveDef;
class StreamActiveDefDefaultTypeInternal;
extern StreamActiveDefDefaultTypeInternal _StreamActiveDef_default_instance_;
class StreamSwitchDef;
class StreamSwitchDefDefaultTypeInternal;
extern StreamSwitchDefDefaultTypeInternal _StreamSwitchDef_default_instance_;
class StreamSwitchNDef;
class StreamSwitchNDefDefaultTypeInternal;
extern StreamSwitchNDefDefaultTypeInternal _StreamSwitchNDef_default_instance_;
class TaskDef;
class TaskDefDefaultTypeInternal;
extern TaskDefDefaultTypeInternal _TaskDef_default_instance_;
class TicketCacheDef;
class TicketCacheDefDefaultTypeInternal;
extern TicketCacheDefDefaultTypeInternal _TicketCacheDef_default_instance_;
class aicpuKernelDef;
class aicpuKernelDefDefaultTypeInternal;
extern aicpuKernelDefDefaultTypeInternal _aicpuKernelDef_default_instance_;
}  // namespace domi
PROTOBUF_NAMESPACE_OPEN
template<> ::domi::AdditionalDataDef* Arena::CreateMaybeMessage<::domi::AdditionalDataDef>(Arena*);
template<> ::domi::ArgsInfo* Arena::CreateMaybeMessage<::domi::ArgsInfo>(Arena*);
template<> ::domi::AutoThreadAicAivDef* Arena::CreateMaybeMessage<::domi::AutoThreadAicAivDef>(Arena*);
template<> ::domi::AutoThreadCacheDef* Arena::CreateMaybeMessage<::domi::AutoThreadCacheDef>(Arena*);
template<> ::domi::AutoThreadPrefetchDef* Arena::CreateMaybeMessage<::domi::AutoThreadPrefetchDef>(Arena*);
template<> ::domi::CmoBarrierInfoDef* Arena::CreateMaybeMessage<::domi::CmoBarrierInfoDef>(Arena*);
template<> ::domi::CmoBarrierTaskDef* Arena::CreateMaybeMessage<::domi::CmoBarrierTaskDef>(Arena*);
template<> ::domi::CmoTaskDef* Arena::CreateMaybeMessage<::domi::CmoTaskDef>(Arena*);
template<> ::domi::DSATaskArgsDef* Arena::CreateMaybeMessage<::domi::DSATaskArgsDef>(Arena*);
template<> ::domi::DSATaskDef* Arena::CreateMaybeMessage<::domi::DSATaskDef>(Arena*);
template<> ::domi::DvppTaskDef* Arena::CreateMaybeMessage<::domi::DvppTaskDef>(Arena*);
template<> ::domi::EventExDef* Arena::CreateMaybeMessage<::domi::EventExDef>(Arena*);
template<> ::domi::FftsDescInfoDef* Arena::CreateMaybeMessage<::domi::FftsDescInfoDef>(Arena*);
template<> ::domi::FftsPlusAicAivCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusAicAivCtxDef>(Arena*);
template<> ::domi::FftsPlusAicpuCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusAicpuCtxDef>(Arena*);
template<> ::domi::FftsPlusAtEndCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusAtEndCtxDef>(Arena*);
template<> ::domi::FftsPlusAtStartCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusAtStartCtxDef>(Arena*);
template<> ::domi::FftsPlusCachePersistCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusCachePersistCtxDef>(Arena*);
template<> ::domi::FftsPlusCaseDefaultCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusCaseDefaultCtxDef>(Arena*);
template<> ::domi::FftsPlusCaseSwitchCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusCaseSwitchCtxDef>(Arena*);
template<> ::domi::FftsPlusCondSwitchCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusCondSwitchCtxDef>(Arena*);
template<> ::domi::FftsPlusCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusCtxDef>(Arena*);
template<> ::domi::FftsPlusDataCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusDataCtxDef>(Arena*);
template<> ::domi::FftsPlusDsaCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusDsaCtxDef>(Arena*);
template<> ::domi::FftsPlusLabelCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusLabelCtxDef>(Arena*);
template<> ::domi::FftsPlusMixAicAivCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusMixAicAivCtxDef>(Arena*);
template<> ::domi::FftsPlusNotifyCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusNotifyCtxDef>(Arena*);
template<> ::domi::FftsPlusSdmaCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusSdmaCtxDef>(Arena*);
template<> ::domi::FftsPlusSqeDef* Arena::CreateMaybeMessage<::domi::FftsPlusSqeDef>(Arena*);
template<> ::domi::FftsPlusTaskDef* Arena::CreateMaybeMessage<::domi::FftsPlusTaskDef>(Arena*);
template<> ::domi::FftsPlusWriteValueCtxDef* Arena::CreateMaybeMessage<::domi::FftsPlusWriteValueCtxDef>(Arena*);
template<> ::domi::FftsSubTaskDef* Arena::CreateMaybeMessage<::domi::FftsSubTaskDef>(Arena*);
template<> ::domi::FftsTaskDef* Arena::CreateMaybeMessage<::domi::FftsTaskDef>(Arena*);
template<> ::domi::KernelContext* Arena::CreateMaybeMessage<::domi::KernelContext>(Arena*);
template<> ::domi::KernelDef* Arena::CreateMaybeMessage<::domi::KernelDef>(Arena*);
template<> ::domi::KernelDefWithHandle* Arena::CreateMaybeMessage<::domi::KernelDefWithHandle>(Arena*);
template<> ::domi::KernelExDef* Arena::CreateMaybeMessage<::domi::KernelExDef>(Arena*);
template<> ::domi::KernelHcclDef* Arena::CreateMaybeMessage<::domi::KernelHcclDef>(Arena*);
template<> ::domi::LabelGotoExDef* Arena::CreateMaybeMessage<::domi::LabelGotoExDef>(Arena*);
template<> ::domi::LabelSetDef* Arena::CreateMaybeMessage<::domi::LabelSetDef>(Arena*);
template<> ::domi::LabelSwitchByIndexDef* Arena::CreateMaybeMessage<::domi::LabelSwitchByIndexDef>(Arena*);
template<> ::domi::LogTimeStampDef* Arena::CreateMaybeMessage<::domi::LogTimeStampDef>(Arena*);
template<> ::domi::ManualThreadAicAivDef* Arena::CreateMaybeMessage<::domi::ManualThreadAicAivDef>(Arena*);
template<> ::domi::ManualThreadCacheDef* Arena::CreateMaybeMessage<::domi::ManualThreadCacheDef>(Arena*);
template<> ::domi::ManualThreadDependencyDef* Arena::CreateMaybeMessage<::domi::ManualThreadDependencyDef>(Arena*);
template<> ::domi::ManualThreadDmuDef* Arena::CreateMaybeMessage<::domi::ManualThreadDmuDef>(Arena*);
template<> ::domi::ManualThreadNopDef* Arena::CreateMaybeMessage<::domi::ManualThreadNopDef>(Arena*);
template<> ::domi::MemcpyAsyncDef* Arena::CreateMaybeMessage<::domi::MemcpyAsyncDef>(Arena*);
template<> ::domi::ModelTaskDef* Arena::CreateMaybeMessage<::domi::ModelTaskDef>(Arena*);
template<> ::domi::ModelTaskDef_AttrEntry_DoNotUse* Arena::CreateMaybeMessage<::domi::ModelTaskDef_AttrEntry_DoNotUse>(Arena*);
template<> ::domi::NpuClearFloatStatusDef* Arena::CreateMaybeMessage<::domi::NpuClearFloatStatusDef>(Arena*);
template<> ::domi::NpuGetFloatStatusDef* Arena::CreateMaybeMessage<::domi::NpuGetFloatStatusDef>(Arena*);
template<> ::domi::StarsSqeHeaderDef* Arena::CreateMaybeMessage<::domi::StarsSqeHeaderDef>(Arena*);
template<> ::domi::StreamActiveDef* Arena::CreateMaybeMessage<::domi::StreamActiveDef>(Arena*);
template<> ::domi::StreamSwitchDef* Arena::CreateMaybeMessage<::domi::StreamSwitchDef>(Arena*);
template<> ::domi::StreamSwitchNDef* Arena::CreateMaybeMessage<::domi::StreamSwitchNDef>(Arena*);
template<> ::domi::TaskDef* Arena::CreateMaybeMessage<::domi::TaskDef>(Arena*);
template<> ::domi::TicketCacheDef* Arena::CreateMaybeMessage<::domi::TicketCacheDef>(Arena*);
template<> ::domi::aicpuKernelDef* Arena::CreateMaybeMessage<::domi::aicpuKernelDef>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace domi {

enum ArgsInfo_ArgsType : int {
  ArgsInfo_ArgsType_INPUT = 0,
  ArgsInfo_ArgsType_OUTPUT = 1,
  ArgsInfo_ArgsType_ArgsInfo_ArgsType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ArgsInfo_ArgsType_ArgsInfo_ArgsType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ArgsInfo_ArgsType_IsValid(int value);
constexpr ArgsInfo_ArgsType ArgsInfo_ArgsType_ArgsType_MIN = ArgsInfo_ArgsType_INPUT;
constexpr ArgsInfo_ArgsType ArgsInfo_ArgsType_ArgsType_MAX = ArgsInfo_ArgsType_OUTPUT;
constexpr int ArgsInfo_ArgsType_ArgsType_ARRAYSIZE = ArgsInfo_ArgsType_ArgsType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ArgsInfo_ArgsType_descriptor();
template<typename T>
inline const std::string& ArgsInfo_ArgsType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ArgsInfo_ArgsType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ArgsInfo_ArgsType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ArgsInfo_ArgsType_descriptor(), enum_t_value);
}
inline bool ArgsInfo_ArgsType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ArgsInfo_ArgsType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ArgsInfo_ArgsType>(
    ArgsInfo_ArgsType_descriptor(), name, value);
}
enum ArgsInfo_ArgsFormat : int {
  ArgsInfo_ArgsFormat_DIRECT_ADDR = 0,
  ArgsInfo_ArgsFormat_SECONDARY_ADDR = 1,
  ArgsInfo_ArgsFormat_ArgsInfo_ArgsFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ArgsInfo_ArgsFormat_ArgsInfo_ArgsFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ArgsInfo_ArgsFormat_IsValid(int value);
constexpr ArgsInfo_ArgsFormat ArgsInfo_ArgsFormat_ArgsFormat_MIN = ArgsInfo_ArgsFormat_DIRECT_ADDR;
constexpr ArgsInfo_ArgsFormat ArgsInfo_ArgsFormat_ArgsFormat_MAX = ArgsInfo_ArgsFormat_SECONDARY_ADDR;
constexpr int ArgsInfo_ArgsFormat_ArgsFormat_ARRAYSIZE = ArgsInfo_ArgsFormat_ArgsFormat_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ArgsInfo_ArgsFormat_descriptor();
template<typename T>
inline const std::string& ArgsInfo_ArgsFormat_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ArgsInfo_ArgsFormat>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ArgsInfo_ArgsFormat_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ArgsInfo_ArgsFormat_descriptor(), enum_t_value);
}
inline bool ArgsInfo_ArgsFormat_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ArgsInfo_ArgsFormat* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ArgsInfo_ArgsFormat>(
    ArgsInfo_ArgsFormat_descriptor(), name, value);
}
enum FftsPlusCtxDef_OpType : int {
  FftsPlusCtxDef_OpType_NORMAL = 0,
  FftsPlusCtxDef_OpType_ATOMIC = 1,
  FftsPlusCtxDef_OpType_FftsPlusCtxDef_OpType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  FftsPlusCtxDef_OpType_FftsPlusCtxDef_OpType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool FftsPlusCtxDef_OpType_IsValid(int value);
constexpr FftsPlusCtxDef_OpType FftsPlusCtxDef_OpType_OpType_MIN = FftsPlusCtxDef_OpType_NORMAL;
constexpr FftsPlusCtxDef_OpType FftsPlusCtxDef_OpType_OpType_MAX = FftsPlusCtxDef_OpType_ATOMIC;
constexpr int FftsPlusCtxDef_OpType_OpType_ARRAYSIZE = FftsPlusCtxDef_OpType_OpType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FftsPlusCtxDef_OpType_descriptor();
template<typename T>
inline const std::string& FftsPlusCtxDef_OpType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, FftsPlusCtxDef_OpType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function FftsPlusCtxDef_OpType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    FftsPlusCtxDef_OpType_descriptor(), enum_t_value);
}
inline bool FftsPlusCtxDef_OpType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, FftsPlusCtxDef_OpType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<FftsPlusCtxDef_OpType>(
    FftsPlusCtxDef_OpType_descriptor(), name, value);
}
// ===================================================================

class ModelTaskDef_AttrEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ModelTaskDef_AttrEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ModelTaskDef_AttrEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ModelTaskDef_AttrEntry_DoNotUse();
  explicit ModelTaskDef_AttrEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ModelTaskDef_AttrEntry_DoNotUse& other);
  static const ModelTaskDef_AttrEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ModelTaskDef_AttrEntry_DoNotUse*>(&_ModelTaskDef_AttrEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "domi.ModelTaskDef.AttrEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "domi.ModelTaskDef.AttrEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class ModelTaskDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.ModelTaskDef) */ {
 public:
  inline ModelTaskDef() : ModelTaskDef(nullptr) {}
  virtual ~ModelTaskDef();

  ModelTaskDef(const ModelTaskDef& from);
  ModelTaskDef(ModelTaskDef&& from) noexcept
    : ModelTaskDef() {
    *this = ::std::move(from);
  }

  inline ModelTaskDef& operator=(const ModelTaskDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelTaskDef& operator=(ModelTaskDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModelTaskDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelTaskDef* internal_default_instance() {
    return reinterpret_cast<const ModelTaskDef*>(
               &_ModelTaskDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ModelTaskDef& a, ModelTaskDef& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelTaskDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelTaskDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModelTaskDef* New() const final {
    return CreateMaybeMessage<ModelTaskDef>(nullptr);
  }

  ModelTaskDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModelTaskDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModelTaskDef& from);
  void MergeFrom(const ModelTaskDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelTaskDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.ModelTaskDef";
  }
  protected:
  explicit ModelTaskDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kAttrFieldNumber = 9,
    kTaskFieldNumber = 10,
    kOpFieldNumber = 15,
    kVersionFieldNumber = 1,
    kMemorySizeFieldNumber = 11,
    kBatchNumFieldNumber = 18,
    kStreamNumFieldNumber = 12,
    kEventNumFieldNumber = 13,
    kWeightSizeFieldNumber = 14,
    kBaseAddrFieldNumber = 16,
    kWeightAddrFieldNumber = 17,
  };
  // map<string, string> attr = 9;
  int attr_size() const;
  private:
  int _internal_attr_size() const;
  public:
  void clear_attr();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_attr() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_attr();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      attr() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_attr();

  // repeated .domi.TaskDef task = 10;
  int task_size() const;
  private:
  int _internal_task_size() const;
  public:
  void clear_task();
  ::domi::TaskDef* mutable_task(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TaskDef >*
      mutable_task();
  private:
  const ::domi::TaskDef& _internal_task(int index) const;
  ::domi::TaskDef* _internal_add_task();
  public:
  const ::domi::TaskDef& task(int index) const;
  ::domi::TaskDef* add_task();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TaskDef >&
      task() const;

  // repeated bytes op = 15;
  int op_size() const;
  private:
  int _internal_op_size() const;
  public:
  void clear_op();
  const std::string& op(int index) const;
  std::string* mutable_op(int index);
  void set_op(int index, const std::string& value);
  void set_op(int index, std::string&& value);
  void set_op(int index, const char* value);
  void set_op(int index, const void* value, size_t size);
  std::string* add_op();
  void add_op(const std::string& value);
  void add_op(std::string&& value);
  void add_op(const char* value);
  void add_op(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& op() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_op();
  private:
  const std::string& _internal_op(int index) const;
  std::string* _internal_add_op();
  public:

  // string version = 1;
  void clear_version();
  const std::string& version() const;
  void set_version(const std::string& value);
  void set_version(std::string&& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  std::string* mutable_version();
  std::string* release_version();
  void set_allocated_version(std::string* version);
  private:
  const std::string& _internal_version() const;
  void _internal_set_version(const std::string& value);
  std::string* _internal_mutable_version();
  public:

  // uint64 memory_size = 11;
  void clear_memory_size();
  ::PROTOBUF_NAMESPACE_ID::uint64 memory_size() const;
  void set_memory_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_memory_size() const;
  void _internal_set_memory_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 batch_num = 18;
  void clear_batch_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 batch_num() const;
  void set_batch_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_batch_num() const;
  void _internal_set_batch_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 stream_num = 12;
  void clear_stream_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 stream_num() const;
  void set_stream_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stream_num() const;
  void _internal_set_stream_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 event_num = 13;
  void clear_event_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_num() const;
  void set_event_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_num() const;
  void _internal_set_event_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 weight_size = 14;
  void clear_weight_size();
  ::PROTOBUF_NAMESPACE_ID::uint64 weight_size() const;
  void set_weight_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_weight_size() const;
  void _internal_set_weight_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 base_addr = 16;
  void clear_base_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 base_addr() const;
  void set_base_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_base_addr() const;
  void _internal_set_base_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 weight_addr = 17;
  void clear_weight_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 weight_addr() const;
  void set_weight_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_weight_addr() const;
  void _internal_set_weight_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.ModelTaskDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ModelTaskDef_AttrEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > attr_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TaskDef > task_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> op_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr version_;
  ::PROTOBUF_NAMESPACE_ID::uint64 memory_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 batch_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stream_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_num_;
  ::PROTOBUF_NAMESPACE_ID::uint64 weight_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 base_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint64 weight_addr_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class TaskDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.TaskDef) */ {
 public:
  inline TaskDef() : TaskDef(nullptr) {}
  virtual ~TaskDef();

  TaskDef(const TaskDef& from);
  TaskDef(TaskDef&& from) noexcept
    : TaskDef() {
    *this = ::std::move(from);
  }

  inline TaskDef& operator=(const TaskDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskDef& operator=(TaskDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TaskDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskDef* internal_default_instance() {
    return reinterpret_cast<const TaskDef*>(
               &_TaskDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TaskDef& a, TaskDef& b) {
    a.Swap(&b);
  }
  inline void Swap(TaskDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TaskDef* New() const final {
    return CreateMaybeMessage<TaskDef>(nullptr);
  }

  TaskDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TaskDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TaskDef& from);
  void MergeFrom(const TaskDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TaskDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.TaskDef";
  }
  protected:
  explicit TaskDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrivateDefFieldNumber = 34,
    kKernelFieldNumber = 20,
    kKernelExFieldNumber = 21,
    kKernelHcclFieldNumber = 25,
    kEventExFieldNumber = 26,
    kLogTimestampFieldNumber = 28,
    kMemcpyAsyncFieldNumber = 31,
    kStreamSwitchFieldNumber = 32,
    kStreamActiveFieldNumber = 33,
    kStreamSwitchNFieldNumber = 36,
    kLabelSetFieldNumber = 37,
    kLabelGotoExFieldNumber = 38,
    kLabelSwitchByIndexFieldNumber = 39,
    kKernelWithHandleFieldNumber = 40,
    kFftsTaskFieldNumber = 41,
    kFftsPlusTaskFieldNumber = 42,
    kDsaTaskFieldNumber = 43,
    kCmoTaskFieldNumber = 44,
    kCmoBarrierTaskFieldNumber = 45,
    kNpuGetFloatStatusFieldNumber = 46,
    kNpuClearFloatStatusFieldNumber = 47,
    kDvppTaskFieldNumber = 48,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
    kStreamIdFieldNumber = 10,
    kEventIdFieldNumber = 11,
    kNotifyIdFieldNumber = 12,
    kLabelIdFieldNumber = 30,
    kOpsKernelStorePtrFieldNumber = 35,
  };
  // bytes private_def = 34;
  void clear_private_def();
  const std::string& private_def() const;
  void set_private_def(const std::string& value);
  void set_private_def(std::string&& value);
  void set_private_def(const char* value);
  void set_private_def(const void* value, size_t size);
  std::string* mutable_private_def();
  std::string* release_private_def();
  void set_allocated_private_def(std::string* private_def);
  private:
  const std::string& _internal_private_def() const;
  void _internal_set_private_def(const std::string& value);
  std::string* _internal_mutable_private_def();
  public:

  // .domi.KernelDef kernel = 20;
  bool has_kernel() const;
  private:
  bool _internal_has_kernel() const;
  public:
  void clear_kernel();
  const ::domi::KernelDef& kernel() const;
  ::domi::KernelDef* release_kernel();
  ::domi::KernelDef* mutable_kernel();
  void set_allocated_kernel(::domi::KernelDef* kernel);
  private:
  const ::domi::KernelDef& _internal_kernel() const;
  ::domi::KernelDef* _internal_mutable_kernel();
  public:
  void unsafe_arena_set_allocated_kernel(
      ::domi::KernelDef* kernel);
  ::domi::KernelDef* unsafe_arena_release_kernel();

  // .domi.KernelExDef kernel_ex = 21;
  bool has_kernel_ex() const;
  private:
  bool _internal_has_kernel_ex() const;
  public:
  void clear_kernel_ex();
  const ::domi::KernelExDef& kernel_ex() const;
  ::domi::KernelExDef* release_kernel_ex();
  ::domi::KernelExDef* mutable_kernel_ex();
  void set_allocated_kernel_ex(::domi::KernelExDef* kernel_ex);
  private:
  const ::domi::KernelExDef& _internal_kernel_ex() const;
  ::domi::KernelExDef* _internal_mutable_kernel_ex();
  public:
  void unsafe_arena_set_allocated_kernel_ex(
      ::domi::KernelExDef* kernel_ex);
  ::domi::KernelExDef* unsafe_arena_release_kernel_ex();

  // .domi.KernelHcclDef kernel_hccl = 25;
  bool has_kernel_hccl() const;
  private:
  bool _internal_has_kernel_hccl() const;
  public:
  void clear_kernel_hccl();
  const ::domi::KernelHcclDef& kernel_hccl() const;
  ::domi::KernelHcclDef* release_kernel_hccl();
  ::domi::KernelHcclDef* mutable_kernel_hccl();
  void set_allocated_kernel_hccl(::domi::KernelHcclDef* kernel_hccl);
  private:
  const ::domi::KernelHcclDef& _internal_kernel_hccl() const;
  ::domi::KernelHcclDef* _internal_mutable_kernel_hccl();
  public:
  void unsafe_arena_set_allocated_kernel_hccl(
      ::domi::KernelHcclDef* kernel_hccl);
  ::domi::KernelHcclDef* unsafe_arena_release_kernel_hccl();

  // .domi.EventExDef event_ex = 26;
  bool has_event_ex() const;
  private:
  bool _internal_has_event_ex() const;
  public:
  void clear_event_ex();
  const ::domi::EventExDef& event_ex() const;
  ::domi::EventExDef* release_event_ex();
  ::domi::EventExDef* mutable_event_ex();
  void set_allocated_event_ex(::domi::EventExDef* event_ex);
  private:
  const ::domi::EventExDef& _internal_event_ex() const;
  ::domi::EventExDef* _internal_mutable_event_ex();
  public:
  void unsafe_arena_set_allocated_event_ex(
      ::domi::EventExDef* event_ex);
  ::domi::EventExDef* unsafe_arena_release_event_ex();

  // .domi.LogTimeStampDef log_timestamp = 28;
  bool has_log_timestamp() const;
  private:
  bool _internal_has_log_timestamp() const;
  public:
  void clear_log_timestamp();
  const ::domi::LogTimeStampDef& log_timestamp() const;
  ::domi::LogTimeStampDef* release_log_timestamp();
  ::domi::LogTimeStampDef* mutable_log_timestamp();
  void set_allocated_log_timestamp(::domi::LogTimeStampDef* log_timestamp);
  private:
  const ::domi::LogTimeStampDef& _internal_log_timestamp() const;
  ::domi::LogTimeStampDef* _internal_mutable_log_timestamp();
  public:
  void unsafe_arena_set_allocated_log_timestamp(
      ::domi::LogTimeStampDef* log_timestamp);
  ::domi::LogTimeStampDef* unsafe_arena_release_log_timestamp();

  // .domi.MemcpyAsyncDef memcpy_async = 31;
  bool has_memcpy_async() const;
  private:
  bool _internal_has_memcpy_async() const;
  public:
  void clear_memcpy_async();
  const ::domi::MemcpyAsyncDef& memcpy_async() const;
  ::domi::MemcpyAsyncDef* release_memcpy_async();
  ::domi::MemcpyAsyncDef* mutable_memcpy_async();
  void set_allocated_memcpy_async(::domi::MemcpyAsyncDef* memcpy_async);
  private:
  const ::domi::MemcpyAsyncDef& _internal_memcpy_async() const;
  ::domi::MemcpyAsyncDef* _internal_mutable_memcpy_async();
  public:
  void unsafe_arena_set_allocated_memcpy_async(
      ::domi::MemcpyAsyncDef* memcpy_async);
  ::domi::MemcpyAsyncDef* unsafe_arena_release_memcpy_async();

  // .domi.StreamSwitchDef stream_switch = 32;
  bool has_stream_switch() const;
  private:
  bool _internal_has_stream_switch() const;
  public:
  void clear_stream_switch();
  const ::domi::StreamSwitchDef& stream_switch() const;
  ::domi::StreamSwitchDef* release_stream_switch();
  ::domi::StreamSwitchDef* mutable_stream_switch();
  void set_allocated_stream_switch(::domi::StreamSwitchDef* stream_switch);
  private:
  const ::domi::StreamSwitchDef& _internal_stream_switch() const;
  ::domi::StreamSwitchDef* _internal_mutable_stream_switch();
  public:
  void unsafe_arena_set_allocated_stream_switch(
      ::domi::StreamSwitchDef* stream_switch);
  ::domi::StreamSwitchDef* unsafe_arena_release_stream_switch();

  // .domi.StreamActiveDef stream_active = 33;
  bool has_stream_active() const;
  private:
  bool _internal_has_stream_active() const;
  public:
  void clear_stream_active();
  const ::domi::StreamActiveDef& stream_active() const;
  ::domi::StreamActiveDef* release_stream_active();
  ::domi::StreamActiveDef* mutable_stream_active();
  void set_allocated_stream_active(::domi::StreamActiveDef* stream_active);
  private:
  const ::domi::StreamActiveDef& _internal_stream_active() const;
  ::domi::StreamActiveDef* _internal_mutable_stream_active();
  public:
  void unsafe_arena_set_allocated_stream_active(
      ::domi::StreamActiveDef* stream_active);
  ::domi::StreamActiveDef* unsafe_arena_release_stream_active();

  // .domi.StreamSwitchNDef stream_switch_n = 36;
  bool has_stream_switch_n() const;
  private:
  bool _internal_has_stream_switch_n() const;
  public:
  void clear_stream_switch_n();
  const ::domi::StreamSwitchNDef& stream_switch_n() const;
  ::domi::StreamSwitchNDef* release_stream_switch_n();
  ::domi::StreamSwitchNDef* mutable_stream_switch_n();
  void set_allocated_stream_switch_n(::domi::StreamSwitchNDef* stream_switch_n);
  private:
  const ::domi::StreamSwitchNDef& _internal_stream_switch_n() const;
  ::domi::StreamSwitchNDef* _internal_mutable_stream_switch_n();
  public:
  void unsafe_arena_set_allocated_stream_switch_n(
      ::domi::StreamSwitchNDef* stream_switch_n);
  ::domi::StreamSwitchNDef* unsafe_arena_release_stream_switch_n();

  // .domi.LabelSetDef label_set = 37;
  bool has_label_set() const;
  private:
  bool _internal_has_label_set() const;
  public:
  void clear_label_set();
  const ::domi::LabelSetDef& label_set() const;
  ::domi::LabelSetDef* release_label_set();
  ::domi::LabelSetDef* mutable_label_set();
  void set_allocated_label_set(::domi::LabelSetDef* label_set);
  private:
  const ::domi::LabelSetDef& _internal_label_set() const;
  ::domi::LabelSetDef* _internal_mutable_label_set();
  public:
  void unsafe_arena_set_allocated_label_set(
      ::domi::LabelSetDef* label_set);
  ::domi::LabelSetDef* unsafe_arena_release_label_set();

  // .domi.LabelGotoExDef label_goto_ex = 38;
  bool has_label_goto_ex() const;
  private:
  bool _internal_has_label_goto_ex() const;
  public:
  void clear_label_goto_ex();
  const ::domi::LabelGotoExDef& label_goto_ex() const;
  ::domi::LabelGotoExDef* release_label_goto_ex();
  ::domi::LabelGotoExDef* mutable_label_goto_ex();
  void set_allocated_label_goto_ex(::domi::LabelGotoExDef* label_goto_ex);
  private:
  const ::domi::LabelGotoExDef& _internal_label_goto_ex() const;
  ::domi::LabelGotoExDef* _internal_mutable_label_goto_ex();
  public:
  void unsafe_arena_set_allocated_label_goto_ex(
      ::domi::LabelGotoExDef* label_goto_ex);
  ::domi::LabelGotoExDef* unsafe_arena_release_label_goto_ex();

  // .domi.LabelSwitchByIndexDef label_switch_by_index = 39;
  bool has_label_switch_by_index() const;
  private:
  bool _internal_has_label_switch_by_index() const;
  public:
  void clear_label_switch_by_index();
  const ::domi::LabelSwitchByIndexDef& label_switch_by_index() const;
  ::domi::LabelSwitchByIndexDef* release_label_switch_by_index();
  ::domi::LabelSwitchByIndexDef* mutable_label_switch_by_index();
  void set_allocated_label_switch_by_index(::domi::LabelSwitchByIndexDef* label_switch_by_index);
  private:
  const ::domi::LabelSwitchByIndexDef& _internal_label_switch_by_index() const;
  ::domi::LabelSwitchByIndexDef* _internal_mutable_label_switch_by_index();
  public:
  void unsafe_arena_set_allocated_label_switch_by_index(
      ::domi::LabelSwitchByIndexDef* label_switch_by_index);
  ::domi::LabelSwitchByIndexDef* unsafe_arena_release_label_switch_by_index();

  // .domi.KernelDefWithHandle kernel_with_handle = 40;
  bool has_kernel_with_handle() const;
  private:
  bool _internal_has_kernel_with_handle() const;
  public:
  void clear_kernel_with_handle();
  const ::domi::KernelDefWithHandle& kernel_with_handle() const;
  ::domi::KernelDefWithHandle* release_kernel_with_handle();
  ::domi::KernelDefWithHandle* mutable_kernel_with_handle();
  void set_allocated_kernel_with_handle(::domi::KernelDefWithHandle* kernel_with_handle);
  private:
  const ::domi::KernelDefWithHandle& _internal_kernel_with_handle() const;
  ::domi::KernelDefWithHandle* _internal_mutable_kernel_with_handle();
  public:
  void unsafe_arena_set_allocated_kernel_with_handle(
      ::domi::KernelDefWithHandle* kernel_with_handle);
  ::domi::KernelDefWithHandle* unsafe_arena_release_kernel_with_handle();

  // .domi.FftsTaskDef ffts_task = 41;
  bool has_ffts_task() const;
  private:
  bool _internal_has_ffts_task() const;
  public:
  void clear_ffts_task();
  const ::domi::FftsTaskDef& ffts_task() const;
  ::domi::FftsTaskDef* release_ffts_task();
  ::domi::FftsTaskDef* mutable_ffts_task();
  void set_allocated_ffts_task(::domi::FftsTaskDef* ffts_task);
  private:
  const ::domi::FftsTaskDef& _internal_ffts_task() const;
  ::domi::FftsTaskDef* _internal_mutable_ffts_task();
  public:
  void unsafe_arena_set_allocated_ffts_task(
      ::domi::FftsTaskDef* ffts_task);
  ::domi::FftsTaskDef* unsafe_arena_release_ffts_task();

  // .domi.FftsPlusTaskDef ffts_plus_task = 42;
  bool has_ffts_plus_task() const;
  private:
  bool _internal_has_ffts_plus_task() const;
  public:
  void clear_ffts_plus_task();
  const ::domi::FftsPlusTaskDef& ffts_plus_task() const;
  ::domi::FftsPlusTaskDef* release_ffts_plus_task();
  ::domi::FftsPlusTaskDef* mutable_ffts_plus_task();
  void set_allocated_ffts_plus_task(::domi::FftsPlusTaskDef* ffts_plus_task);
  private:
  const ::domi::FftsPlusTaskDef& _internal_ffts_plus_task() const;
  ::domi::FftsPlusTaskDef* _internal_mutable_ffts_plus_task();
  public:
  void unsafe_arena_set_allocated_ffts_plus_task(
      ::domi::FftsPlusTaskDef* ffts_plus_task);
  ::domi::FftsPlusTaskDef* unsafe_arena_release_ffts_plus_task();

  // .domi.DSATaskDef dsa_task = 43;
  bool has_dsa_task() const;
  private:
  bool _internal_has_dsa_task() const;
  public:
  void clear_dsa_task();
  const ::domi::DSATaskDef& dsa_task() const;
  ::domi::DSATaskDef* release_dsa_task();
  ::domi::DSATaskDef* mutable_dsa_task();
  void set_allocated_dsa_task(::domi::DSATaskDef* dsa_task);
  private:
  const ::domi::DSATaskDef& _internal_dsa_task() const;
  ::domi::DSATaskDef* _internal_mutable_dsa_task();
  public:
  void unsafe_arena_set_allocated_dsa_task(
      ::domi::DSATaskDef* dsa_task);
  ::domi::DSATaskDef* unsafe_arena_release_dsa_task();

  // .domi.CmoTaskDef cmo_task = 44;
  bool has_cmo_task() const;
  private:
  bool _internal_has_cmo_task() const;
  public:
  void clear_cmo_task();
  const ::domi::CmoTaskDef& cmo_task() const;
  ::domi::CmoTaskDef* release_cmo_task();
  ::domi::CmoTaskDef* mutable_cmo_task();
  void set_allocated_cmo_task(::domi::CmoTaskDef* cmo_task);
  private:
  const ::domi::CmoTaskDef& _internal_cmo_task() const;
  ::domi::CmoTaskDef* _internal_mutable_cmo_task();
  public:
  void unsafe_arena_set_allocated_cmo_task(
      ::domi::CmoTaskDef* cmo_task);
  ::domi::CmoTaskDef* unsafe_arena_release_cmo_task();

  // .domi.CmoBarrierTaskDef cmo_barrier_task = 45;
  bool has_cmo_barrier_task() const;
  private:
  bool _internal_has_cmo_barrier_task() const;
  public:
  void clear_cmo_barrier_task();
  const ::domi::CmoBarrierTaskDef& cmo_barrier_task() const;
  ::domi::CmoBarrierTaskDef* release_cmo_barrier_task();
  ::domi::CmoBarrierTaskDef* mutable_cmo_barrier_task();
  void set_allocated_cmo_barrier_task(::domi::CmoBarrierTaskDef* cmo_barrier_task);
  private:
  const ::domi::CmoBarrierTaskDef& _internal_cmo_barrier_task() const;
  ::domi::CmoBarrierTaskDef* _internal_mutable_cmo_barrier_task();
  public:
  void unsafe_arena_set_allocated_cmo_barrier_task(
      ::domi::CmoBarrierTaskDef* cmo_barrier_task);
  ::domi::CmoBarrierTaskDef* unsafe_arena_release_cmo_barrier_task();

  // .domi.NpuGetFloatStatusDef npu_get_float_status = 46;
  bool has_npu_get_float_status() const;
  private:
  bool _internal_has_npu_get_float_status() const;
  public:
  void clear_npu_get_float_status();
  const ::domi::NpuGetFloatStatusDef& npu_get_float_status() const;
  ::domi::NpuGetFloatStatusDef* release_npu_get_float_status();
  ::domi::NpuGetFloatStatusDef* mutable_npu_get_float_status();
  void set_allocated_npu_get_float_status(::domi::NpuGetFloatStatusDef* npu_get_float_status);
  private:
  const ::domi::NpuGetFloatStatusDef& _internal_npu_get_float_status() const;
  ::domi::NpuGetFloatStatusDef* _internal_mutable_npu_get_float_status();
  public:
  void unsafe_arena_set_allocated_npu_get_float_status(
      ::domi::NpuGetFloatStatusDef* npu_get_float_status);
  ::domi::NpuGetFloatStatusDef* unsafe_arena_release_npu_get_float_status();

  // .domi.NpuClearFloatStatusDef npu_clear_float_status = 47;
  bool has_npu_clear_float_status() const;
  private:
  bool _internal_has_npu_clear_float_status() const;
  public:
  void clear_npu_clear_float_status();
  const ::domi::NpuClearFloatStatusDef& npu_clear_float_status() const;
  ::domi::NpuClearFloatStatusDef* release_npu_clear_float_status();
  ::domi::NpuClearFloatStatusDef* mutable_npu_clear_float_status();
  void set_allocated_npu_clear_float_status(::domi::NpuClearFloatStatusDef* npu_clear_float_status);
  private:
  const ::domi::NpuClearFloatStatusDef& _internal_npu_clear_float_status() const;
  ::domi::NpuClearFloatStatusDef* _internal_mutable_npu_clear_float_status();
  public:
  void unsafe_arena_set_allocated_npu_clear_float_status(
      ::domi::NpuClearFloatStatusDef* npu_clear_float_status);
  ::domi::NpuClearFloatStatusDef* unsafe_arena_release_npu_clear_float_status();

  // .domi.DvppTaskDef dvpp_task = 48;
  bool has_dvpp_task() const;
  private:
  bool _internal_has_dvpp_task() const;
  public:
  void clear_dvpp_task();
  const ::domi::DvppTaskDef& dvpp_task() const;
  ::domi::DvppTaskDef* release_dvpp_task();
  ::domi::DvppTaskDef* mutable_dvpp_task();
  void set_allocated_dvpp_task(::domi::DvppTaskDef* dvpp_task);
  private:
  const ::domi::DvppTaskDef& _internal_dvpp_task() const;
  ::domi::DvppTaskDef* _internal_mutable_dvpp_task();
  public:
  void unsafe_arena_set_allocated_dvpp_task(
      ::domi::DvppTaskDef* dvpp_task);
  ::domi::DvppTaskDef* unsafe_arena_release_dvpp_task();

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 type = 2;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 stream_id = 10;
  void clear_stream_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 stream_id() const;
  void set_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stream_id() const;
  void _internal_set_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 event_id = 11;
  void clear_event_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id() const;
  void set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_id() const;
  void _internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 notify_id = 12;
  void clear_notify_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 notify_id() const;
  void set_notify_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_notify_id() const;
  void _internal_set_notify_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 label_id = 30;
  void clear_label_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 label_id() const;
  void set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_label_id() const;
  void _internal_set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 ops_kernel_store_ptr = 35;
  void clear_ops_kernel_store_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint64 ops_kernel_store_ptr() const;
  void set_ops_kernel_store_ptr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_ops_kernel_store_ptr() const;
  void _internal_set_ops_kernel_store_ptr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.TaskDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr private_def_;
  ::domi::KernelDef* kernel_;
  ::domi::KernelExDef* kernel_ex_;
  ::domi::KernelHcclDef* kernel_hccl_;
  ::domi::EventExDef* event_ex_;
  ::domi::LogTimeStampDef* log_timestamp_;
  ::domi::MemcpyAsyncDef* memcpy_async_;
  ::domi::StreamSwitchDef* stream_switch_;
  ::domi::StreamActiveDef* stream_active_;
  ::domi::StreamSwitchNDef* stream_switch_n_;
  ::domi::LabelSetDef* label_set_;
  ::domi::LabelGotoExDef* label_goto_ex_;
  ::domi::LabelSwitchByIndexDef* label_switch_by_index_;
  ::domi::KernelDefWithHandle* kernel_with_handle_;
  ::domi::FftsTaskDef* ffts_task_;
  ::domi::FftsPlusTaskDef* ffts_plus_task_;
  ::domi::DSATaskDef* dsa_task_;
  ::domi::CmoTaskDef* cmo_task_;
  ::domi::CmoBarrierTaskDef* cmo_barrier_task_;
  ::domi::NpuGetFloatStatusDef* npu_get_float_status_;
  ::domi::NpuClearFloatStatusDef* npu_clear_float_status_;
  ::domi::DvppTaskDef* dvpp_task_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stream_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 notify_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 label_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 ops_kernel_store_ptr_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class KernelDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.KernelDef) */ {
 public:
  inline KernelDef() : KernelDef(nullptr) {}
  virtual ~KernelDef();

  KernelDef(const KernelDef& from);
  KernelDef(KernelDef&& from) noexcept
    : KernelDef() {
    *this = ::std::move(from);
  }

  inline KernelDef& operator=(const KernelDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelDef& operator=(KernelDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KernelDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KernelDef* internal_default_instance() {
    return reinterpret_cast<const KernelDef*>(
               &_KernelDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(KernelDef& a, KernelDef& b) {
    a.Swap(&b);
  }
  inline void Swap(KernelDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KernelDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KernelDef* New() const final {
    return CreateMaybeMessage<KernelDef>(nullptr);
  }

  KernelDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KernelDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KernelDef& from);
  void MergeFrom(const KernelDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KernelDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.KernelDef";
  }
  protected:
  explicit KernelDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgsInfoFieldNumber = 20,
    kStubFuncFieldNumber = 10,
    kArgsFieldNumber = 13,
    kSmDescFieldNumber = 14,
    kFlowtableFieldNumber = 15,
    kSoNameFieldNumber = 16,
    kKernelNameFieldNumber = 17,
    kKernelExtInfoFieldNumber = 18,
    kContextFieldNumber = 1,
    kBlockDimFieldNumber = 11,
    kArgsSizeFieldNumber = 12,
    kKernelExtInfoSizeFieldNumber = 19,
  };
  // repeated .domi.ArgsInfo args_info = 20;
  int args_info_size() const;
  private:
  int _internal_args_info_size() const;
  public:
  void clear_args_info();
  ::domi::ArgsInfo* mutable_args_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo >*
      mutable_args_info();
  private:
  const ::domi::ArgsInfo& _internal_args_info(int index) const;
  ::domi::ArgsInfo* _internal_add_args_info();
  public:
  const ::domi::ArgsInfo& args_info(int index) const;
  ::domi::ArgsInfo* add_args_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo >&
      args_info() const;

  // string stub_func = 10;
  void clear_stub_func();
  const std::string& stub_func() const;
  void set_stub_func(const std::string& value);
  void set_stub_func(std::string&& value);
  void set_stub_func(const char* value);
  void set_stub_func(const char* value, size_t size);
  std::string* mutable_stub_func();
  std::string* release_stub_func();
  void set_allocated_stub_func(std::string* stub_func);
  private:
  const std::string& _internal_stub_func() const;
  void _internal_set_stub_func(const std::string& value);
  std::string* _internal_mutable_stub_func();
  public:

  // bytes args = 13;
  void clear_args();
  const std::string& args() const;
  void set_args(const std::string& value);
  void set_args(std::string&& value);
  void set_args(const char* value);
  void set_args(const void* value, size_t size);
  std::string* mutable_args();
  std::string* release_args();
  void set_allocated_args(std::string* args);
  private:
  const std::string& _internal_args() const;
  void _internal_set_args(const std::string& value);
  std::string* _internal_mutable_args();
  public:

  // bytes sm_desc = 14;
  void clear_sm_desc();
  const std::string& sm_desc() const;
  void set_sm_desc(const std::string& value);
  void set_sm_desc(std::string&& value);
  void set_sm_desc(const char* value);
  void set_sm_desc(const void* value, size_t size);
  std::string* mutable_sm_desc();
  std::string* release_sm_desc();
  void set_allocated_sm_desc(std::string* sm_desc);
  private:
  const std::string& _internal_sm_desc() const;
  void _internal_set_sm_desc(const std::string& value);
  std::string* _internal_mutable_sm_desc();
  public:

  // bytes flowtable = 15;
  void clear_flowtable();
  const std::string& flowtable() const;
  void set_flowtable(const std::string& value);
  void set_flowtable(std::string&& value);
  void set_flowtable(const char* value);
  void set_flowtable(const void* value, size_t size);
  std::string* mutable_flowtable();
  std::string* release_flowtable();
  void set_allocated_flowtable(std::string* flowtable);
  private:
  const std::string& _internal_flowtable() const;
  void _internal_set_flowtable(const std::string& value);
  std::string* _internal_mutable_flowtable();
  public:

  // string so_name = 16;
  void clear_so_name();
  const std::string& so_name() const;
  void set_so_name(const std::string& value);
  void set_so_name(std::string&& value);
  void set_so_name(const char* value);
  void set_so_name(const char* value, size_t size);
  std::string* mutable_so_name();
  std::string* release_so_name();
  void set_allocated_so_name(std::string* so_name);
  private:
  const std::string& _internal_so_name() const;
  void _internal_set_so_name(const std::string& value);
  std::string* _internal_mutable_so_name();
  public:

  // string kernel_name = 17;
  void clear_kernel_name();
  const std::string& kernel_name() const;
  void set_kernel_name(const std::string& value);
  void set_kernel_name(std::string&& value);
  void set_kernel_name(const char* value);
  void set_kernel_name(const char* value, size_t size);
  std::string* mutable_kernel_name();
  std::string* release_kernel_name();
  void set_allocated_kernel_name(std::string* kernel_name);
  private:
  const std::string& _internal_kernel_name() const;
  void _internal_set_kernel_name(const std::string& value);
  std::string* _internal_mutable_kernel_name();
  public:

  // bytes kernel_ext_info = 18;
  void clear_kernel_ext_info();
  const std::string& kernel_ext_info() const;
  void set_kernel_ext_info(const std::string& value);
  void set_kernel_ext_info(std::string&& value);
  void set_kernel_ext_info(const char* value);
  void set_kernel_ext_info(const void* value, size_t size);
  std::string* mutable_kernel_ext_info();
  std::string* release_kernel_ext_info();
  void set_allocated_kernel_ext_info(std::string* kernel_ext_info);
  private:
  const std::string& _internal_kernel_ext_info() const;
  void _internal_set_kernel_ext_info(const std::string& value);
  std::string* _internal_mutable_kernel_ext_info();
  public:

  // .domi.KernelContext context = 1;
  bool has_context() const;
  private:
  bool _internal_has_context() const;
  public:
  void clear_context();
  const ::domi::KernelContext& context() const;
  ::domi::KernelContext* release_context();
  ::domi::KernelContext* mutable_context();
  void set_allocated_context(::domi::KernelContext* context);
  private:
  const ::domi::KernelContext& _internal_context() const;
  ::domi::KernelContext* _internal_mutable_context();
  public:
  void unsafe_arena_set_allocated_context(
      ::domi::KernelContext* context);
  ::domi::KernelContext* unsafe_arena_release_context();

  // uint32 block_dim = 11;
  void clear_block_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 block_dim() const;
  void set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block_dim() const;
  void _internal_set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 args_size = 12;
  void clear_args_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 args_size() const;
  void set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_args_size() const;
  void _internal_set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 kernel_ext_info_size = 19;
  void clear_kernel_ext_info_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_ext_info_size() const;
  void set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kernel_ext_info_size() const;
  void _internal_set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.KernelDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo > args_info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stub_func_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr args_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sm_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr flowtable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr so_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kernel_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kernel_ext_info_;
  ::domi::KernelContext* context_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 args_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_ext_info_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class KernelDefWithHandle PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.KernelDefWithHandle) */ {
 public:
  inline KernelDefWithHandle() : KernelDefWithHandle(nullptr) {}
  virtual ~KernelDefWithHandle();

  KernelDefWithHandle(const KernelDefWithHandle& from);
  KernelDefWithHandle(KernelDefWithHandle&& from) noexcept
    : KernelDefWithHandle() {
    *this = ::std::move(from);
  }

  inline KernelDefWithHandle& operator=(const KernelDefWithHandle& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelDefWithHandle& operator=(KernelDefWithHandle&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KernelDefWithHandle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KernelDefWithHandle* internal_default_instance() {
    return reinterpret_cast<const KernelDefWithHandle*>(
               &_KernelDefWithHandle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(KernelDefWithHandle& a, KernelDefWithHandle& b) {
    a.Swap(&b);
  }
  inline void Swap(KernelDefWithHandle* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KernelDefWithHandle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KernelDefWithHandle* New() const final {
    return CreateMaybeMessage<KernelDefWithHandle>(nullptr);
  }

  KernelDefWithHandle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KernelDefWithHandle>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KernelDefWithHandle& from);
  void MergeFrom(const KernelDefWithHandle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KernelDefWithHandle* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.KernelDefWithHandle";
  }
  protected:
  explicit KernelDefWithHandle(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgsInfoFieldNumber = 18,
    kDevFuncFieldNumber = 11,
    kArgsFieldNumber = 14,
    kSmDescFieldNumber = 15,
    kOriginalKernelKeyFieldNumber = 16,
    kNodeInfoFieldNumber = 17,
    kContextFieldNumber = 1,
    kHandleFieldNumber = 10,
    kBlockDimFieldNumber = 12,
    kArgsSizeFieldNumber = 13,
  };
  // repeated .domi.ArgsInfo args_info = 18;
  int args_info_size() const;
  private:
  int _internal_args_info_size() const;
  public:
  void clear_args_info();
  ::domi::ArgsInfo* mutable_args_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo >*
      mutable_args_info();
  private:
  const ::domi::ArgsInfo& _internal_args_info(int index) const;
  ::domi::ArgsInfo* _internal_add_args_info();
  public:
  const ::domi::ArgsInfo& args_info(int index) const;
  ::domi::ArgsInfo* add_args_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo >&
      args_info() const;

  // string dev_func = 11;
  void clear_dev_func();
  const std::string& dev_func() const;
  void set_dev_func(const std::string& value);
  void set_dev_func(std::string&& value);
  void set_dev_func(const char* value);
  void set_dev_func(const char* value, size_t size);
  std::string* mutable_dev_func();
  std::string* release_dev_func();
  void set_allocated_dev_func(std::string* dev_func);
  private:
  const std::string& _internal_dev_func() const;
  void _internal_set_dev_func(const std::string& value);
  std::string* _internal_mutable_dev_func();
  public:

  // bytes args = 14;
  void clear_args();
  const std::string& args() const;
  void set_args(const std::string& value);
  void set_args(std::string&& value);
  void set_args(const char* value);
  void set_args(const void* value, size_t size);
  std::string* mutable_args();
  std::string* release_args();
  void set_allocated_args(std::string* args);
  private:
  const std::string& _internal_args() const;
  void _internal_set_args(const std::string& value);
  std::string* _internal_mutable_args();
  public:

  // bytes sm_desc = 15;
  void clear_sm_desc();
  const std::string& sm_desc() const;
  void set_sm_desc(const std::string& value);
  void set_sm_desc(std::string&& value);
  void set_sm_desc(const char* value);
  void set_sm_desc(const void* value, size_t size);
  std::string* mutable_sm_desc();
  std::string* release_sm_desc();
  void set_allocated_sm_desc(std::string* sm_desc);
  private:
  const std::string& _internal_sm_desc() const;
  void _internal_set_sm_desc(const std::string& value);
  std::string* _internal_mutable_sm_desc();
  public:

  // string original_kernel_key = 16;
  void clear_original_kernel_key();
  const std::string& original_kernel_key() const;
  void set_original_kernel_key(const std::string& value);
  void set_original_kernel_key(std::string&& value);
  void set_original_kernel_key(const char* value);
  void set_original_kernel_key(const char* value, size_t size);
  std::string* mutable_original_kernel_key();
  std::string* release_original_kernel_key();
  void set_allocated_original_kernel_key(std::string* original_kernel_key);
  private:
  const std::string& _internal_original_kernel_key() const;
  void _internal_set_original_kernel_key(const std::string& value);
  std::string* _internal_mutable_original_kernel_key();
  public:

  // string node_info = 17;
  void clear_node_info();
  const std::string& node_info() const;
  void set_node_info(const std::string& value);
  void set_node_info(std::string&& value);
  void set_node_info(const char* value);
  void set_node_info(const char* value, size_t size);
  std::string* mutable_node_info();
  std::string* release_node_info();
  void set_allocated_node_info(std::string* node_info);
  private:
  const std::string& _internal_node_info() const;
  void _internal_set_node_info(const std::string& value);
  std::string* _internal_mutable_node_info();
  public:

  // .domi.KernelContext context = 1;
  bool has_context() const;
  private:
  bool _internal_has_context() const;
  public:
  void clear_context();
  const ::domi::KernelContext& context() const;
  ::domi::KernelContext* release_context();
  ::domi::KernelContext* mutable_context();
  void set_allocated_context(::domi::KernelContext* context);
  private:
  const ::domi::KernelContext& _internal_context() const;
  ::domi::KernelContext* _internal_mutable_context();
  public:
  void unsafe_arena_set_allocated_context(
      ::domi::KernelContext* context);
  ::domi::KernelContext* unsafe_arena_release_context();

  // uint64 handle = 10;
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::uint64 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 block_dim = 12;
  void clear_block_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 block_dim() const;
  void set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block_dim() const;
  void _internal_set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 args_size = 13;
  void clear_args_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 args_size() const;
  void set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_args_size() const;
  void _internal_set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.KernelDefWithHandle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo > args_info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dev_func_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr args_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sm_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr original_kernel_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr node_info_;
  ::domi::KernelContext* context_;
  ::PROTOBUF_NAMESPACE_ID::uint64 handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 args_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class KernelContext PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.KernelContext) */ {
 public:
  inline KernelContext() : KernelContext(nullptr) {}
  virtual ~KernelContext();

  KernelContext(const KernelContext& from);
  KernelContext(KernelContext&& from) noexcept
    : KernelContext() {
    *this = ::std::move(from);
  }

  inline KernelContext& operator=(const KernelContext& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelContext& operator=(KernelContext&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KernelContext& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KernelContext* internal_default_instance() {
    return reinterpret_cast<const KernelContext*>(
               &_KernelContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(KernelContext& a, KernelContext& b) {
    a.Swap(&b);
  }
  inline void Swap(KernelContext* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KernelContext* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KernelContext* New() const final {
    return CreateMaybeMessage<KernelContext>(nullptr);
  }

  KernelContext* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KernelContext>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KernelContext& from);
  void MergeFrom(const KernelContext& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KernelContext* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.KernelContext";
  }
  protected:
  explicit KernelContext(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginOpIndexFieldNumber = 8,
    kArgsOffsetFieldNumber = 6,
    kKernelTypeFieldNumber = 1,
    kOpIdFieldNumber = 2,
    kKernelFuncIdFieldNumber = 3,
    kOpIndexFieldNumber = 4,
    kIsFlowtableFieldNumber = 5,
    kArgsCountFieldNumber = 7,
  };
  // repeated uint32 origin_op_index = 8;
  int origin_op_index_size() const;
  private:
  int _internal_origin_op_index_size() const;
  public:
  void clear_origin_op_index();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_origin_op_index(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_origin_op_index() const;
  void _internal_add_origin_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_origin_op_index();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 origin_op_index(int index) const;
  void set_origin_op_index(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_origin_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      origin_op_index() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_origin_op_index();

  // bytes args_offset = 6;
  void clear_args_offset();
  const std::string& args_offset() const;
  void set_args_offset(const std::string& value);
  void set_args_offset(std::string&& value);
  void set_args_offset(const char* value);
  void set_args_offset(const void* value, size_t size);
  std::string* mutable_args_offset();
  std::string* release_args_offset();
  void set_allocated_args_offset(std::string* args_offset);
  private:
  const std::string& _internal_args_offset() const;
  void _internal_set_args_offset(const std::string& value);
  std::string* _internal_mutable_args_offset();
  public:

  // uint32 kernel_type = 1;
  void clear_kernel_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_type() const;
  void set_kernel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kernel_type() const;
  void _internal_set_kernel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 op_id = 2;
  void clear_op_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_id() const;
  void set_op_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_id() const;
  void _internal_set_op_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 kernel_func_id = 3;
  void clear_kernel_func_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_func_id() const;
  void set_kernel_func_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kernel_func_id() const;
  void _internal_set_kernel_func_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 op_index = 4;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool is_flowtable = 5;
  void clear_is_flowtable();
  bool is_flowtable() const;
  void set_is_flowtable(bool value);
  private:
  bool _internal_is_flowtable() const;
  void _internal_set_is_flowtable(bool value);
  public:

  // uint32 args_count = 7;
  void clear_args_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 args_count() const;
  void set_args_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_args_count() const;
  void _internal_set_args_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.KernelContext)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > origin_op_index_;
  mutable std::atomic<int> _origin_op_index_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr args_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_func_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  bool is_flowtable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 args_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class ArgsInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.ArgsInfo) */ {
 public:
  inline ArgsInfo() : ArgsInfo(nullptr) {}
  virtual ~ArgsInfo();

  ArgsInfo(const ArgsInfo& from);
  ArgsInfo(ArgsInfo&& from) noexcept
    : ArgsInfo() {
    *this = ::std::move(from);
  }

  inline ArgsInfo& operator=(const ArgsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArgsInfo& operator=(ArgsInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArgsInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgsInfo* internal_default_instance() {
    return reinterpret_cast<const ArgsInfo*>(
               &_ArgsInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ArgsInfo& a, ArgsInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ArgsInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArgsInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArgsInfo* New() const final {
    return CreateMaybeMessage<ArgsInfo>(nullptr);
  }

  ArgsInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArgsInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArgsInfo& from);
  void MergeFrom(const ArgsInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArgsInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.ArgsInfo";
  }
  protected:
  explicit ArgsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ArgsInfo_ArgsType ArgsType;
  static constexpr ArgsType INPUT =
    ArgsInfo_ArgsType_INPUT;
  static constexpr ArgsType OUTPUT =
    ArgsInfo_ArgsType_OUTPUT;
  static inline bool ArgsType_IsValid(int value) {
    return ArgsInfo_ArgsType_IsValid(value);
  }
  static constexpr ArgsType ArgsType_MIN =
    ArgsInfo_ArgsType_ArgsType_MIN;
  static constexpr ArgsType ArgsType_MAX =
    ArgsInfo_ArgsType_ArgsType_MAX;
  static constexpr int ArgsType_ARRAYSIZE =
    ArgsInfo_ArgsType_ArgsType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ArgsType_descriptor() {
    return ArgsInfo_ArgsType_descriptor();
  }
  template<typename T>
  static inline const std::string& ArgsType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ArgsType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ArgsType_Name.");
    return ArgsInfo_ArgsType_Name(enum_t_value);
  }
  static inline bool ArgsType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ArgsType* value) {
    return ArgsInfo_ArgsType_Parse(name, value);
  }

  typedef ArgsInfo_ArgsFormat ArgsFormat;
  static constexpr ArgsFormat DIRECT_ADDR =
    ArgsInfo_ArgsFormat_DIRECT_ADDR;
  static constexpr ArgsFormat SECONDARY_ADDR =
    ArgsInfo_ArgsFormat_SECONDARY_ADDR;
  static inline bool ArgsFormat_IsValid(int value) {
    return ArgsInfo_ArgsFormat_IsValid(value);
  }
  static constexpr ArgsFormat ArgsFormat_MIN =
    ArgsInfo_ArgsFormat_ArgsFormat_MIN;
  static constexpr ArgsFormat ArgsFormat_MAX =
    ArgsInfo_ArgsFormat_ArgsFormat_MAX;
  static constexpr int ArgsFormat_ARRAYSIZE =
    ArgsInfo_ArgsFormat_ArgsFormat_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ArgsFormat_descriptor() {
    return ArgsInfo_ArgsFormat_descriptor();
  }
  template<typename T>
  static inline const std::string& ArgsFormat_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ArgsFormat>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ArgsFormat_Name.");
    return ArgsInfo_ArgsFormat_Name(enum_t_value);
  }
  static inline bool ArgsFormat_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ArgsFormat* value) {
    return ArgsInfo_ArgsFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kArgTypeFieldNumber = 1,
    kArgFormatFieldNumber = 2,
    kStartIndexFieldNumber = 3,
    kSizeFieldNumber = 4,
  };
  // .domi.ArgsInfo.ArgsType arg_type = 1;
  void clear_arg_type();
  ::domi::ArgsInfo_ArgsType arg_type() const;
  void set_arg_type(::domi::ArgsInfo_ArgsType value);
  private:
  ::domi::ArgsInfo_ArgsType _internal_arg_type() const;
  void _internal_set_arg_type(::domi::ArgsInfo_ArgsType value);
  public:

  // .domi.ArgsInfo.ArgsFormat arg_format = 2;
  void clear_arg_format();
  ::domi::ArgsInfo_ArgsFormat arg_format() const;
  void set_arg_format(::domi::ArgsInfo_ArgsFormat value);
  private:
  ::domi::ArgsInfo_ArgsFormat _internal_arg_format() const;
  void _internal_set_arg_format(::domi::ArgsInfo_ArgsFormat value);
  public:

  // int32 start_index = 3;
  void clear_start_index();
  ::PROTOBUF_NAMESPACE_ID::int32 start_index() const;
  void set_start_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_start_index() const;
  void _internal_set_start_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 size = 4;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.ArgsInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int arg_type_;
  int arg_format_;
  ::PROTOBUF_NAMESPACE_ID::int32 start_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class KernelExDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.KernelExDef) */ {
 public:
  inline KernelExDef() : KernelExDef(nullptr) {}
  virtual ~KernelExDef();

  KernelExDef(const KernelExDef& from);
  KernelExDef(KernelExDef&& from) noexcept
    : KernelExDef() {
    *this = ::std::move(from);
  }

  inline KernelExDef& operator=(const KernelExDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelExDef& operator=(KernelExDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KernelExDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KernelExDef* internal_default_instance() {
    return reinterpret_cast<const KernelExDef*>(
               &_KernelExDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(KernelExDef& a, KernelExDef& b) {
    a.Swap(&b);
  }
  inline void Swap(KernelExDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KernelExDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KernelExDef* New() const final {
    return CreateMaybeMessage<KernelExDef>(nullptr);
  }

  KernelExDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KernelExDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KernelExDef& from);
  void MergeFrom(const KernelExDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KernelExDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.KernelExDef";
  }
  protected:
  explicit KernelExDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgsFieldNumber = 13,
    kTaskInfoFieldNumber = 14,
    kKernelExtInfoFieldNumber = 16,
    kFlagsFieldNumber = 1,
    kOpIndexFieldNumber = 4,
    kKernelExtInfoSizeFieldNumber = 17,
    kArgsSizeFieldNumber = 12,
    kTaskInfoSizeFieldNumber = 15,
  };
  // bytes args = 13;
  void clear_args();
  const std::string& args() const;
  void set_args(const std::string& value);
  void set_args(std::string&& value);
  void set_args(const char* value);
  void set_args(const void* value, size_t size);
  std::string* mutable_args();
  std::string* release_args();
  void set_allocated_args(std::string* args);
  private:
  const std::string& _internal_args() const;
  void _internal_set_args(const std::string& value);
  std::string* _internal_mutable_args();
  public:

  // bytes task_info = 14;
  void clear_task_info();
  const std::string& task_info() const;
  void set_task_info(const std::string& value);
  void set_task_info(std::string&& value);
  void set_task_info(const char* value);
  void set_task_info(const void* value, size_t size);
  std::string* mutable_task_info();
  std::string* release_task_info();
  void set_allocated_task_info(std::string* task_info);
  private:
  const std::string& _internal_task_info() const;
  void _internal_set_task_info(const std::string& value);
  std::string* _internal_mutable_task_info();
  public:

  // bytes kernel_ext_info = 16;
  void clear_kernel_ext_info();
  const std::string& kernel_ext_info() const;
  void set_kernel_ext_info(const std::string& value);
  void set_kernel_ext_info(std::string&& value);
  void set_kernel_ext_info(const char* value);
  void set_kernel_ext_info(const void* value, size_t size);
  std::string* mutable_kernel_ext_info();
  std::string* release_kernel_ext_info();
  void set_allocated_kernel_ext_info(std::string* kernel_ext_info);
  private:
  const std::string& _internal_kernel_ext_info() const;
  void _internal_set_kernel_ext_info(const std::string& value);
  std::string* _internal_mutable_kernel_ext_info();
  public:

  // uint32 flags = 1;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flags() const;
  void _internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 op_index = 4;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 kernel_ext_info_size = 17;
  void clear_kernel_ext_info_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_ext_info_size() const;
  void set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kernel_ext_info_size() const;
  void _internal_set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 args_size = 12;
  void clear_args_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 args_size() const;
  void set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_args_size() const;
  void _internal_set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 task_info_size = 15;
  void clear_task_info_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 task_info_size() const;
  void set_task_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_task_info_size() const;
  void _internal_set_task_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.KernelExDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr args_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr task_info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kernel_ext_info_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_ext_info_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 args_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 task_info_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class KernelHcclDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.KernelHcclDef) */ {
 public:
  inline KernelHcclDef() : KernelHcclDef(nullptr) {}
  virtual ~KernelHcclDef();

  KernelHcclDef(const KernelHcclDef& from);
  KernelHcclDef(KernelHcclDef&& from) noexcept
    : KernelHcclDef() {
    *this = ::std::move(from);
  }

  inline KernelHcclDef& operator=(const KernelHcclDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline KernelHcclDef& operator=(KernelHcclDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KernelHcclDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KernelHcclDef* internal_default_instance() {
    return reinterpret_cast<const KernelHcclDef*>(
               &_KernelHcclDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(KernelHcclDef& a, KernelHcclDef& b) {
    a.Swap(&b);
  }
  inline void Swap(KernelHcclDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KernelHcclDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KernelHcclDef* New() const final {
    return CreateMaybeMessage<KernelHcclDef>(nullptr);
  }

  KernelHcclDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KernelHcclDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KernelHcclDef& from);
  void MergeFrom(const KernelHcclDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KernelHcclDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.KernelHcclDef";
  }
  protected:
  explicit KernelHcclDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputZeroCopyFlagFieldNumber = 10,
    kOutputZeroCopyFlagFieldNumber = 11,
    kHcclTypeFieldNumber = 9,
    kOpIndexFieldNumber = 8,
  };
  // repeated int32 input_zero_copy_flag = 10;
  int input_zero_copy_flag_size() const;
  private:
  int _internal_input_zero_copy_flag_size() const;
  public:
  void clear_input_zero_copy_flag();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_input_zero_copy_flag(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_input_zero_copy_flag() const;
  void _internal_add_input_zero_copy_flag(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_input_zero_copy_flag();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 input_zero_copy_flag(int index) const;
  void set_input_zero_copy_flag(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_input_zero_copy_flag(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      input_zero_copy_flag() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_input_zero_copy_flag();

  // repeated int32 output_zero_copy_flag = 11;
  int output_zero_copy_flag_size() const;
  private:
  int _internal_output_zero_copy_flag_size() const;
  public:
  void clear_output_zero_copy_flag();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_output_zero_copy_flag(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_output_zero_copy_flag() const;
  void _internal_add_output_zero_copy_flag(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_output_zero_copy_flag();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 output_zero_copy_flag(int index) const;
  void set_output_zero_copy_flag(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_output_zero_copy_flag(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      output_zero_copy_flag() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_output_zero_copy_flag();

  // string hccl_type = 9;
  void clear_hccl_type();
  const std::string& hccl_type() const;
  void set_hccl_type(const std::string& value);
  void set_hccl_type(std::string&& value);
  void set_hccl_type(const char* value);
  void set_hccl_type(const char* value, size_t size);
  std::string* mutable_hccl_type();
  std::string* release_hccl_type();
  void set_allocated_hccl_type(std::string* hccl_type);
  private:
  const std::string& _internal_hccl_type() const;
  void _internal_set_hccl_type(const std::string& value);
  std::string* _internal_mutable_hccl_type();
  public:

  // uint32 op_index = 8;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.KernelHcclDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > input_zero_copy_flag_;
  mutable std::atomic<int> _input_zero_copy_flag_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > output_zero_copy_flag_;
  mutable std::atomic<int> _output_zero_copy_flag_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hccl_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class EventExDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.EventExDef) */ {
 public:
  inline EventExDef() : EventExDef(nullptr) {}
  virtual ~EventExDef();

  EventExDef(const EventExDef& from);
  EventExDef(EventExDef&& from) noexcept
    : EventExDef() {
    *this = ::std::move(from);
  }

  inline EventExDef& operator=(const EventExDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventExDef& operator=(EventExDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EventExDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventExDef* internal_default_instance() {
    return reinterpret_cast<const EventExDef*>(
               &_EventExDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(EventExDef& a, EventExDef& b) {
    a.Swap(&b);
  }
  inline void Swap(EventExDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventExDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EventExDef* New() const final {
    return CreateMaybeMessage<EventExDef>(nullptr);
  }

  EventExDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EventExDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EventExDef& from);
  void MergeFrom(const EventExDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventExDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.EventExDef";
  }
  protected:
  explicit EventExDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpIndexFieldNumber = 1,
    kEventTypeFieldNumber = 2,
  };
  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 event_type = 2;
  void clear_event_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_type() const;
  void set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_type() const;
  void _internal_set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.EventExDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class LogTimeStampDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.LogTimeStampDef) */ {
 public:
  inline LogTimeStampDef() : LogTimeStampDef(nullptr) {}
  virtual ~LogTimeStampDef();

  LogTimeStampDef(const LogTimeStampDef& from);
  LogTimeStampDef(LogTimeStampDef&& from) noexcept
    : LogTimeStampDef() {
    *this = ::std::move(from);
  }

  inline LogTimeStampDef& operator=(const LogTimeStampDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogTimeStampDef& operator=(LogTimeStampDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogTimeStampDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogTimeStampDef* internal_default_instance() {
    return reinterpret_cast<const LogTimeStampDef*>(
               &_LogTimeStampDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(LogTimeStampDef& a, LogTimeStampDef& b) {
    a.Swap(&b);
  }
  inline void Swap(LogTimeStampDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogTimeStampDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogTimeStampDef* New() const final {
    return CreateMaybeMessage<LogTimeStampDef>(nullptr);
  }

  LogTimeStampDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogTimeStampDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogTimeStampDef& from);
  void MergeFrom(const LogTimeStampDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogTimeStampDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.LogTimeStampDef";
  }
  protected:
  explicit LogTimeStampDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogidFieldNumber = 1,
    kNotifyFieldNumber = 2,
    kFlatFieldNumber = 3,
  };
  // uint64 logid = 1;
  void clear_logid();
  ::PROTOBUF_NAMESPACE_ID::uint64 logid() const;
  void set_logid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_logid() const;
  void _internal_set_logid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool notify = 2;
  void clear_notify();
  bool notify() const;
  void set_notify(bool value);
  private:
  bool _internal_notify() const;
  void _internal_set_notify(bool value);
  public:

  // uint32 flat = 3;
  void clear_flat();
  ::PROTOBUF_NAMESPACE_ID::uint32 flat() const;
  void set_flat(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flat() const;
  void _internal_set_flat(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.LogTimeStampDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 logid_;
  bool notify_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flat_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class MemcpyAsyncDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.MemcpyAsyncDef) */ {
 public:
  inline MemcpyAsyncDef() : MemcpyAsyncDef(nullptr) {}
  virtual ~MemcpyAsyncDef();

  MemcpyAsyncDef(const MemcpyAsyncDef& from);
  MemcpyAsyncDef(MemcpyAsyncDef&& from) noexcept
    : MemcpyAsyncDef() {
    *this = ::std::move(from);
  }

  inline MemcpyAsyncDef& operator=(const MemcpyAsyncDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemcpyAsyncDef& operator=(MemcpyAsyncDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MemcpyAsyncDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MemcpyAsyncDef* internal_default_instance() {
    return reinterpret_cast<const MemcpyAsyncDef*>(
               &_MemcpyAsyncDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MemcpyAsyncDef& a, MemcpyAsyncDef& b) {
    a.Swap(&b);
  }
  inline void Swap(MemcpyAsyncDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MemcpyAsyncDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MemcpyAsyncDef* New() const final {
    return CreateMaybeMessage<MemcpyAsyncDef>(nullptr);
  }

  MemcpyAsyncDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MemcpyAsyncDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MemcpyAsyncDef& from);
  void MergeFrom(const MemcpyAsyncDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemcpyAsyncDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.MemcpyAsyncDef";
  }
  protected:
  explicit MemcpyAsyncDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDstFieldNumber = 1,
    kDstMaxFieldNumber = 2,
    kSrcFieldNumber = 3,
    kCountFieldNumber = 4,
    kKindFieldNumber = 5,
    kOpIndexFieldNumber = 6,
  };
  // uint64 dst = 1;
  void clear_dst();
  ::PROTOBUF_NAMESPACE_ID::uint64 dst() const;
  void set_dst(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dst() const;
  void _internal_set_dst(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 dst_max = 2;
  void clear_dst_max();
  ::PROTOBUF_NAMESPACE_ID::uint64 dst_max() const;
  void set_dst_max(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dst_max() const;
  void _internal_set_dst_max(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 src = 3;
  void clear_src();
  ::PROTOBUF_NAMESPACE_ID::uint64 src() const;
  void set_src(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_src() const;
  void _internal_set_src(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 count = 4;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint64 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 kind = 5;
  void clear_kind();
  ::PROTOBUF_NAMESPACE_ID::uint32 kind() const;
  void set_kind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kind() const;
  void _internal_set_kind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 op_index = 6;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.MemcpyAsyncDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 dst_;
  ::PROTOBUF_NAMESPACE_ID::uint64 dst_max_;
  ::PROTOBUF_NAMESPACE_ID::uint64 src_;
  ::PROTOBUF_NAMESPACE_ID::uint64 count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kind_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class StreamSwitchDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.StreamSwitchDef) */ {
 public:
  inline StreamSwitchDef() : StreamSwitchDef(nullptr) {}
  virtual ~StreamSwitchDef();

  StreamSwitchDef(const StreamSwitchDef& from);
  StreamSwitchDef(StreamSwitchDef&& from) noexcept
    : StreamSwitchDef() {
    *this = ::std::move(from);
  }

  inline StreamSwitchDef& operator=(const StreamSwitchDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamSwitchDef& operator=(StreamSwitchDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StreamSwitchDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamSwitchDef* internal_default_instance() {
    return reinterpret_cast<const StreamSwitchDef*>(
               &_StreamSwitchDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(StreamSwitchDef& a, StreamSwitchDef& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamSwitchDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamSwitchDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StreamSwitchDef* New() const final {
    return CreateMaybeMessage<StreamSwitchDef>(nullptr);
  }

  StreamSwitchDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StreamSwitchDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StreamSwitchDef& from);
  void MergeFrom(const StreamSwitchDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamSwitchDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.StreamSwitchDef";
  }
  protected:
  explicit StreamSwitchDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpIndexFieldNumber = 1,
    kTrueStreamIdFieldNumber = 2,
    kValueFieldNumber = 3,
    kValuePtrFieldNumber = 4,
    kDataTypeFieldNumber = 5,
  };
  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 true_stream_id = 2;
  void clear_true_stream_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 true_stream_id() const;
  void set_true_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_true_stream_id() const;
  void _internal_set_true_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int64 value = 3;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int64 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // uint64 value_ptr = 4;
  void clear_value_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint64 value_ptr() const;
  void set_value_ptr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_value_ptr() const;
  void _internal_set_value_ptr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 data_type = 5;
  void clear_data_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type() const;
  void set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_type() const;
  void _internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.StreamSwitchDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 true_stream_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 value_ptr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class StreamActiveDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.StreamActiveDef) */ {
 public:
  inline StreamActiveDef() : StreamActiveDef(nullptr) {}
  virtual ~StreamActiveDef();

  StreamActiveDef(const StreamActiveDef& from);
  StreamActiveDef(StreamActiveDef&& from) noexcept
    : StreamActiveDef() {
    *this = ::std::move(from);
  }

  inline StreamActiveDef& operator=(const StreamActiveDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamActiveDef& operator=(StreamActiveDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StreamActiveDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamActiveDef* internal_default_instance() {
    return reinterpret_cast<const StreamActiveDef*>(
               &_StreamActiveDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(StreamActiveDef& a, StreamActiveDef& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamActiveDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamActiveDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StreamActiveDef* New() const final {
    return CreateMaybeMessage<StreamActiveDef>(nullptr);
  }

  StreamActiveDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StreamActiveDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StreamActiveDef& from);
  void MergeFrom(const StreamActiveDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamActiveDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.StreamActiveDef";
  }
  protected:
  explicit StreamActiveDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpIndexFieldNumber = 1,
    kActiveStreamIdFieldNumber = 2,
  };
  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 active_stream_id = 2;
  void clear_active_stream_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 active_stream_id() const;
  void set_active_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active_stream_id() const;
  void _internal_set_active_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.StreamActiveDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_stream_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class StreamSwitchNDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.StreamSwitchNDef) */ {
 public:
  inline StreamSwitchNDef() : StreamSwitchNDef(nullptr) {}
  virtual ~StreamSwitchNDef();

  StreamSwitchNDef(const StreamSwitchNDef& from);
  StreamSwitchNDef(StreamSwitchNDef&& from) noexcept
    : StreamSwitchNDef() {
    *this = ::std::move(from);
  }

  inline StreamSwitchNDef& operator=(const StreamSwitchNDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamSwitchNDef& operator=(StreamSwitchNDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StreamSwitchNDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StreamSwitchNDef* internal_default_instance() {
    return reinterpret_cast<const StreamSwitchNDef*>(
               &_StreamSwitchNDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(StreamSwitchNDef& a, StreamSwitchNDef& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamSwitchNDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamSwitchNDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StreamSwitchNDef* New() const final {
    return CreateMaybeMessage<StreamSwitchNDef>(nullptr);
  }

  StreamSwitchNDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StreamSwitchNDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StreamSwitchNDef& from);
  void MergeFrom(const StreamSwitchNDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StreamSwitchNDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.StreamSwitchNDef";
  }
  protected:
  explicit StreamSwitchNDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetValueFieldNumber = 3,
    kTrueStreamIdFieldNumber = 4,
    kOpIndexFieldNumber = 1,
    kSizeFieldNumber = 2,
    kElementSizeFieldNumber = 5,
    kDataTypeFieldNumber = 6,
  };
  // repeated int64 target_value = 3;
  int target_value_size() const;
  private:
  int _internal_target_value_size() const;
  public:
  void clear_target_value();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_target_value(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_target_value() const;
  void _internal_add_target_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_target_value();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 target_value(int index) const;
  void set_target_value(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_target_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      target_value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_target_value();

  // repeated uint32 true_stream_id = 4;
  int true_stream_id_size() const;
  private:
  int _internal_true_stream_id_size() const;
  public:
  void clear_true_stream_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_true_stream_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_true_stream_id() const;
  void _internal_add_true_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_true_stream_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 true_stream_id(int index) const;
  void set_true_stream_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_true_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      true_stream_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_true_stream_id();

  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 size = 2;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 element_size = 5;
  void clear_element_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 element_size() const;
  void set_element_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_element_size() const;
  void _internal_set_element_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_type = 6;
  void clear_data_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type() const;
  void set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_type() const;
  void _internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.StreamSwitchNDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > target_value_;
  mutable std::atomic<int> _target_value_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > true_stream_id_;
  mutable std::atomic<int> _true_stream_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 element_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class LabelSetDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.LabelSetDef) */ {
 public:
  inline LabelSetDef() : LabelSetDef(nullptr) {}
  virtual ~LabelSetDef();

  LabelSetDef(const LabelSetDef& from);
  LabelSetDef(LabelSetDef&& from) noexcept
    : LabelSetDef() {
    *this = ::std::move(from);
  }

  inline LabelSetDef& operator=(const LabelSetDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline LabelSetDef& operator=(LabelSetDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LabelSetDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelSetDef* internal_default_instance() {
    return reinterpret_cast<const LabelSetDef*>(
               &_LabelSetDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(LabelSetDef& a, LabelSetDef& b) {
    a.Swap(&b);
  }
  inline void Swap(LabelSetDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LabelSetDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LabelSetDef* New() const final {
    return CreateMaybeMessage<LabelSetDef>(nullptr);
  }

  LabelSetDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LabelSetDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LabelSetDef& from);
  void MergeFrom(const LabelSetDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LabelSetDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.LabelSetDef";
  }
  protected:
  explicit LabelSetDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpIndexFieldNumber = 1,
    kLabelIdFieldNumber = 2,
    kModelIdFieldNumber = 3,
  };
  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 label_id = 2;
  void clear_label_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 label_id() const;
  void set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_label_id() const;
  void _internal_set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 model_id = 3;
  void clear_model_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 model_id() const;
  void set_model_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_model_id() const;
  void _internal_set_model_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.LabelSetDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 label_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 model_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class LabelGotoExDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.LabelGotoExDef) */ {
 public:
  inline LabelGotoExDef() : LabelGotoExDef(nullptr) {}
  virtual ~LabelGotoExDef();

  LabelGotoExDef(const LabelGotoExDef& from);
  LabelGotoExDef(LabelGotoExDef&& from) noexcept
    : LabelGotoExDef() {
    *this = ::std::move(from);
  }

  inline LabelGotoExDef& operator=(const LabelGotoExDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline LabelGotoExDef& operator=(LabelGotoExDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LabelGotoExDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelGotoExDef* internal_default_instance() {
    return reinterpret_cast<const LabelGotoExDef*>(
               &_LabelGotoExDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(LabelGotoExDef& a, LabelGotoExDef& b) {
    a.Swap(&b);
  }
  inline void Swap(LabelGotoExDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LabelGotoExDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LabelGotoExDef* New() const final {
    return CreateMaybeMessage<LabelGotoExDef>(nullptr);
  }

  LabelGotoExDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LabelGotoExDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LabelGotoExDef& from);
  void MergeFrom(const LabelGotoExDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LabelGotoExDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.LabelGotoExDef";
  }
  protected:
  explicit LabelGotoExDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpIndexFieldNumber = 1,
    kLabelIdFieldNumber = 2,
    kModelIdFieldNumber = 3,
  };
  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 label_id = 2;
  void clear_label_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 label_id() const;
  void set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_label_id() const;
  void _internal_set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 model_id = 3;
  void clear_model_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 model_id() const;
  void set_model_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_model_id() const;
  void _internal_set_model_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.LabelGotoExDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 label_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 model_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class LabelSwitchByIndexDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.LabelSwitchByIndexDef) */ {
 public:
  inline LabelSwitchByIndexDef() : LabelSwitchByIndexDef(nullptr) {}
  virtual ~LabelSwitchByIndexDef();

  LabelSwitchByIndexDef(const LabelSwitchByIndexDef& from);
  LabelSwitchByIndexDef(LabelSwitchByIndexDef&& from) noexcept
    : LabelSwitchByIndexDef() {
    *this = ::std::move(from);
  }

  inline LabelSwitchByIndexDef& operator=(const LabelSwitchByIndexDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline LabelSwitchByIndexDef& operator=(LabelSwitchByIndexDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LabelSwitchByIndexDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelSwitchByIndexDef* internal_default_instance() {
    return reinterpret_cast<const LabelSwitchByIndexDef*>(
               &_LabelSwitchByIndexDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(LabelSwitchByIndexDef& a, LabelSwitchByIndexDef& b) {
    a.Swap(&b);
  }
  inline void Swap(LabelSwitchByIndexDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LabelSwitchByIndexDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LabelSwitchByIndexDef* New() const final {
    return CreateMaybeMessage<LabelSwitchByIndexDef>(nullptr);
  }

  LabelSwitchByIndexDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LabelSwitchByIndexDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LabelSwitchByIndexDef& from);
  void MergeFrom(const LabelSwitchByIndexDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LabelSwitchByIndexDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.LabelSwitchByIndexDef";
  }
  protected:
  explicit LabelSwitchByIndexDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpIndexFieldNumber = 1,
    kLabelMaxFieldNumber = 2,
  };
  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 label_max = 2;
  void clear_label_max();
  ::PROTOBUF_NAMESPACE_ID::uint32 label_max() const;
  void set_label_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_label_max() const;
  void _internal_set_label_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.LabelSwitchByIndexDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 label_max_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsTaskDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsTaskDef) */ {
 public:
  inline FftsTaskDef() : FftsTaskDef(nullptr) {}
  virtual ~FftsTaskDef();

  FftsTaskDef(const FftsTaskDef& from);
  FftsTaskDef(FftsTaskDef&& from) noexcept
    : FftsTaskDef() {
    *this = ::std::move(from);
  }

  inline FftsTaskDef& operator=(const FftsTaskDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsTaskDef& operator=(FftsTaskDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsTaskDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsTaskDef* internal_default_instance() {
    return reinterpret_cast<const FftsTaskDef*>(
               &_FftsTaskDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(FftsTaskDef& a, FftsTaskDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsTaskDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsTaskDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsTaskDef* New() const final {
    return CreateMaybeMessage<FftsTaskDef>(nullptr);
  }

  FftsTaskDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsTaskDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsTaskDef& from);
  void MergeFrom(const FftsTaskDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsTaskDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsTaskDef";
  }
  protected:
  explicit FftsTaskDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubTaskFieldNumber = 5,
    kTicketCacheFieldNumber = 6,
    kFftsDescFieldNumber = 4,
    kOpIndexFieldNumber = 1,
    kFftsTypeFieldNumber = 2,
    kAddrSizeFieldNumber = 3,
  };
  // repeated .domi.FftsSubTaskDef sub_task = 5;
  int sub_task_size() const;
  private:
  int _internal_sub_task_size() const;
  public:
  void clear_sub_task();
  ::domi::FftsSubTaskDef* mutable_sub_task(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsSubTaskDef >*
      mutable_sub_task();
  private:
  const ::domi::FftsSubTaskDef& _internal_sub_task(int index) const;
  ::domi::FftsSubTaskDef* _internal_add_sub_task();
  public:
  const ::domi::FftsSubTaskDef& sub_task(int index) const;
  ::domi::FftsSubTaskDef* add_sub_task();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsSubTaskDef >&
      sub_task() const;

  // repeated .domi.TicketCacheDef ticket_cache = 6;
  int ticket_cache_size() const;
  private:
  int _internal_ticket_cache_size() const;
  public:
  void clear_ticket_cache();
  ::domi::TicketCacheDef* mutable_ticket_cache(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TicketCacheDef >*
      mutable_ticket_cache();
  private:
  const ::domi::TicketCacheDef& _internal_ticket_cache(int index) const;
  ::domi::TicketCacheDef* _internal_add_ticket_cache();
  public:
  const ::domi::TicketCacheDef& ticket_cache(int index) const;
  ::domi::TicketCacheDef* add_ticket_cache();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TicketCacheDef >&
      ticket_cache() const;

  // .domi.FftsDescInfoDef ffts_desc = 4;
  bool has_ffts_desc() const;
  private:
  bool _internal_has_ffts_desc() const;
  public:
  void clear_ffts_desc();
  const ::domi::FftsDescInfoDef& ffts_desc() const;
  ::domi::FftsDescInfoDef* release_ffts_desc();
  ::domi::FftsDescInfoDef* mutable_ffts_desc();
  void set_allocated_ffts_desc(::domi::FftsDescInfoDef* ffts_desc);
  private:
  const ::domi::FftsDescInfoDef& _internal_ffts_desc() const;
  ::domi::FftsDescInfoDef* _internal_mutable_ffts_desc();
  public:
  void unsafe_arena_set_allocated_ffts_desc(
      ::domi::FftsDescInfoDef* ffts_desc);
  ::domi::FftsDescInfoDef* unsafe_arena_release_ffts_desc();

  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ffts_type = 2;
  void clear_ffts_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 ffts_type() const;
  void set_ffts_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ffts_type() const;
  void _internal_set_ffts_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 addr_size = 3;
  void clear_addr_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 addr_size() const;
  void set_addr_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_addr_size() const;
  void _internal_set_addr_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsTaskDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsSubTaskDef > sub_task_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TicketCacheDef > ticket_cache_;
  ::domi::FftsDescInfoDef* ffts_desc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ffts_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 addr_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsDescInfoDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsDescInfoDef) */ {
 public:
  inline FftsDescInfoDef() : FftsDescInfoDef(nullptr) {}
  virtual ~FftsDescInfoDef();

  FftsDescInfoDef(const FftsDescInfoDef& from);
  FftsDescInfoDef(FftsDescInfoDef&& from) noexcept
    : FftsDescInfoDef() {
    *this = ::std::move(from);
  }

  inline FftsDescInfoDef& operator=(const FftsDescInfoDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsDescInfoDef& operator=(FftsDescInfoDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsDescInfoDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsDescInfoDef* internal_default_instance() {
    return reinterpret_cast<const FftsDescInfoDef*>(
               &_FftsDescInfoDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(FftsDescInfoDef& a, FftsDescInfoDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsDescInfoDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsDescInfoDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsDescInfoDef* New() const final {
    return CreateMaybeMessage<FftsDescInfoDef>(nullptr);
  }

  FftsDescInfoDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsDescInfoDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsDescInfoDef& from);
  void MergeFrom(const FftsDescInfoDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsDescInfoDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsDescInfoDef";
  }
  protected:
  explicit FftsDescInfoDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTmFieldNumber = 1,
    kDiFieldNumber = 2,
    kDwFieldNumber = 3,
    kDfFieldNumber = 4,
    kDataSplitUnitFieldNumber = 5,
    kPrefetchOstNumFieldNumber = 6,
    kCacheMaintainOstNumFieldNumber = 7,
    kAicPrefetchUpperFieldNumber = 8,
    kAicPrefetchLowerFieldNumber = 9,
    kAivPrefetchUpperFieldNumber = 10,
    kAivPrefetchLowerFieldNumber = 11,
  };
  // uint32 tm = 1;
  void clear_tm();
  ::PROTOBUF_NAMESPACE_ID::uint32 tm() const;
  void set_tm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tm() const;
  void _internal_set_tm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 di = 2;
  void clear_di();
  ::PROTOBUF_NAMESPACE_ID::uint32 di() const;
  void set_di(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_di() const;
  void _internal_set_di(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 dw = 3;
  void clear_dw();
  ::PROTOBUF_NAMESPACE_ID::uint32 dw() const;
  void set_dw(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dw() const;
  void _internal_set_dw(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 df = 4;
  void clear_df();
  ::PROTOBUF_NAMESPACE_ID::uint32 df() const;
  void set_df(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_df() const;
  void _internal_set_df(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_split_unit = 5;
  void clear_data_split_unit();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_split_unit() const;
  void set_data_split_unit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_split_unit() const;
  void _internal_set_data_split_unit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_ost_num = 6;
  void clear_prefetch_ost_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_ost_num() const;
  void set_prefetch_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_ost_num() const;
  void _internal_set_prefetch_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cache_maintain_ost_num = 7;
  void clear_cache_maintain_ost_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 cache_maintain_ost_num() const;
  void set_cache_maintain_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cache_maintain_ost_num() const;
  void _internal_set_cache_maintain_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aic_prefetch_upper = 8;
  void clear_aic_prefetch_upper();
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_prefetch_upper() const;
  void set_aic_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aic_prefetch_upper() const;
  void _internal_set_aic_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aic_prefetch_lower = 9;
  void clear_aic_prefetch_lower();
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_prefetch_lower() const;
  void set_aic_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aic_prefetch_lower() const;
  void _internal_set_aic_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aiv_prefetch_upper = 10;
  void clear_aiv_prefetch_upper();
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_prefetch_upper() const;
  void set_aiv_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aiv_prefetch_upper() const;
  void _internal_set_aiv_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aiv_prefetch_lower = 11;
  void clear_aiv_prefetch_lower();
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_prefetch_lower() const;
  void set_aiv_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aiv_prefetch_lower() const;
  void _internal_set_aiv_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsDescInfoDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 di_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dw_;
  ::PROTOBUF_NAMESPACE_ID::uint32 df_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_split_unit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_ost_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cache_maintain_ost_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_prefetch_upper_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_prefetch_lower_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_prefetch_upper_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_prefetch_lower_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsSubTaskDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsSubTaskDef) */ {
 public:
  inline FftsSubTaskDef() : FftsSubTaskDef(nullptr) {}
  virtual ~FftsSubTaskDef();

  FftsSubTaskDef(const FftsSubTaskDef& from);
  FftsSubTaskDef(FftsSubTaskDef&& from) noexcept
    : FftsSubTaskDef() {
    *this = ::std::move(from);
  }

  inline FftsSubTaskDef& operator=(const FftsSubTaskDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsSubTaskDef& operator=(FftsSubTaskDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsSubTaskDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsSubTaskDef* internal_default_instance() {
    return reinterpret_cast<const FftsSubTaskDef*>(
               &_FftsSubTaskDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(FftsSubTaskDef& a, FftsSubTaskDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsSubTaskDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsSubTaskDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsSubTaskDef* New() const final {
    return CreateMaybeMessage<FftsSubTaskDef>(nullptr);
  }

  FftsSubTaskDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsSubTaskDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsSubTaskDef& from);
  void MergeFrom(const FftsSubTaskDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsSubTaskDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsSubTaskDef";
  }
  protected:
  explicit FftsSubTaskDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDstTickCacheIdFieldNumber = 6,
    kSrcTickCacheIdFieldNumber = 7,
    kAutoThreadAicAivFieldNumber = 8,
    kManualThreadAicAivFieldNumber = 9,
    kManualThreadNopFieldNumber = 10,
    kSubTaskTypeFieldNumber = 1,
    kThreadDimFieldNumber = 2,
    kDstTickCacheVldBitmapFieldNumber = 3,
    kSrcTickCacheVldBitmapFieldNumber = 4,
    kSrcDataOutOfSubgraphBitmapFieldNumber = 5,
  };
  // repeated uint32 dst_tick_cache_id = 6;
  int dst_tick_cache_id_size() const;
  private:
  int _internal_dst_tick_cache_id_size() const;
  public:
  void clear_dst_tick_cache_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dst_tick_cache_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_dst_tick_cache_id() const;
  void _internal_add_dst_tick_cache_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_dst_tick_cache_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 dst_tick_cache_id(int index) const;
  void set_dst_tick_cache_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_dst_tick_cache_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      dst_tick_cache_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_dst_tick_cache_id();

  // repeated uint32 src_tick_cache_id = 7;
  int src_tick_cache_id_size() const;
  private:
  int _internal_src_tick_cache_id_size() const;
  public:
  void clear_src_tick_cache_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_src_tick_cache_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_src_tick_cache_id() const;
  void _internal_add_src_tick_cache_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_src_tick_cache_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 src_tick_cache_id(int index) const;
  void set_src_tick_cache_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_src_tick_cache_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      src_tick_cache_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_src_tick_cache_id();

  // .domi.AutoThreadAicAivDef auto_thread_aic_aiv = 8;
  bool has_auto_thread_aic_aiv() const;
  private:
  bool _internal_has_auto_thread_aic_aiv() const;
  public:
  void clear_auto_thread_aic_aiv();
  const ::domi::AutoThreadAicAivDef& auto_thread_aic_aiv() const;
  ::domi::AutoThreadAicAivDef* release_auto_thread_aic_aiv();
  ::domi::AutoThreadAicAivDef* mutable_auto_thread_aic_aiv();
  void set_allocated_auto_thread_aic_aiv(::domi::AutoThreadAicAivDef* auto_thread_aic_aiv);
  private:
  const ::domi::AutoThreadAicAivDef& _internal_auto_thread_aic_aiv() const;
  ::domi::AutoThreadAicAivDef* _internal_mutable_auto_thread_aic_aiv();
  public:
  void unsafe_arena_set_allocated_auto_thread_aic_aiv(
      ::domi::AutoThreadAicAivDef* auto_thread_aic_aiv);
  ::domi::AutoThreadAicAivDef* unsafe_arena_release_auto_thread_aic_aiv();

  // .domi.ManualThreadAicAivDef manual_thread_aic_aiv = 9;
  bool has_manual_thread_aic_aiv() const;
  private:
  bool _internal_has_manual_thread_aic_aiv() const;
  public:
  void clear_manual_thread_aic_aiv();
  const ::domi::ManualThreadAicAivDef& manual_thread_aic_aiv() const;
  ::domi::ManualThreadAicAivDef* release_manual_thread_aic_aiv();
  ::domi::ManualThreadAicAivDef* mutable_manual_thread_aic_aiv();
  void set_allocated_manual_thread_aic_aiv(::domi::ManualThreadAicAivDef* manual_thread_aic_aiv);
  private:
  const ::domi::ManualThreadAicAivDef& _internal_manual_thread_aic_aiv() const;
  ::domi::ManualThreadAicAivDef* _internal_mutable_manual_thread_aic_aiv();
  public:
  void unsafe_arena_set_allocated_manual_thread_aic_aiv(
      ::domi::ManualThreadAicAivDef* manual_thread_aic_aiv);
  ::domi::ManualThreadAicAivDef* unsafe_arena_release_manual_thread_aic_aiv();

  // .domi.ManualThreadNopDef manual_thread_nop = 10;
  bool has_manual_thread_nop() const;
  private:
  bool _internal_has_manual_thread_nop() const;
  public:
  void clear_manual_thread_nop();
  const ::domi::ManualThreadNopDef& manual_thread_nop() const;
  ::domi::ManualThreadNopDef* release_manual_thread_nop();
  ::domi::ManualThreadNopDef* mutable_manual_thread_nop();
  void set_allocated_manual_thread_nop(::domi::ManualThreadNopDef* manual_thread_nop);
  private:
  const ::domi::ManualThreadNopDef& _internal_manual_thread_nop() const;
  ::domi::ManualThreadNopDef* _internal_mutable_manual_thread_nop();
  public:
  void unsafe_arena_set_allocated_manual_thread_nop(
      ::domi::ManualThreadNopDef* manual_thread_nop);
  ::domi::ManualThreadNopDef* unsafe_arena_release_manual_thread_nop();

  // uint32 sub_task_type = 1;
  void clear_sub_task_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 sub_task_type() const;
  void set_sub_task_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sub_task_type() const;
  void _internal_set_sub_task_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 2;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 dst_tick_cache_vld_bitmap = 3;
  void clear_dst_tick_cache_vld_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 dst_tick_cache_vld_bitmap() const;
  void set_dst_tick_cache_vld_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dst_tick_cache_vld_bitmap() const;
  void _internal_set_dst_tick_cache_vld_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 src_tick_cache_vld_bitmap = 4;
  void clear_src_tick_cache_vld_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 src_tick_cache_vld_bitmap() const;
  void set_src_tick_cache_vld_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_src_tick_cache_vld_bitmap() const;
  void _internal_set_src_tick_cache_vld_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 src_data_out_of_subgraph_bitmap = 5;
  void clear_src_data_out_of_subgraph_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 src_data_out_of_subgraph_bitmap() const;
  void set_src_data_out_of_subgraph_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_src_data_out_of_subgraph_bitmap() const;
  void _internal_set_src_data_out_of_subgraph_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsSubTaskDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > dst_tick_cache_id_;
  mutable std::atomic<int> _dst_tick_cache_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > src_tick_cache_id_;
  mutable std::atomic<int> _src_tick_cache_id_cached_byte_size_;
  ::domi::AutoThreadAicAivDef* auto_thread_aic_aiv_;
  ::domi::ManualThreadAicAivDef* manual_thread_aic_aiv_;
  ::domi::ManualThreadNopDef* manual_thread_nop_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sub_task_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dst_tick_cache_vld_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 src_tick_cache_vld_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 src_data_out_of_subgraph_bitmap_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class TicketCacheDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.TicketCacheDef) */ {
 public:
  inline TicketCacheDef() : TicketCacheDef(nullptr) {}
  virtual ~TicketCacheDef();

  TicketCacheDef(const TicketCacheDef& from);
  TicketCacheDef(TicketCacheDef&& from) noexcept
    : TicketCacheDef() {
    *this = ::std::move(from);
  }

  inline TicketCacheDef& operator=(const TicketCacheDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline TicketCacheDef& operator=(TicketCacheDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TicketCacheDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TicketCacheDef* internal_default_instance() {
    return reinterpret_cast<const TicketCacheDef*>(
               &_TicketCacheDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(TicketCacheDef& a, TicketCacheDef& b) {
    a.Swap(&b);
  }
  inline void Swap(TicketCacheDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TicketCacheDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TicketCacheDef* New() const final {
    return CreateMaybeMessage<TicketCacheDef>(nullptr);
  }

  TicketCacheDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TicketCacheDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TicketCacheDef& from);
  void MergeFrom(const TicketCacheDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TicketCacheDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.TicketCacheDef";
  }
  protected:
  explicit TicketCacheDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAutoThreadCacheFieldNumber = 3,
    kManualThreadCacheFieldNumber = 4,
    kCacheOptionFieldNumber = 1,
    kTicketCacheWindowFieldNumber = 2,
  };
  // .domi.AutoThreadCacheDef auto_thread_cache = 3;
  bool has_auto_thread_cache() const;
  private:
  bool _internal_has_auto_thread_cache() const;
  public:
  void clear_auto_thread_cache();
  const ::domi::AutoThreadCacheDef& auto_thread_cache() const;
  ::domi::AutoThreadCacheDef* release_auto_thread_cache();
  ::domi::AutoThreadCacheDef* mutable_auto_thread_cache();
  void set_allocated_auto_thread_cache(::domi::AutoThreadCacheDef* auto_thread_cache);
  private:
  const ::domi::AutoThreadCacheDef& _internal_auto_thread_cache() const;
  ::domi::AutoThreadCacheDef* _internal_mutable_auto_thread_cache();
  public:
  void unsafe_arena_set_allocated_auto_thread_cache(
      ::domi::AutoThreadCacheDef* auto_thread_cache);
  ::domi::AutoThreadCacheDef* unsafe_arena_release_auto_thread_cache();

  // .domi.ManualThreadCacheDef manual_thread_cache = 4;
  bool has_manual_thread_cache() const;
  private:
  bool _internal_has_manual_thread_cache() const;
  public:
  void clear_manual_thread_cache();
  const ::domi::ManualThreadCacheDef& manual_thread_cache() const;
  ::domi::ManualThreadCacheDef* release_manual_thread_cache();
  ::domi::ManualThreadCacheDef* mutable_manual_thread_cache();
  void set_allocated_manual_thread_cache(::domi::ManualThreadCacheDef* manual_thread_cache);
  private:
  const ::domi::ManualThreadCacheDef& _internal_manual_thread_cache() const;
  ::domi::ManualThreadCacheDef* _internal_mutable_manual_thread_cache();
  public:
  void unsafe_arena_set_allocated_manual_thread_cache(
      ::domi::ManualThreadCacheDef* manual_thread_cache);
  ::domi::ManualThreadCacheDef* unsafe_arena_release_manual_thread_cache();

  // uint32 cache_option = 1;
  void clear_cache_option();
  ::PROTOBUF_NAMESPACE_ID::uint32 cache_option() const;
  void set_cache_option(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cache_option() const;
  void _internal_set_cache_option(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ticket_cache_window = 2;
  void clear_ticket_cache_window();
  ::PROTOBUF_NAMESPACE_ID::uint32 ticket_cache_window() const;
  void set_ticket_cache_window(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ticket_cache_window() const;
  void _internal_set_ticket_cache_window(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.TicketCacheDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::domi::AutoThreadCacheDef* auto_thread_cache_;
  ::domi::ManualThreadCacheDef* manual_thread_cache_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cache_option_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ticket_cache_window_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class AutoThreadAicAivDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.AutoThreadAicAivDef) */ {
 public:
  inline AutoThreadAicAivDef() : AutoThreadAicAivDef(nullptr) {}
  virtual ~AutoThreadAicAivDef();

  AutoThreadAicAivDef(const AutoThreadAicAivDef& from);
  AutoThreadAicAivDef(AutoThreadAicAivDef&& from) noexcept
    : AutoThreadAicAivDef() {
    *this = ::std::move(from);
  }

  inline AutoThreadAicAivDef& operator=(const AutoThreadAicAivDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutoThreadAicAivDef& operator=(AutoThreadAicAivDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AutoThreadAicAivDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutoThreadAicAivDef* internal_default_instance() {
    return reinterpret_cast<const AutoThreadAicAivDef*>(
               &_AutoThreadAicAivDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(AutoThreadAicAivDef& a, AutoThreadAicAivDef& b) {
    a.Swap(&b);
  }
  inline void Swap(AutoThreadAicAivDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutoThreadAicAivDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutoThreadAicAivDef* New() const final {
    return CreateMaybeMessage<AutoThreadAicAivDef>(nullptr);
  }

  AutoThreadAicAivDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutoThreadAicAivDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AutoThreadAicAivDef& from);
  void MergeFrom(const AutoThreadAicAivDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutoThreadAicAivDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.AutoThreadAicAivDef";
  }
  protected:
  explicit AutoThreadAicAivDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTaskAddrFieldNumber = 1,
    kTaskAddrOffsetFieldNumber = 2,
    kSrcPrefetchFieldNumber = 13,
    kNonTailTaskFuncStubFieldNumber = 11,
    kTailTaskFuncStubFieldNumber = 12,
    kTaskParamOffsetFieldNumber = 3,
    kSatModeFieldNumber = 4,
    kScheduleModeFieldNumber = 5,
    kCachePrefetchCntFieldNumber = 6,
    kPrefetchEnableBitmapFieldNumber = 7,
    kPrefetchOnceBitmapFieldNumber = 8,
    kTailBlkDimFieldNumber = 9,
    kNonTailBlkDimFieldNumber = 10,
    kInputOutputCountFieldNumber = 14,
  };
  // repeated uint64 task_addr = 1;
  int task_addr_size() const;
  private:
  int _internal_task_addr_size() const;
  public:
  void clear_task_addr();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_addr(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_task_addr() const;
  void _internal_add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_task_addr();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 task_addr(int index) const;
  void set_task_addr(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      task_addr() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_task_addr();

  // repeated uint64 task_addr_offset = 2;
  int task_addr_offset_size() const;
  private:
  int _internal_task_addr_offset_size() const;
  public:
  void clear_task_addr_offset();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_addr_offset(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_task_addr_offset() const;
  void _internal_add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_task_addr_offset();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 task_addr_offset(int index) const;
  void set_task_addr_offset(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      task_addr_offset() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_task_addr_offset();

  // repeated .domi.AutoThreadPrefetchDef src_prefetch = 13;
  int src_prefetch_size() const;
  private:
  int _internal_src_prefetch_size() const;
  public:
  void clear_src_prefetch();
  ::domi::AutoThreadPrefetchDef* mutable_src_prefetch(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AutoThreadPrefetchDef >*
      mutable_src_prefetch();
  private:
  const ::domi::AutoThreadPrefetchDef& _internal_src_prefetch(int index) const;
  ::domi::AutoThreadPrefetchDef* _internal_add_src_prefetch();
  public:
  const ::domi::AutoThreadPrefetchDef& src_prefetch(int index) const;
  ::domi::AutoThreadPrefetchDef* add_src_prefetch();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AutoThreadPrefetchDef >&
      src_prefetch() const;

  // string non_tail_task_func_stub = 11;
  void clear_non_tail_task_func_stub();
  const std::string& non_tail_task_func_stub() const;
  void set_non_tail_task_func_stub(const std::string& value);
  void set_non_tail_task_func_stub(std::string&& value);
  void set_non_tail_task_func_stub(const char* value);
  void set_non_tail_task_func_stub(const char* value, size_t size);
  std::string* mutable_non_tail_task_func_stub();
  std::string* release_non_tail_task_func_stub();
  void set_allocated_non_tail_task_func_stub(std::string* non_tail_task_func_stub);
  private:
  const std::string& _internal_non_tail_task_func_stub() const;
  void _internal_set_non_tail_task_func_stub(const std::string& value);
  std::string* _internal_mutable_non_tail_task_func_stub();
  public:

  // string tail_task_func_stub = 12;
  void clear_tail_task_func_stub();
  const std::string& tail_task_func_stub() const;
  void set_tail_task_func_stub(const std::string& value);
  void set_tail_task_func_stub(std::string&& value);
  void set_tail_task_func_stub(const char* value);
  void set_tail_task_func_stub(const char* value, size_t size);
  std::string* mutable_tail_task_func_stub();
  std::string* release_tail_task_func_stub();
  void set_allocated_tail_task_func_stub(std::string* tail_task_func_stub);
  private:
  const std::string& _internal_tail_task_func_stub() const;
  void _internal_set_tail_task_func_stub(const std::string& value);
  std::string* _internal_mutable_tail_task_func_stub();
  public:

  // uint32 task_param_offset = 3;
  void clear_task_param_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 task_param_offset() const;
  void set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_task_param_offset() const;
  void _internal_set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 sat_mode = 4;
  void clear_sat_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 sat_mode() const;
  void set_sat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sat_mode() const;
  void _internal_set_sat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 schedule_mode = 5;
  void clear_schedule_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 schedule_mode() const;
  void set_schedule_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_schedule_mode() const;
  void _internal_set_schedule_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cache_prefetch_cnt = 6;
  void clear_cache_prefetch_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 cache_prefetch_cnt() const;
  void set_cache_prefetch_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cache_prefetch_cnt() const;
  void _internal_set_cache_prefetch_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_enable_bitmap = 7;
  void clear_prefetch_enable_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_enable_bitmap() const;
  void set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_enable_bitmap() const;
  void _internal_set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_once_bitmap = 8;
  void clear_prefetch_once_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_bitmap() const;
  void set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_once_bitmap() const;
  void _internal_set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_blk_dim = 9;
  void clear_tail_blk_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_blk_dim() const;
  void set_tail_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_blk_dim() const;
  void _internal_set_tail_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_blk_dim = 10;
  void clear_non_tail_blk_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_blk_dim() const;
  void set_non_tail_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_blk_dim() const;
  void _internal_set_non_tail_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input_output_count = 14;
  void clear_input_output_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 input_output_count() const;
  void set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_output_count() const;
  void _internal_set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.AutoThreadAicAivDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > task_addr_;
  mutable std::atomic<int> _task_addr_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > task_addr_offset_;
  mutable std::atomic<int> _task_addr_offset_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AutoThreadPrefetchDef > src_prefetch_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr non_tail_task_func_stub_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tail_task_func_stub_;
  ::PROTOBUF_NAMESPACE_ID::uint32 task_param_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sat_mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 schedule_mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cache_prefetch_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_enable_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_blk_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_blk_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input_output_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class AutoThreadCacheDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.AutoThreadCacheDef) */ {
 public:
  inline AutoThreadCacheDef() : AutoThreadCacheDef(nullptr) {}
  virtual ~AutoThreadCacheDef();

  AutoThreadCacheDef(const AutoThreadCacheDef& from);
  AutoThreadCacheDef(AutoThreadCacheDef&& from) noexcept
    : AutoThreadCacheDef() {
    *this = ::std::move(from);
  }

  inline AutoThreadCacheDef& operator=(const AutoThreadCacheDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutoThreadCacheDef& operator=(AutoThreadCacheDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AutoThreadCacheDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutoThreadCacheDef* internal_default_instance() {
    return reinterpret_cast<const AutoThreadCacheDef*>(
               &_AutoThreadCacheDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(AutoThreadCacheDef& a, AutoThreadCacheDef& b) {
    a.Swap(&b);
  }
  inline void Swap(AutoThreadCacheDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutoThreadCacheDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutoThreadCacheDef* New() const final {
    return CreateMaybeMessage<AutoThreadCacheDef>(nullptr);
  }

  AutoThreadCacheDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutoThreadCacheDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AutoThreadCacheDef& from);
  void MergeFrom(const AutoThreadCacheDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutoThreadCacheDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.AutoThreadCacheDef";
  }
  protected:
  explicit AutoThreadCacheDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataAddrFieldNumber = 1,
    kDataAddrOffsetFieldNumber = 2,
    kNonTailDataLenFieldNumber = 3,
    kTailDataLenFieldNumber = 4,
    kTicketCacheRefCntFieldNumber = 5,
  };
  // uint64 data_addr = 1;
  void clear_data_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 data_addr() const;
  void set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data_addr() const;
  void _internal_set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 data_addr_offset = 2;
  void clear_data_addr_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_addr_offset() const;
  void set_data_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_addr_offset() const;
  void _internal_set_data_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_data_len = 3;
  void clear_non_tail_data_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_data_len() const;
  void set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_data_len() const;
  void _internal_set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_data_len = 4;
  void clear_tail_data_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_data_len() const;
  void set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_data_len() const;
  void _internal_set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ticket_cache_ref_cnt = 5;
  void clear_ticket_cache_ref_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 ticket_cache_ref_cnt() const;
  void set_ticket_cache_ref_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ticket_cache_ref_cnt() const;
  void _internal_set_ticket_cache_ref_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.AutoThreadCacheDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 data_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_addr_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_data_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_data_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ticket_cache_ref_cnt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class AutoThreadPrefetchDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.AutoThreadPrefetchDef) */ {
 public:
  inline AutoThreadPrefetchDef() : AutoThreadPrefetchDef(nullptr) {}
  virtual ~AutoThreadPrefetchDef();

  AutoThreadPrefetchDef(const AutoThreadPrefetchDef& from);
  AutoThreadPrefetchDef(AutoThreadPrefetchDef&& from) noexcept
    : AutoThreadPrefetchDef() {
    *this = ::std::move(from);
  }

  inline AutoThreadPrefetchDef& operator=(const AutoThreadPrefetchDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutoThreadPrefetchDef& operator=(AutoThreadPrefetchDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AutoThreadPrefetchDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutoThreadPrefetchDef* internal_default_instance() {
    return reinterpret_cast<const AutoThreadPrefetchDef*>(
               &_AutoThreadPrefetchDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(AutoThreadPrefetchDef& a, AutoThreadPrefetchDef& b) {
    a.Swap(&b);
  }
  inline void Swap(AutoThreadPrefetchDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutoThreadPrefetchDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutoThreadPrefetchDef* New() const final {
    return CreateMaybeMessage<AutoThreadPrefetchDef>(nullptr);
  }

  AutoThreadPrefetchDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutoThreadPrefetchDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AutoThreadPrefetchDef& from);
  void MergeFrom(const AutoThreadPrefetchDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutoThreadPrefetchDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.AutoThreadPrefetchDef";
  }
  protected:
  explicit AutoThreadPrefetchDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataAddrFieldNumber = 1,
    kDataAddrOffsetFieldNumber = 2,
    kNonTailDataLenFieldNumber = 3,
    kTailDataLenFieldNumber = 4,
  };
  // uint64 data_addr = 1;
  void clear_data_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 data_addr() const;
  void set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data_addr() const;
  void _internal_set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 data_addr_offset = 2;
  void clear_data_addr_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_addr_offset() const;
  void set_data_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_addr_offset() const;
  void _internal_set_data_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_data_len = 3;
  void clear_non_tail_data_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_data_len() const;
  void set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_data_len() const;
  void _internal_set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_data_len = 4;
  void clear_tail_data_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_data_len() const;
  void set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_data_len() const;
  void _internal_set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.AutoThreadPrefetchDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 data_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_addr_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_data_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_data_len_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class ManualThreadAicAivDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.ManualThreadAicAivDef) */ {
 public:
  inline ManualThreadAicAivDef() : ManualThreadAicAivDef(nullptr) {}
  virtual ~ManualThreadAicAivDef();

  ManualThreadAicAivDef(const ManualThreadAicAivDef& from);
  ManualThreadAicAivDef(ManualThreadAicAivDef&& from) noexcept
    : ManualThreadAicAivDef() {
    *this = ::std::move(from);
  }

  inline ManualThreadAicAivDef& operator=(const ManualThreadAicAivDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManualThreadAicAivDef& operator=(ManualThreadAicAivDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ManualThreadAicAivDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualThreadAicAivDef* internal_default_instance() {
    return reinterpret_cast<const ManualThreadAicAivDef*>(
               &_ManualThreadAicAivDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(ManualThreadAicAivDef& a, ManualThreadAicAivDef& b) {
    a.Swap(&b);
  }
  inline void Swap(ManualThreadAicAivDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManualThreadAicAivDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ManualThreadAicAivDef* New() const final {
    return CreateMaybeMessage<ManualThreadAicAivDef>(nullptr);
  }

  ManualThreadAicAivDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ManualThreadAicAivDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ManualThreadAicAivDef& from);
  void MergeFrom(const ManualThreadAicAivDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManualThreadAicAivDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.ManualThreadAicAivDef";
  }
  protected:
  explicit ManualThreadAicAivDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTaskAddrFieldNumber = 1,
    kTaskAddrOffsetFieldNumber = 2,
    kThreadPrefetchDmuIdxFieldNumber = 10,
    kThreadBlkDimFieldNumber = 11,
    kThreadTaskFuncStubFieldNumber = 12,
    kPrefetchListFieldNumber = 13,
    kSrcDepTblFieldNumber = 14,
    kTaskParamOffsetFieldNumber = 3,
    kSatModeFieldNumber = 4,
    kScheduleModeFieldNumber = 5,
    kCachePrefetchCntFieldNumber = 6,
    kPrefetchEnableBitmapFieldNumber = 7,
    kPrefetchOnceBitmapFieldNumber = 8,
    kPrefetchOnceDmuNumFieldNumber = 9,
    kInputOutputCountFieldNumber = 15,
  };
  // repeated uint64 task_addr = 1;
  int task_addr_size() const;
  private:
  int _internal_task_addr_size() const;
  public:
  void clear_task_addr();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_addr(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_task_addr() const;
  void _internal_add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_task_addr();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 task_addr(int index) const;
  void set_task_addr(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      task_addr() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_task_addr();

  // repeated uint64 task_addr_offset = 2;
  int task_addr_offset_size() const;
  private:
  int _internal_task_addr_offset_size() const;
  public:
  void clear_task_addr_offset();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_addr_offset(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_task_addr_offset() const;
  void _internal_add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_task_addr_offset();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 task_addr_offset(int index) const;
  void set_task_addr_offset(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      task_addr_offset() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_task_addr_offset();

  // repeated uint32 thread_prefetch_dmu_idx = 10;
  int thread_prefetch_dmu_idx_size() const;
  private:
  int _internal_thread_prefetch_dmu_idx_size() const;
  public:
  void clear_thread_prefetch_dmu_idx();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_prefetch_dmu_idx(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_thread_prefetch_dmu_idx() const;
  void _internal_add_thread_prefetch_dmu_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_thread_prefetch_dmu_idx();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_prefetch_dmu_idx(int index) const;
  void set_thread_prefetch_dmu_idx(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_thread_prefetch_dmu_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      thread_prefetch_dmu_idx() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_thread_prefetch_dmu_idx();

  // repeated uint32 thread_blk_dim = 11;
  int thread_blk_dim_size() const;
  private:
  int _internal_thread_blk_dim_size() const;
  public:
  void clear_thread_blk_dim();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_blk_dim(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_thread_blk_dim() const;
  void _internal_add_thread_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_thread_blk_dim();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_blk_dim(int index) const;
  void set_thread_blk_dim(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_thread_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      thread_blk_dim() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_thread_blk_dim();

  // repeated string thread_task_func_stub = 12;
  int thread_task_func_stub_size() const;
  private:
  int _internal_thread_task_func_stub_size() const;
  public:
  void clear_thread_task_func_stub();
  const std::string& thread_task_func_stub(int index) const;
  std::string* mutable_thread_task_func_stub(int index);
  void set_thread_task_func_stub(int index, const std::string& value);
  void set_thread_task_func_stub(int index, std::string&& value);
  void set_thread_task_func_stub(int index, const char* value);
  void set_thread_task_func_stub(int index, const char* value, size_t size);
  std::string* add_thread_task_func_stub();
  void add_thread_task_func_stub(const std::string& value);
  void add_thread_task_func_stub(std::string&& value);
  void add_thread_task_func_stub(const char* value);
  void add_thread_task_func_stub(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& thread_task_func_stub() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_thread_task_func_stub();
  private:
  const std::string& _internal_thread_task_func_stub(int index) const;
  std::string* _internal_add_thread_task_func_stub();
  public:

  // repeated .domi.ManualThreadDmuDef prefetch_list = 13;
  int prefetch_list_size() const;
  private:
  int _internal_prefetch_list_size() const;
  public:
  void clear_prefetch_list();
  ::domi::ManualThreadDmuDef* mutable_prefetch_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef >*
      mutable_prefetch_list();
  private:
  const ::domi::ManualThreadDmuDef& _internal_prefetch_list(int index) const;
  ::domi::ManualThreadDmuDef* _internal_add_prefetch_list();
  public:
  const ::domi::ManualThreadDmuDef& prefetch_list(int index) const;
  ::domi::ManualThreadDmuDef* add_prefetch_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef >&
      prefetch_list() const;

  // repeated .domi.ManualThreadDependencyDef src_dep_tbl = 14;
  int src_dep_tbl_size() const;
  private:
  int _internal_src_dep_tbl_size() const;
  public:
  void clear_src_dep_tbl();
  ::domi::ManualThreadDependencyDef* mutable_src_dep_tbl(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef >*
      mutable_src_dep_tbl();
  private:
  const ::domi::ManualThreadDependencyDef& _internal_src_dep_tbl(int index) const;
  ::domi::ManualThreadDependencyDef* _internal_add_src_dep_tbl();
  public:
  const ::domi::ManualThreadDependencyDef& src_dep_tbl(int index) const;
  ::domi::ManualThreadDependencyDef* add_src_dep_tbl();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef >&
      src_dep_tbl() const;

  // uint32 task_param_offset = 3;
  void clear_task_param_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 task_param_offset() const;
  void set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_task_param_offset() const;
  void _internal_set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 sat_mode = 4;
  void clear_sat_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 sat_mode() const;
  void set_sat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sat_mode() const;
  void _internal_set_sat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 schedule_mode = 5;
  void clear_schedule_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 schedule_mode() const;
  void set_schedule_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_schedule_mode() const;
  void _internal_set_schedule_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cache_prefetch_cnt = 6;
  void clear_cache_prefetch_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 cache_prefetch_cnt() const;
  void set_cache_prefetch_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cache_prefetch_cnt() const;
  void _internal_set_cache_prefetch_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_enable_bitmap = 7;
  void clear_prefetch_enable_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_enable_bitmap() const;
  void set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_enable_bitmap() const;
  void _internal_set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_once_bitmap = 8;
  void clear_prefetch_once_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_bitmap() const;
  void set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_once_bitmap() const;
  void _internal_set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_once_dmu_num = 9;
  void clear_prefetch_once_dmu_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_dmu_num() const;
  void set_prefetch_once_dmu_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_once_dmu_num() const;
  void _internal_set_prefetch_once_dmu_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input_output_count = 15;
  void clear_input_output_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 input_output_count() const;
  void set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_output_count() const;
  void _internal_set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.ManualThreadAicAivDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > task_addr_;
  mutable std::atomic<int> _task_addr_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > task_addr_offset_;
  mutable std::atomic<int> _task_addr_offset_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > thread_prefetch_dmu_idx_;
  mutable std::atomic<int> _thread_prefetch_dmu_idx_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > thread_blk_dim_;
  mutable std::atomic<int> _thread_blk_dim_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> thread_task_func_stub_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef > prefetch_list_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef > src_dep_tbl_;
  ::PROTOBUF_NAMESPACE_ID::uint32 task_param_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sat_mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 schedule_mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cache_prefetch_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_enable_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_dmu_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input_output_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class ManualThreadNopDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.ManualThreadNopDef) */ {
 public:
  inline ManualThreadNopDef() : ManualThreadNopDef(nullptr) {}
  virtual ~ManualThreadNopDef();

  ManualThreadNopDef(const ManualThreadNopDef& from);
  ManualThreadNopDef(ManualThreadNopDef&& from) noexcept
    : ManualThreadNopDef() {
    *this = ::std::move(from);
  }

  inline ManualThreadNopDef& operator=(const ManualThreadNopDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManualThreadNopDef& operator=(ManualThreadNopDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ManualThreadNopDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualThreadNopDef* internal_default_instance() {
    return reinterpret_cast<const ManualThreadNopDef*>(
               &_ManualThreadNopDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(ManualThreadNopDef& a, ManualThreadNopDef& b) {
    a.Swap(&b);
  }
  inline void Swap(ManualThreadNopDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManualThreadNopDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ManualThreadNopDef* New() const final {
    return CreateMaybeMessage<ManualThreadNopDef>(nullptr);
  }

  ManualThreadNopDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ManualThreadNopDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ManualThreadNopDef& from);
  void MergeFrom(const ManualThreadNopDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManualThreadNopDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.ManualThreadNopDef";
  }
  protected:
  explicit ManualThreadNopDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcDepTblFieldNumber = 1,
  };
  // repeated .domi.ManualThreadDependencyDef src_dep_tbl = 1;
  int src_dep_tbl_size() const;
  private:
  int _internal_src_dep_tbl_size() const;
  public:
  void clear_src_dep_tbl();
  ::domi::ManualThreadDependencyDef* mutable_src_dep_tbl(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef >*
      mutable_src_dep_tbl();
  private:
  const ::domi::ManualThreadDependencyDef& _internal_src_dep_tbl(int index) const;
  ::domi::ManualThreadDependencyDef* _internal_add_src_dep_tbl();
  public:
  const ::domi::ManualThreadDependencyDef& src_dep_tbl(int index) const;
  ::domi::ManualThreadDependencyDef* add_src_dep_tbl();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef >&
      src_dep_tbl() const;

  // @@protoc_insertion_point(class_scope:domi.ManualThreadNopDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef > src_dep_tbl_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class ManualThreadCacheDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.ManualThreadCacheDef) */ {
 public:
  inline ManualThreadCacheDef() : ManualThreadCacheDef(nullptr) {}
  virtual ~ManualThreadCacheDef();

  ManualThreadCacheDef(const ManualThreadCacheDef& from);
  ManualThreadCacheDef(ManualThreadCacheDef&& from) noexcept
    : ManualThreadCacheDef() {
    *this = ::std::move(from);
  }

  inline ManualThreadCacheDef& operator=(const ManualThreadCacheDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManualThreadCacheDef& operator=(ManualThreadCacheDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ManualThreadCacheDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualThreadCacheDef* internal_default_instance() {
    return reinterpret_cast<const ManualThreadCacheDef*>(
               &_ManualThreadCacheDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(ManualThreadCacheDef& a, ManualThreadCacheDef& b) {
    a.Swap(&b);
  }
  inline void Swap(ManualThreadCacheDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManualThreadCacheDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ManualThreadCacheDef* New() const final {
    return CreateMaybeMessage<ManualThreadCacheDef>(nullptr);
  }

  ManualThreadCacheDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ManualThreadCacheDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ManualThreadCacheDef& from);
  void MergeFrom(const ManualThreadCacheDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManualThreadCacheDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.ManualThreadCacheDef";
  }
  protected:
  explicit ManualThreadCacheDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDmuListFieldNumber = 1,
    kSliceDmuIdxFieldNumber = 2,
    kTicketCacheRefCntTblFieldNumber = 3,
  };
  // repeated .domi.ManualThreadDmuDef dmu_list = 1;
  int dmu_list_size() const;
  private:
  int _internal_dmu_list_size() const;
  public:
  void clear_dmu_list();
  ::domi::ManualThreadDmuDef* mutable_dmu_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef >*
      mutable_dmu_list();
  private:
  const ::domi::ManualThreadDmuDef& _internal_dmu_list(int index) const;
  ::domi::ManualThreadDmuDef* _internal_add_dmu_list();
  public:
  const ::domi::ManualThreadDmuDef& dmu_list(int index) const;
  ::domi::ManualThreadDmuDef* add_dmu_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef >&
      dmu_list() const;

  // repeated uint32 slice_dmu_idx = 2;
  int slice_dmu_idx_size() const;
  private:
  int _internal_slice_dmu_idx_size() const;
  public:
  void clear_slice_dmu_idx();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slice_dmu_idx(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_slice_dmu_idx() const;
  void _internal_add_slice_dmu_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_slice_dmu_idx();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 slice_dmu_idx(int index) const;
  void set_slice_dmu_idx(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_slice_dmu_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      slice_dmu_idx() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_slice_dmu_idx();

  // repeated uint32 ticket_cache_ref_cnt_tbl = 3;
  int ticket_cache_ref_cnt_tbl_size() const;
  private:
  int _internal_ticket_cache_ref_cnt_tbl_size() const;
  public:
  void clear_ticket_cache_ref_cnt_tbl();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ticket_cache_ref_cnt_tbl(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_ticket_cache_ref_cnt_tbl() const;
  void _internal_add_ticket_cache_ref_cnt_tbl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_ticket_cache_ref_cnt_tbl();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 ticket_cache_ref_cnt_tbl(int index) const;
  void set_ticket_cache_ref_cnt_tbl(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_ticket_cache_ref_cnt_tbl(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      ticket_cache_ref_cnt_tbl() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_ticket_cache_ref_cnt_tbl();

  // @@protoc_insertion_point(class_scope:domi.ManualThreadCacheDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef > dmu_list_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > slice_dmu_idx_;
  mutable std::atomic<int> _slice_dmu_idx_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > ticket_cache_ref_cnt_tbl_;
  mutable std::atomic<int> _ticket_cache_ref_cnt_tbl_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class ManualThreadDmuDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.ManualThreadDmuDef) */ {
 public:
  inline ManualThreadDmuDef() : ManualThreadDmuDef(nullptr) {}
  virtual ~ManualThreadDmuDef();

  ManualThreadDmuDef(const ManualThreadDmuDef& from);
  ManualThreadDmuDef(ManualThreadDmuDef&& from) noexcept
    : ManualThreadDmuDef() {
    *this = ::std::move(from);
  }

  inline ManualThreadDmuDef& operator=(const ManualThreadDmuDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManualThreadDmuDef& operator=(ManualThreadDmuDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ManualThreadDmuDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualThreadDmuDef* internal_default_instance() {
    return reinterpret_cast<const ManualThreadDmuDef*>(
               &_ManualThreadDmuDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(ManualThreadDmuDef& a, ManualThreadDmuDef& b) {
    a.Swap(&b);
  }
  inline void Swap(ManualThreadDmuDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManualThreadDmuDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ManualThreadDmuDef* New() const final {
    return CreateMaybeMessage<ManualThreadDmuDef>(nullptr);
  }

  ManualThreadDmuDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ManualThreadDmuDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ManualThreadDmuDef& from);
  void MergeFrom(const ManualThreadDmuDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManualThreadDmuDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.ManualThreadDmuDef";
  }
  protected:
  explicit ManualThreadDmuDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataAddrFieldNumber = 1,
    kNumOuterFieldNumber = 2,
    kNumInnerFieldNumber = 3,
    kStrideOuterFieldNumber = 4,
    kLenInnerFieldNumber = 5,
    kStrideInnerFieldNumber = 6,
  };
  // uint64 data_addr = 1;
  void clear_data_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 data_addr() const;
  void set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data_addr() const;
  void _internal_set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 num_outer = 2;
  void clear_num_outer();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_outer() const;
  void set_num_outer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_outer() const;
  void _internal_set_num_outer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 num_inner = 3;
  void clear_num_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_inner() const;
  void set_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_inner() const;
  void _internal_set_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 stride_outer = 4;
  void clear_stride_outer();
  ::PROTOBUF_NAMESPACE_ID::uint32 stride_outer() const;
  void set_stride_outer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stride_outer() const;
  void _internal_set_stride_outer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 len_inner = 5;
  void clear_len_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 len_inner() const;
  void set_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_len_inner() const;
  void _internal_set_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 stride_inner = 6;
  void clear_stride_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 stride_inner() const;
  void set_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stride_inner() const;
  void _internal_set_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.ManualThreadDmuDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 data_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_outer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_inner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stride_outer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 len_inner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stride_inner_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class ManualThreadDependencyDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.ManualThreadDependencyDef) */ {
 public:
  inline ManualThreadDependencyDef() : ManualThreadDependencyDef(nullptr) {}
  virtual ~ManualThreadDependencyDef();

  ManualThreadDependencyDef(const ManualThreadDependencyDef& from);
  ManualThreadDependencyDef(ManualThreadDependencyDef&& from) noexcept
    : ManualThreadDependencyDef() {
    *this = ::std::move(from);
  }

  inline ManualThreadDependencyDef& operator=(const ManualThreadDependencyDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManualThreadDependencyDef& operator=(ManualThreadDependencyDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ManualThreadDependencyDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualThreadDependencyDef* internal_default_instance() {
    return reinterpret_cast<const ManualThreadDependencyDef*>(
               &_ManualThreadDependencyDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(ManualThreadDependencyDef& a, ManualThreadDependencyDef& b) {
    a.Swap(&b);
  }
  inline void Swap(ManualThreadDependencyDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManualThreadDependencyDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ManualThreadDependencyDef* New() const final {
    return CreateMaybeMessage<ManualThreadDependencyDef>(nullptr);
  }

  ManualThreadDependencyDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ManualThreadDependencyDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ManualThreadDependencyDef& from);
  void MergeFrom(const ManualThreadDependencyDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManualThreadDependencyDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.ManualThreadDependencyDef";
  }
  protected:
  explicit ManualThreadDependencyDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDependencyFieldNumber = 1,
  };
  // repeated uint32 dependency = 1;
  int dependency_size() const;
  private:
  int _internal_dependency_size() const;
  public:
  void clear_dependency();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dependency(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_dependency() const;
  void _internal_add_dependency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_dependency();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 dependency(int index) const;
  void set_dependency(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_dependency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      dependency() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_dependency();

  // @@protoc_insertion_point(class_scope:domi.ManualThreadDependencyDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > dependency_;
  mutable std::atomic<int> _dependency_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class DSATaskDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.DSATaskDef) */ {
 public:
  inline DSATaskDef() : DSATaskDef(nullptr) {}
  virtual ~DSATaskDef();

  DSATaskDef(const DSATaskDef& from);
  DSATaskDef(DSATaskDef&& from) noexcept
    : DSATaskDef() {
    *this = ::std::move(from);
  }

  inline DSATaskDef& operator=(const DSATaskDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline DSATaskDef& operator=(DSATaskDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DSATaskDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DSATaskDef* internal_default_instance() {
    return reinterpret_cast<const DSATaskDef*>(
               &_DSATaskDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(DSATaskDef& a, DSATaskDef& b) {
    a.Swap(&b);
  }
  inline void Swap(DSATaskDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DSATaskDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DSATaskDef* New() const final {
    return CreateMaybeMessage<DSATaskDef>(nullptr);
  }

  DSATaskDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DSATaskDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DSATaskDef& from);
  void MergeFrom(const DSATaskDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DSATaskDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.DSATaskDef";
  }
  protected:
  explicit DSATaskDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgsFieldNumber = 13,
    kOpIndexFieldNumber = 1,
    kStartFieldNumber = 2,
    kSqeTypeFieldNumber = 3,
    kDistributionTypeFieldNumber = 4,
    kDataTypeFieldNumber = 5,
    kAlgTypeFieldNumber = 6,
    kInputVldFieldNumber = 7,
    kInputValueAddrFlagFieldNumber = 8,
    kInput1ValueOrPtrFieldNumber = 9,
    kInput2ValueOrPtrFieldNumber = 10,
    kSeedValueOrPtrFieldNumber = 11,
    kRandomCountValueOrPtrFieldNumber = 12,
  };
  // .domi.DSATaskArgsDef args = 13;
  bool has_args() const;
  private:
  bool _internal_has_args() const;
  public:
  void clear_args();
  const ::domi::DSATaskArgsDef& args() const;
  ::domi::DSATaskArgsDef* release_args();
  ::domi::DSATaskArgsDef* mutable_args();
  void set_allocated_args(::domi::DSATaskArgsDef* args);
  private:
  const ::domi::DSATaskArgsDef& _internal_args() const;
  ::domi::DSATaskArgsDef* _internal_mutable_args();
  public:
  void unsafe_arena_set_allocated_args(
      ::domi::DSATaskArgsDef* args);
  ::domi::DSATaskArgsDef* unsafe_arena_release_args();

  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 start = 2;
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::uint32 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start() const;
  void _internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 sqe_type = 3;
  void clear_sqe_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 sqe_type() const;
  void set_sqe_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sqe_type() const;
  void _internal_set_sqe_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 distribution_type = 4;
  void clear_distribution_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 distribution_type() const;
  void set_distribution_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_distribution_type() const;
  void _internal_set_distribution_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_type = 5;
  void clear_data_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type() const;
  void set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_type() const;
  void _internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 alg_type = 6;
  void clear_alg_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 alg_type() const;
  void set_alg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_alg_type() const;
  void _internal_set_alg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input_vld = 7;
  void clear_input_vld();
  ::PROTOBUF_NAMESPACE_ID::uint32 input_vld() const;
  void set_input_vld(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_vld() const;
  void _internal_set_input_vld(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input_value_addr_flag = 8;
  void clear_input_value_addr_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 input_value_addr_flag() const;
  void set_input_value_addr_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_value_addr_flag() const;
  void _internal_set_input_value_addr_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input1_value_or_ptr = 9;
  void clear_input1_value_or_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint32 input1_value_or_ptr() const;
  void set_input1_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input1_value_or_ptr() const;
  void _internal_set_input1_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input2_value_or_ptr = 10;
  void clear_input2_value_or_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint32 input2_value_or_ptr() const;
  void set_input2_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input2_value_or_ptr() const;
  void _internal_set_input2_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seed_value_or_ptr = 11;
  void clear_seed_value_or_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint32 seed_value_or_ptr() const;
  void set_seed_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seed_value_or_ptr() const;
  void _internal_set_seed_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 random_count_value_or_ptr = 12;
  void clear_random_count_value_or_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint32 random_count_value_or_ptr() const;
  void set_random_count_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_random_count_value_or_ptr() const;
  void _internal_set_random_count_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.DSATaskDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::domi::DSATaskArgsDef* args_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sqe_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 distribution_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 alg_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input_vld_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input_value_addr_flag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input1_value_or_ptr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input2_value_or_ptr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seed_value_or_ptr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 random_count_value_or_ptr_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class DSATaskArgsDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.DSATaskArgsDef) */ {
 public:
  inline DSATaskArgsDef() : DSATaskArgsDef(nullptr) {}
  virtual ~DSATaskArgsDef();

  DSATaskArgsDef(const DSATaskArgsDef& from);
  DSATaskArgsDef(DSATaskArgsDef&& from) noexcept
    : DSATaskArgsDef() {
    *this = ::std::move(from);
  }

  inline DSATaskArgsDef& operator=(const DSATaskArgsDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline DSATaskArgsDef& operator=(DSATaskArgsDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DSATaskArgsDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DSATaskArgsDef* internal_default_instance() {
    return reinterpret_cast<const DSATaskArgsDef*>(
               &_DSATaskArgsDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(DSATaskArgsDef& a, DSATaskArgsDef& b) {
    a.Swap(&b);
  }
  inline void Swap(DSATaskArgsDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DSATaskArgsDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DSATaskArgsDef* New() const final {
    return CreateMaybeMessage<DSATaskArgsDef>(nullptr);
  }

  DSATaskArgsDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DSATaskArgsDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DSATaskArgsDef& from);
  void MergeFrom(const DSATaskArgsDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DSATaskArgsDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.DSATaskArgsDef";
  }
  protected:
  explicit DSATaskArgsDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeedValueOrAddrFieldNumber = 4,
    kRandomCountValueOrAddrFieldNumber = 5,
    kInput1ValueOrAddrFieldNumber = 6,
    kInput2ValueOrAddrFieldNumber = 7,
    kOutputAddrFieldNumber = 1,
    kWorkspacePhiloxCountAddrFieldNumber = 2,
    kWorkspaceInputAddrFieldNumber = 3,
  };
  // bytes seed_value_or_addr = 4;
  void clear_seed_value_or_addr();
  const std::string& seed_value_or_addr() const;
  void set_seed_value_or_addr(const std::string& value);
  void set_seed_value_or_addr(std::string&& value);
  void set_seed_value_or_addr(const char* value);
  void set_seed_value_or_addr(const void* value, size_t size);
  std::string* mutable_seed_value_or_addr();
  std::string* release_seed_value_or_addr();
  void set_allocated_seed_value_or_addr(std::string* seed_value_or_addr);
  private:
  const std::string& _internal_seed_value_or_addr() const;
  void _internal_set_seed_value_or_addr(const std::string& value);
  std::string* _internal_mutable_seed_value_or_addr();
  public:

  // bytes random_count_value_or_addr = 5;
  void clear_random_count_value_or_addr();
  const std::string& random_count_value_or_addr() const;
  void set_random_count_value_or_addr(const std::string& value);
  void set_random_count_value_or_addr(std::string&& value);
  void set_random_count_value_or_addr(const char* value);
  void set_random_count_value_or_addr(const void* value, size_t size);
  std::string* mutable_random_count_value_or_addr();
  std::string* release_random_count_value_or_addr();
  void set_allocated_random_count_value_or_addr(std::string* random_count_value_or_addr);
  private:
  const std::string& _internal_random_count_value_or_addr() const;
  void _internal_set_random_count_value_or_addr(const std::string& value);
  std::string* _internal_mutable_random_count_value_or_addr();
  public:

  // bytes input1_value_or_addr = 6;
  void clear_input1_value_or_addr();
  const std::string& input1_value_or_addr() const;
  void set_input1_value_or_addr(const std::string& value);
  void set_input1_value_or_addr(std::string&& value);
  void set_input1_value_or_addr(const char* value);
  void set_input1_value_or_addr(const void* value, size_t size);
  std::string* mutable_input1_value_or_addr();
  std::string* release_input1_value_or_addr();
  void set_allocated_input1_value_or_addr(std::string* input1_value_or_addr);
  private:
  const std::string& _internal_input1_value_or_addr() const;
  void _internal_set_input1_value_or_addr(const std::string& value);
  std::string* _internal_mutable_input1_value_or_addr();
  public:

  // bytes input2_value_or_addr = 7;
  void clear_input2_value_or_addr();
  const std::string& input2_value_or_addr() const;
  void set_input2_value_or_addr(const std::string& value);
  void set_input2_value_or_addr(std::string&& value);
  void set_input2_value_or_addr(const char* value);
  void set_input2_value_or_addr(const void* value, size_t size);
  std::string* mutable_input2_value_or_addr();
  std::string* release_input2_value_or_addr();
  void set_allocated_input2_value_or_addr(std::string* input2_value_or_addr);
  private:
  const std::string& _internal_input2_value_or_addr() const;
  void _internal_set_input2_value_or_addr(const std::string& value);
  std::string* _internal_mutable_input2_value_or_addr();
  public:

  // uint64 output_addr = 1;
  void clear_output_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 output_addr() const;
  void set_output_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_output_addr() const;
  void _internal_set_output_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 workspace_philox_count_addr = 2;
  void clear_workspace_philox_count_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 workspace_philox_count_addr() const;
  void set_workspace_philox_count_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_workspace_philox_count_addr() const;
  void _internal_set_workspace_philox_count_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 workspace_input_addr = 3;
  void clear_workspace_input_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 workspace_input_addr() const;
  void set_workspace_input_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_workspace_input_addr() const;
  void _internal_set_workspace_input_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.DSATaskArgsDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr seed_value_or_addr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr random_count_value_or_addr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr input1_value_or_addr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr input2_value_or_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint64 output_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint64 workspace_philox_count_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint64 workspace_input_addr_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusTaskDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusTaskDef) */ {
 public:
  inline FftsPlusTaskDef() : FftsPlusTaskDef(nullptr) {}
  virtual ~FftsPlusTaskDef();

  FftsPlusTaskDef(const FftsPlusTaskDef& from);
  FftsPlusTaskDef(FftsPlusTaskDef&& from) noexcept
    : FftsPlusTaskDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusTaskDef& operator=(const FftsPlusTaskDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusTaskDef& operator=(FftsPlusTaskDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusTaskDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusTaskDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusTaskDef*>(
               &_FftsPlusTaskDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(FftsPlusTaskDef& a, FftsPlusTaskDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusTaskDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusTaskDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusTaskDef* New() const final {
    return CreateMaybeMessage<FftsPlusTaskDef>(nullptr);
  }

  FftsPlusTaskDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusTaskDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusTaskDef& from);
  void MergeFrom(const FftsPlusTaskDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusTaskDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusTaskDef";
  }
  protected:
  explicit FftsPlusTaskDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFftsPlusCtxFieldNumber = 4,
    kAdditionalDataFieldNumber = 5,
    kFftsPlusSqeFieldNumber = 3,
    kOpIndexFieldNumber = 1,
    kAddrSizeFieldNumber = 2,
  };
  // repeated .domi.FftsPlusCtxDef ffts_plus_ctx = 4;
  int ffts_plus_ctx_size() const;
  private:
  int _internal_ffts_plus_ctx_size() const;
  public:
  void clear_ffts_plus_ctx();
  ::domi::FftsPlusCtxDef* mutable_ffts_plus_ctx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsPlusCtxDef >*
      mutable_ffts_plus_ctx();
  private:
  const ::domi::FftsPlusCtxDef& _internal_ffts_plus_ctx(int index) const;
  ::domi::FftsPlusCtxDef* _internal_add_ffts_plus_ctx();
  public:
  const ::domi::FftsPlusCtxDef& ffts_plus_ctx(int index) const;
  ::domi::FftsPlusCtxDef* add_ffts_plus_ctx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsPlusCtxDef >&
      ffts_plus_ctx() const;

  // repeated .domi.AdditionalDataDef additional_data = 5;
  int additional_data_size() const;
  private:
  int _internal_additional_data_size() const;
  public:
  void clear_additional_data();
  ::domi::AdditionalDataDef* mutable_additional_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AdditionalDataDef >*
      mutable_additional_data();
  private:
  const ::domi::AdditionalDataDef& _internal_additional_data(int index) const;
  ::domi::AdditionalDataDef* _internal_add_additional_data();
  public:
  const ::domi::AdditionalDataDef& additional_data(int index) const;
  ::domi::AdditionalDataDef* add_additional_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AdditionalDataDef >&
      additional_data() const;

  // .domi.FftsPlusSqeDef ffts_plus_sqe = 3;
  bool has_ffts_plus_sqe() const;
  private:
  bool _internal_has_ffts_plus_sqe() const;
  public:
  void clear_ffts_plus_sqe();
  const ::domi::FftsPlusSqeDef& ffts_plus_sqe() const;
  ::domi::FftsPlusSqeDef* release_ffts_plus_sqe();
  ::domi::FftsPlusSqeDef* mutable_ffts_plus_sqe();
  void set_allocated_ffts_plus_sqe(::domi::FftsPlusSqeDef* ffts_plus_sqe);
  private:
  const ::domi::FftsPlusSqeDef& _internal_ffts_plus_sqe() const;
  ::domi::FftsPlusSqeDef* _internal_mutable_ffts_plus_sqe();
  public:
  void unsafe_arena_set_allocated_ffts_plus_sqe(
      ::domi::FftsPlusSqeDef* ffts_plus_sqe);
  ::domi::FftsPlusSqeDef* unsafe_arena_release_ffts_plus_sqe();

  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 addr_size = 2;
  void clear_addr_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 addr_size() const;
  void set_addr_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_addr_size() const;
  void _internal_set_addr_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusTaskDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsPlusCtxDef > ffts_plus_ctx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AdditionalDataDef > additional_data_;
  ::domi::FftsPlusSqeDef* ffts_plus_sqe_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 addr_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class AdditionalDataDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.AdditionalDataDef) */ {
 public:
  inline AdditionalDataDef() : AdditionalDataDef(nullptr) {}
  virtual ~AdditionalDataDef();

  AdditionalDataDef(const AdditionalDataDef& from);
  AdditionalDataDef(AdditionalDataDef&& from) noexcept
    : AdditionalDataDef() {
    *this = ::std::move(from);
  }

  inline AdditionalDataDef& operator=(const AdditionalDataDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdditionalDataDef& operator=(AdditionalDataDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AdditionalDataDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdditionalDataDef* internal_default_instance() {
    return reinterpret_cast<const AdditionalDataDef*>(
               &_AdditionalDataDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(AdditionalDataDef& a, AdditionalDataDef& b) {
    a.Swap(&b);
  }
  inline void Swap(AdditionalDataDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdditionalDataDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AdditionalDataDef* New() const final {
    return CreateMaybeMessage<AdditionalDataDef>(nullptr);
  }

  AdditionalDataDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AdditionalDataDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AdditionalDataDef& from);
  void MergeFrom(const AdditionalDataDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdditionalDataDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.AdditionalDataDef";
  }
  protected:
  explicit AdditionalDataDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextIdFieldNumber = 2,
    kDataTypeFieldNumber = 1,
  };
  // repeated uint32 context_id = 2;
  int context_id_size() const;
  private:
  int _internal_context_id_size() const;
  public:
  void clear_context_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_context_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_context_id() const;
  void _internal_add_context_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_context_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 context_id(int index) const;
  void set_context_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_context_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      context_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_context_id();

  // uint32 data_type = 1;
  void clear_data_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type() const;
  void set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_type() const;
  void _internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.AdditionalDataDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > context_id_;
  mutable std::atomic<int> _context_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusSqeDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusSqeDef) */ {
 public:
  inline FftsPlusSqeDef() : FftsPlusSqeDef(nullptr) {}
  virtual ~FftsPlusSqeDef();

  FftsPlusSqeDef(const FftsPlusSqeDef& from);
  FftsPlusSqeDef(FftsPlusSqeDef&& from) noexcept
    : FftsPlusSqeDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusSqeDef& operator=(const FftsPlusSqeDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusSqeDef& operator=(FftsPlusSqeDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusSqeDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusSqeDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusSqeDef*>(
               &_FftsPlusSqeDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(FftsPlusSqeDef& a, FftsPlusSqeDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusSqeDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusSqeDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusSqeDef* New() const final {
    return CreateMaybeMessage<FftsPlusSqeDef>(nullptr);
  }

  FftsPlusSqeDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusSqeDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusSqeDef& from);
  void MergeFrom(const FftsPlusSqeDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusSqeDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusSqeDef";
  }
  protected:
  explicit FftsPlusSqeDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSqeHeaderFieldNumber = 1,
    kWrrRatioFieldNumber = 2,
    kSqeIndexFieldNumber = 3,
    kTotalContextNumFieldNumber = 4,
    kReadyContextNumFieldNumber = 5,
    kPreloadContextNumFieldNumber = 6,
    kPrefetchOstNumFieldNumber = 7,
    kCmaintOstNumFieldNumber = 8,
    kAicPrefetchLowerFieldNumber = 9,
    kAicPrefetchUpperFieldNumber = 10,
    kAivPrefetchLowerFieldNumber = 11,
    kAivPrefetchUpperFieldNumber = 12,
    kDataSplitUnitFieldNumber = 13,
  };
  // .domi.StarsSqeHeaderDef sqe_header = 1;
  bool has_sqe_header() const;
  private:
  bool _internal_has_sqe_header() const;
  public:
  void clear_sqe_header();
  const ::domi::StarsSqeHeaderDef& sqe_header() const;
  ::domi::StarsSqeHeaderDef* release_sqe_header();
  ::domi::StarsSqeHeaderDef* mutable_sqe_header();
  void set_allocated_sqe_header(::domi::StarsSqeHeaderDef* sqe_header);
  private:
  const ::domi::StarsSqeHeaderDef& _internal_sqe_header() const;
  ::domi::StarsSqeHeaderDef* _internal_mutable_sqe_header();
  public:
  void unsafe_arena_set_allocated_sqe_header(
      ::domi::StarsSqeHeaderDef* sqe_header);
  ::domi::StarsSqeHeaderDef* unsafe_arena_release_sqe_header();

  // uint32 wrr_ratio = 2;
  void clear_wrr_ratio();
  ::PROTOBUF_NAMESPACE_ID::uint32 wrr_ratio() const;
  void set_wrr_ratio(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_wrr_ratio() const;
  void _internal_set_wrr_ratio(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 sqe_index = 3;
  void clear_sqe_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 sqe_index() const;
  void set_sqe_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sqe_index() const;
  void _internal_set_sqe_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_context_num = 4;
  void clear_total_context_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_context_num() const;
  void set_total_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_context_num() const;
  void _internal_set_total_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ready_context_num = 5;
  void clear_ready_context_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 ready_context_num() const;
  void set_ready_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ready_context_num() const;
  void _internal_set_ready_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 preload_context_num = 6;
  void clear_preload_context_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 preload_context_num() const;
  void set_preload_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preload_context_num() const;
  void _internal_set_preload_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_ost_num = 7;
  void clear_prefetch_ost_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_ost_num() const;
  void set_prefetch_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_ost_num() const;
  void _internal_set_prefetch_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cmaint_ost_num = 8;
  void clear_cmaint_ost_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmaint_ost_num() const;
  void set_cmaint_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmaint_ost_num() const;
  void _internal_set_cmaint_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aic_prefetch_lower = 9;
  void clear_aic_prefetch_lower();
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_prefetch_lower() const;
  void set_aic_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aic_prefetch_lower() const;
  void _internal_set_aic_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aic_prefetch_upper = 10;
  void clear_aic_prefetch_upper();
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_prefetch_upper() const;
  void set_aic_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aic_prefetch_upper() const;
  void _internal_set_aic_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aiv_prefetch_lower = 11;
  void clear_aiv_prefetch_lower();
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_prefetch_lower() const;
  void set_aiv_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aiv_prefetch_lower() const;
  void _internal_set_aiv_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aiv_prefetch_upper = 12;
  void clear_aiv_prefetch_upper();
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_prefetch_upper() const;
  void set_aiv_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aiv_prefetch_upper() const;
  void _internal_set_aiv_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_split_unit = 13;
  void clear_data_split_unit();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_split_unit() const;
  void set_data_split_unit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_split_unit() const;
  void _internal_set_data_split_unit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusSqeDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::domi::StarsSqeHeaderDef* sqe_header_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wrr_ratio_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sqe_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_context_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ready_context_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preload_context_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_ost_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmaint_ost_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_prefetch_lower_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_prefetch_upper_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_prefetch_lower_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_prefetch_upper_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_split_unit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class StarsSqeHeaderDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.StarsSqeHeaderDef) */ {
 public:
  inline StarsSqeHeaderDef() : StarsSqeHeaderDef(nullptr) {}
  virtual ~StarsSqeHeaderDef();

  StarsSqeHeaderDef(const StarsSqeHeaderDef& from);
  StarsSqeHeaderDef(StarsSqeHeaderDef&& from) noexcept
    : StarsSqeHeaderDef() {
    *this = ::std::move(from);
  }

  inline StarsSqeHeaderDef& operator=(const StarsSqeHeaderDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline StarsSqeHeaderDef& operator=(StarsSqeHeaderDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StarsSqeHeaderDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StarsSqeHeaderDef* internal_default_instance() {
    return reinterpret_cast<const StarsSqeHeaderDef*>(
               &_StarsSqeHeaderDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(StarsSqeHeaderDef& a, StarsSqeHeaderDef& b) {
    a.Swap(&b);
  }
  inline void Swap(StarsSqeHeaderDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StarsSqeHeaderDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StarsSqeHeaderDef* New() const final {
    return CreateMaybeMessage<StarsSqeHeaderDef>(nullptr);
  }

  StarsSqeHeaderDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StarsSqeHeaderDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StarsSqeHeaderDef& from);
  void MergeFrom(const StarsSqeHeaderDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StarsSqeHeaderDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.StarsSqeHeaderDef";
  }
  protected:
  explicit StarsSqeHeaderDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kL1LockFieldNumber = 1,
    kL1UnlockFieldNumber = 2,
    kBlockDimFieldNumber = 3,
  };
  // uint32 l1_lock = 1;
  void clear_l1_lock();
  ::PROTOBUF_NAMESPACE_ID::uint32 l1_lock() const;
  void set_l1_lock(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_l1_lock() const;
  void _internal_set_l1_lock(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 l1_unlock = 2;
  void clear_l1_unlock();
  ::PROTOBUF_NAMESPACE_ID::uint32 l1_unlock() const;
  void set_l1_unlock(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_l1_unlock() const;
  void _internal_set_l1_unlock(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 block_dim = 3;
  void clear_block_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 block_dim() const;
  void set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block_dim() const;
  void _internal_set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.StarsSqeHeaderDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 l1_lock_;
  ::PROTOBUF_NAMESPACE_ID::uint32 l1_unlock_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block_dim_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusCtxDef) */ {
 public:
  inline FftsPlusCtxDef() : FftsPlusCtxDef(nullptr) {}
  virtual ~FftsPlusCtxDef();

  FftsPlusCtxDef(const FftsPlusCtxDef& from);
  FftsPlusCtxDef(FftsPlusCtxDef&& from) noexcept
    : FftsPlusCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusCtxDef& operator=(const FftsPlusCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusCtxDef& operator=(FftsPlusCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusCtxDef*>(
               &_FftsPlusCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(FftsPlusCtxDef& a, FftsPlusCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusCtxDef>(nullptr);
  }

  FftsPlusCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusCtxDef& from);
  void MergeFrom(const FftsPlusCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusCtxDef";
  }
  protected:
  explicit FftsPlusCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef FftsPlusCtxDef_OpType OpType;
  static constexpr OpType NORMAL =
    FftsPlusCtxDef_OpType_NORMAL;
  static constexpr OpType ATOMIC =
    FftsPlusCtxDef_OpType_ATOMIC;
  static inline bool OpType_IsValid(int value) {
    return FftsPlusCtxDef_OpType_IsValid(value);
  }
  static constexpr OpType OpType_MIN =
    FftsPlusCtxDef_OpType_OpType_MIN;
  static constexpr OpType OpType_MAX =
    FftsPlusCtxDef_OpType_OpType_MAX;
  static constexpr int OpType_ARRAYSIZE =
    FftsPlusCtxDef_OpType_OpType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  OpType_descriptor() {
    return FftsPlusCtxDef_OpType_descriptor();
  }
  template<typename T>
  static inline const std::string& OpType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, OpType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function OpType_Name.");
    return FftsPlusCtxDef_OpType_Name(enum_t_value);
  }
  static inline bool OpType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      OpType* value) {
    return FftsPlusCtxDef_OpType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kUniqCtxNameFieldNumber = 2,
    kAicAivCtxFieldNumber = 6,
    kMixAicAivCtxFieldNumber = 7,
    kSdmaCtxFieldNumber = 8,
    kNotifyCtxFieldNumber = 9,
    kWriteValueCtxFieldNumber = 10,
    kAicpuCtxFieldNumber = 11,
    kDataCtxFieldNumber = 12,
    kAtStartCtxFieldNumber = 13,
    kAtEndCtxFieldNumber = 14,
    kLabelCtxFieldNumber = 15,
    kCaseSwitchCtxFieldNumber = 16,
    kCaseDefaultCtxFieldNumber = 17,
    kCondSwitchCtxFieldNumber = 18,
    kCachePersistCtxFieldNumber = 19,
    kDsaCtxFieldNumber = 20,
    kOpIndexFieldNumber = 1,
    kContextTypeFieldNumber = 3,
    kContextIdFieldNumber = 4,
    kOpTypeFieldNumber = 5,
  };
  // string uniq_ctx_name = 2;
  void clear_uniq_ctx_name();
  const std::string& uniq_ctx_name() const;
  void set_uniq_ctx_name(const std::string& value);
  void set_uniq_ctx_name(std::string&& value);
  void set_uniq_ctx_name(const char* value);
  void set_uniq_ctx_name(const char* value, size_t size);
  std::string* mutable_uniq_ctx_name();
  std::string* release_uniq_ctx_name();
  void set_allocated_uniq_ctx_name(std::string* uniq_ctx_name);
  private:
  const std::string& _internal_uniq_ctx_name() const;
  void _internal_set_uniq_ctx_name(const std::string& value);
  std::string* _internal_mutable_uniq_ctx_name();
  public:

  // .domi.FftsPlusAicAivCtxDef aic_aiv_ctx = 6;
  bool has_aic_aiv_ctx() const;
  private:
  bool _internal_has_aic_aiv_ctx() const;
  public:
  void clear_aic_aiv_ctx();
  const ::domi::FftsPlusAicAivCtxDef& aic_aiv_ctx() const;
  ::domi::FftsPlusAicAivCtxDef* release_aic_aiv_ctx();
  ::domi::FftsPlusAicAivCtxDef* mutable_aic_aiv_ctx();
  void set_allocated_aic_aiv_ctx(::domi::FftsPlusAicAivCtxDef* aic_aiv_ctx);
  private:
  const ::domi::FftsPlusAicAivCtxDef& _internal_aic_aiv_ctx() const;
  ::domi::FftsPlusAicAivCtxDef* _internal_mutable_aic_aiv_ctx();
  public:
  void unsafe_arena_set_allocated_aic_aiv_ctx(
      ::domi::FftsPlusAicAivCtxDef* aic_aiv_ctx);
  ::domi::FftsPlusAicAivCtxDef* unsafe_arena_release_aic_aiv_ctx();

  // .domi.FftsPlusMixAicAivCtxDef mix_aic_aiv_ctx = 7;
  bool has_mix_aic_aiv_ctx() const;
  private:
  bool _internal_has_mix_aic_aiv_ctx() const;
  public:
  void clear_mix_aic_aiv_ctx();
  const ::domi::FftsPlusMixAicAivCtxDef& mix_aic_aiv_ctx() const;
  ::domi::FftsPlusMixAicAivCtxDef* release_mix_aic_aiv_ctx();
  ::domi::FftsPlusMixAicAivCtxDef* mutable_mix_aic_aiv_ctx();
  void set_allocated_mix_aic_aiv_ctx(::domi::FftsPlusMixAicAivCtxDef* mix_aic_aiv_ctx);
  private:
  const ::domi::FftsPlusMixAicAivCtxDef& _internal_mix_aic_aiv_ctx() const;
  ::domi::FftsPlusMixAicAivCtxDef* _internal_mutable_mix_aic_aiv_ctx();
  public:
  void unsafe_arena_set_allocated_mix_aic_aiv_ctx(
      ::domi::FftsPlusMixAicAivCtxDef* mix_aic_aiv_ctx);
  ::domi::FftsPlusMixAicAivCtxDef* unsafe_arena_release_mix_aic_aiv_ctx();

  // .domi.FftsPlusSdmaCtxDef sdma_ctx = 8;
  bool has_sdma_ctx() const;
  private:
  bool _internal_has_sdma_ctx() const;
  public:
  void clear_sdma_ctx();
  const ::domi::FftsPlusSdmaCtxDef& sdma_ctx() const;
  ::domi::FftsPlusSdmaCtxDef* release_sdma_ctx();
  ::domi::FftsPlusSdmaCtxDef* mutable_sdma_ctx();
  void set_allocated_sdma_ctx(::domi::FftsPlusSdmaCtxDef* sdma_ctx);
  private:
  const ::domi::FftsPlusSdmaCtxDef& _internal_sdma_ctx() const;
  ::domi::FftsPlusSdmaCtxDef* _internal_mutable_sdma_ctx();
  public:
  void unsafe_arena_set_allocated_sdma_ctx(
      ::domi::FftsPlusSdmaCtxDef* sdma_ctx);
  ::domi::FftsPlusSdmaCtxDef* unsafe_arena_release_sdma_ctx();

  // .domi.FftsPlusNotifyCtxDef notify_ctx = 9;
  bool has_notify_ctx() const;
  private:
  bool _internal_has_notify_ctx() const;
  public:
  void clear_notify_ctx();
  const ::domi::FftsPlusNotifyCtxDef& notify_ctx() const;
  ::domi::FftsPlusNotifyCtxDef* release_notify_ctx();
  ::domi::FftsPlusNotifyCtxDef* mutable_notify_ctx();
  void set_allocated_notify_ctx(::domi::FftsPlusNotifyCtxDef* notify_ctx);
  private:
  const ::domi::FftsPlusNotifyCtxDef& _internal_notify_ctx() const;
  ::domi::FftsPlusNotifyCtxDef* _internal_mutable_notify_ctx();
  public:
  void unsafe_arena_set_allocated_notify_ctx(
      ::domi::FftsPlusNotifyCtxDef* notify_ctx);
  ::domi::FftsPlusNotifyCtxDef* unsafe_arena_release_notify_ctx();

  // .domi.FftsPlusWriteValueCtxDef write_value_ctx = 10;
  bool has_write_value_ctx() const;
  private:
  bool _internal_has_write_value_ctx() const;
  public:
  void clear_write_value_ctx();
  const ::domi::FftsPlusWriteValueCtxDef& write_value_ctx() const;
  ::domi::FftsPlusWriteValueCtxDef* release_write_value_ctx();
  ::domi::FftsPlusWriteValueCtxDef* mutable_write_value_ctx();
  void set_allocated_write_value_ctx(::domi::FftsPlusWriteValueCtxDef* write_value_ctx);
  private:
  const ::domi::FftsPlusWriteValueCtxDef& _internal_write_value_ctx() const;
  ::domi::FftsPlusWriteValueCtxDef* _internal_mutable_write_value_ctx();
  public:
  void unsafe_arena_set_allocated_write_value_ctx(
      ::domi::FftsPlusWriteValueCtxDef* write_value_ctx);
  ::domi::FftsPlusWriteValueCtxDef* unsafe_arena_release_write_value_ctx();

  // .domi.FftsPlusAicpuCtxDef aicpu_ctx = 11;
  bool has_aicpu_ctx() const;
  private:
  bool _internal_has_aicpu_ctx() const;
  public:
  void clear_aicpu_ctx();
  const ::domi::FftsPlusAicpuCtxDef& aicpu_ctx() const;
  ::domi::FftsPlusAicpuCtxDef* release_aicpu_ctx();
  ::domi::FftsPlusAicpuCtxDef* mutable_aicpu_ctx();
  void set_allocated_aicpu_ctx(::domi::FftsPlusAicpuCtxDef* aicpu_ctx);
  private:
  const ::domi::FftsPlusAicpuCtxDef& _internal_aicpu_ctx() const;
  ::domi::FftsPlusAicpuCtxDef* _internal_mutable_aicpu_ctx();
  public:
  void unsafe_arena_set_allocated_aicpu_ctx(
      ::domi::FftsPlusAicpuCtxDef* aicpu_ctx);
  ::domi::FftsPlusAicpuCtxDef* unsafe_arena_release_aicpu_ctx();

  // .domi.FftsPlusDataCtxDef data_ctx = 12;
  bool has_data_ctx() const;
  private:
  bool _internal_has_data_ctx() const;
  public:
  void clear_data_ctx();
  const ::domi::FftsPlusDataCtxDef& data_ctx() const;
  ::domi::FftsPlusDataCtxDef* release_data_ctx();
  ::domi::FftsPlusDataCtxDef* mutable_data_ctx();
  void set_allocated_data_ctx(::domi::FftsPlusDataCtxDef* data_ctx);
  private:
  const ::domi::FftsPlusDataCtxDef& _internal_data_ctx() const;
  ::domi::FftsPlusDataCtxDef* _internal_mutable_data_ctx();
  public:
  void unsafe_arena_set_allocated_data_ctx(
      ::domi::FftsPlusDataCtxDef* data_ctx);
  ::domi::FftsPlusDataCtxDef* unsafe_arena_release_data_ctx();

  // .domi.FftsPlusAtStartCtxDef at_start_ctx = 13;
  bool has_at_start_ctx() const;
  private:
  bool _internal_has_at_start_ctx() const;
  public:
  void clear_at_start_ctx();
  const ::domi::FftsPlusAtStartCtxDef& at_start_ctx() const;
  ::domi::FftsPlusAtStartCtxDef* release_at_start_ctx();
  ::domi::FftsPlusAtStartCtxDef* mutable_at_start_ctx();
  void set_allocated_at_start_ctx(::domi::FftsPlusAtStartCtxDef* at_start_ctx);
  private:
  const ::domi::FftsPlusAtStartCtxDef& _internal_at_start_ctx() const;
  ::domi::FftsPlusAtStartCtxDef* _internal_mutable_at_start_ctx();
  public:
  void unsafe_arena_set_allocated_at_start_ctx(
      ::domi::FftsPlusAtStartCtxDef* at_start_ctx);
  ::domi::FftsPlusAtStartCtxDef* unsafe_arena_release_at_start_ctx();

  // .domi.FftsPlusAtEndCtxDef at_end_ctx = 14;
  bool has_at_end_ctx() const;
  private:
  bool _internal_has_at_end_ctx() const;
  public:
  void clear_at_end_ctx();
  const ::domi::FftsPlusAtEndCtxDef& at_end_ctx() const;
  ::domi::FftsPlusAtEndCtxDef* release_at_end_ctx();
  ::domi::FftsPlusAtEndCtxDef* mutable_at_end_ctx();
  void set_allocated_at_end_ctx(::domi::FftsPlusAtEndCtxDef* at_end_ctx);
  private:
  const ::domi::FftsPlusAtEndCtxDef& _internal_at_end_ctx() const;
  ::domi::FftsPlusAtEndCtxDef* _internal_mutable_at_end_ctx();
  public:
  void unsafe_arena_set_allocated_at_end_ctx(
      ::domi::FftsPlusAtEndCtxDef* at_end_ctx);
  ::domi::FftsPlusAtEndCtxDef* unsafe_arena_release_at_end_ctx();

  // .domi.FftsPlusLabelCtxDef label_ctx = 15;
  bool has_label_ctx() const;
  private:
  bool _internal_has_label_ctx() const;
  public:
  void clear_label_ctx();
  const ::domi::FftsPlusLabelCtxDef& label_ctx() const;
  ::domi::FftsPlusLabelCtxDef* release_label_ctx();
  ::domi::FftsPlusLabelCtxDef* mutable_label_ctx();
  void set_allocated_label_ctx(::domi::FftsPlusLabelCtxDef* label_ctx);
  private:
  const ::domi::FftsPlusLabelCtxDef& _internal_label_ctx() const;
  ::domi::FftsPlusLabelCtxDef* _internal_mutable_label_ctx();
  public:
  void unsafe_arena_set_allocated_label_ctx(
      ::domi::FftsPlusLabelCtxDef* label_ctx);
  ::domi::FftsPlusLabelCtxDef* unsafe_arena_release_label_ctx();

  // .domi.FftsPlusCaseSwitchCtxDef case_switch_ctx = 16;
  bool has_case_switch_ctx() const;
  private:
  bool _internal_has_case_switch_ctx() const;
  public:
  void clear_case_switch_ctx();
  const ::domi::FftsPlusCaseSwitchCtxDef& case_switch_ctx() const;
  ::domi::FftsPlusCaseSwitchCtxDef* release_case_switch_ctx();
  ::domi::FftsPlusCaseSwitchCtxDef* mutable_case_switch_ctx();
  void set_allocated_case_switch_ctx(::domi::FftsPlusCaseSwitchCtxDef* case_switch_ctx);
  private:
  const ::domi::FftsPlusCaseSwitchCtxDef& _internal_case_switch_ctx() const;
  ::domi::FftsPlusCaseSwitchCtxDef* _internal_mutable_case_switch_ctx();
  public:
  void unsafe_arena_set_allocated_case_switch_ctx(
      ::domi::FftsPlusCaseSwitchCtxDef* case_switch_ctx);
  ::domi::FftsPlusCaseSwitchCtxDef* unsafe_arena_release_case_switch_ctx();

  // .domi.FftsPlusCaseDefaultCtxDef case_default_ctx = 17;
  bool has_case_default_ctx() const;
  private:
  bool _internal_has_case_default_ctx() const;
  public:
  void clear_case_default_ctx();
  const ::domi::FftsPlusCaseDefaultCtxDef& case_default_ctx() const;
  ::domi::FftsPlusCaseDefaultCtxDef* release_case_default_ctx();
  ::domi::FftsPlusCaseDefaultCtxDef* mutable_case_default_ctx();
  void set_allocated_case_default_ctx(::domi::FftsPlusCaseDefaultCtxDef* case_default_ctx);
  private:
  const ::domi::FftsPlusCaseDefaultCtxDef& _internal_case_default_ctx() const;
  ::domi::FftsPlusCaseDefaultCtxDef* _internal_mutable_case_default_ctx();
  public:
  void unsafe_arena_set_allocated_case_default_ctx(
      ::domi::FftsPlusCaseDefaultCtxDef* case_default_ctx);
  ::domi::FftsPlusCaseDefaultCtxDef* unsafe_arena_release_case_default_ctx();

  // .domi.FftsPlusCondSwitchCtxDef cond_switch_ctx = 18;
  bool has_cond_switch_ctx() const;
  private:
  bool _internal_has_cond_switch_ctx() const;
  public:
  void clear_cond_switch_ctx();
  const ::domi::FftsPlusCondSwitchCtxDef& cond_switch_ctx() const;
  ::domi::FftsPlusCondSwitchCtxDef* release_cond_switch_ctx();
  ::domi::FftsPlusCondSwitchCtxDef* mutable_cond_switch_ctx();
  void set_allocated_cond_switch_ctx(::domi::FftsPlusCondSwitchCtxDef* cond_switch_ctx);
  private:
  const ::domi::FftsPlusCondSwitchCtxDef& _internal_cond_switch_ctx() const;
  ::domi::FftsPlusCondSwitchCtxDef* _internal_mutable_cond_switch_ctx();
  public:
  void unsafe_arena_set_allocated_cond_switch_ctx(
      ::domi::FftsPlusCondSwitchCtxDef* cond_switch_ctx);
  ::domi::FftsPlusCondSwitchCtxDef* unsafe_arena_release_cond_switch_ctx();

  // .domi.FftsPlusCachePersistCtxDef cache_persist_ctx = 19;
  bool has_cache_persist_ctx() const;
  private:
  bool _internal_has_cache_persist_ctx() const;
  public:
  void clear_cache_persist_ctx();
  const ::domi::FftsPlusCachePersistCtxDef& cache_persist_ctx() const;
  ::domi::FftsPlusCachePersistCtxDef* release_cache_persist_ctx();
  ::domi::FftsPlusCachePersistCtxDef* mutable_cache_persist_ctx();
  void set_allocated_cache_persist_ctx(::domi::FftsPlusCachePersistCtxDef* cache_persist_ctx);
  private:
  const ::domi::FftsPlusCachePersistCtxDef& _internal_cache_persist_ctx() const;
  ::domi::FftsPlusCachePersistCtxDef* _internal_mutable_cache_persist_ctx();
  public:
  void unsafe_arena_set_allocated_cache_persist_ctx(
      ::domi::FftsPlusCachePersistCtxDef* cache_persist_ctx);
  ::domi::FftsPlusCachePersistCtxDef* unsafe_arena_release_cache_persist_ctx();

  // .domi.FftsPlusDsaCtxDef dsa_ctx = 20;
  bool has_dsa_ctx() const;
  private:
  bool _internal_has_dsa_ctx() const;
  public:
  void clear_dsa_ctx();
  const ::domi::FftsPlusDsaCtxDef& dsa_ctx() const;
  ::domi::FftsPlusDsaCtxDef* release_dsa_ctx();
  ::domi::FftsPlusDsaCtxDef* mutable_dsa_ctx();
  void set_allocated_dsa_ctx(::domi::FftsPlusDsaCtxDef* dsa_ctx);
  private:
  const ::domi::FftsPlusDsaCtxDef& _internal_dsa_ctx() const;
  ::domi::FftsPlusDsaCtxDef* _internal_mutable_dsa_ctx();
  public:
  void unsafe_arena_set_allocated_dsa_ctx(
      ::domi::FftsPlusDsaCtxDef* dsa_ctx);
  ::domi::FftsPlusDsaCtxDef* unsafe_arena_release_dsa_ctx();

  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 context_type = 3;
  void clear_context_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 context_type() const;
  void set_context_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_context_type() const;
  void _internal_set_context_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 context_id = 4;
  void clear_context_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 context_id() const;
  void set_context_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_context_id() const;
  void _internal_set_context_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .domi.FftsPlusCtxDef.OpType op_type = 5;
  void clear_op_type();
  ::domi::FftsPlusCtxDef_OpType op_type() const;
  void set_op_type(::domi::FftsPlusCtxDef_OpType value);
  private:
  ::domi::FftsPlusCtxDef_OpType _internal_op_type() const;
  void _internal_set_op_type(::domi::FftsPlusCtxDef_OpType value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr uniq_ctx_name_;
  ::domi::FftsPlusAicAivCtxDef* aic_aiv_ctx_;
  ::domi::FftsPlusMixAicAivCtxDef* mix_aic_aiv_ctx_;
  ::domi::FftsPlusSdmaCtxDef* sdma_ctx_;
  ::domi::FftsPlusNotifyCtxDef* notify_ctx_;
  ::domi::FftsPlusWriteValueCtxDef* write_value_ctx_;
  ::domi::FftsPlusAicpuCtxDef* aicpu_ctx_;
  ::domi::FftsPlusDataCtxDef* data_ctx_;
  ::domi::FftsPlusAtStartCtxDef* at_start_ctx_;
  ::domi::FftsPlusAtEndCtxDef* at_end_ctx_;
  ::domi::FftsPlusLabelCtxDef* label_ctx_;
  ::domi::FftsPlusCaseSwitchCtxDef* case_switch_ctx_;
  ::domi::FftsPlusCaseDefaultCtxDef* case_default_ctx_;
  ::domi::FftsPlusCondSwitchCtxDef* cond_switch_ctx_;
  ::domi::FftsPlusCachePersistCtxDef* cache_persist_ctx_;
  ::domi::FftsPlusDsaCtxDef* dsa_ctx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 context_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 context_id_;
  int op_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusAicAivCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusAicAivCtxDef) */ {
 public:
  inline FftsPlusAicAivCtxDef() : FftsPlusAicAivCtxDef(nullptr) {}
  virtual ~FftsPlusAicAivCtxDef();

  FftsPlusAicAivCtxDef(const FftsPlusAicAivCtxDef& from);
  FftsPlusAicAivCtxDef(FftsPlusAicAivCtxDef&& from) noexcept
    : FftsPlusAicAivCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusAicAivCtxDef& operator=(const FftsPlusAicAivCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusAicAivCtxDef& operator=(FftsPlusAicAivCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusAicAivCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusAicAivCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusAicAivCtxDef*>(
               &_FftsPlusAicAivCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(FftsPlusAicAivCtxDef& a, FftsPlusAicAivCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusAicAivCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusAicAivCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusAicAivCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusAicAivCtxDef>(nullptr);
  }

  FftsPlusAicAivCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusAicAivCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusAicAivCtxDef& from);
  void MergeFrom(const FftsPlusAicAivCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusAicAivCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusAicAivCtxDef";
  }
  protected:
  explicit FftsPlusAicAivCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 6,
    kTaskAddrFieldNumber = 21,
    kTaskAddrOffsetFieldNumber = 22,
    kKernelNameFieldNumber = 24,
    kSrcSlotFieldNumber = 25,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kPrefetchConfigFieldNumber = 3,
    kPredCntInitFieldNumber = 4,
    kPredCntFieldNumber = 5,
    kSchemFieldNumber = 7,
    kAtmFieldNumber = 8,
    kPrefetchEnableBitmapFieldNumber = 9,
    kPrefetchOnceBitmapFieldNumber = 10,
    kPmgFieldNumber = 11,
    kNsFieldNumber = 12,
    kPartIdFieldNumber = 13,
    kQosFieldNumber = 14,
    kThreadIdFieldNumber = 15,
    kThreadDimFieldNumber = 16,
    kNonTailBlockDimFieldNumber = 17,
    kTailBlockDimFieldNumber = 18,
    kTaskParamPtrOffsetFieldNumber = 19,
    kSaveTaskAddrFieldNumber = 20,
    kInputOutputCountFieldNumber = 23,
    kPolicyPriFieldNumber = 26,
    kThreadWindowSizeFieldNumber = 27,
  };
  // repeated uint32 successor_list = 6;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // repeated uint64 task_addr = 21;
  int task_addr_size() const;
  private:
  int _internal_task_addr_size() const;
  public:
  void clear_task_addr();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_addr(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_task_addr() const;
  void _internal_add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_task_addr();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 task_addr(int index) const;
  void set_task_addr(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      task_addr() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_task_addr();

  // repeated uint64 task_addr_offset = 22;
  int task_addr_offset_size() const;
  private:
  int _internal_task_addr_offset_size() const;
  public:
  void clear_task_addr_offset();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_addr_offset(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_task_addr_offset() const;
  void _internal_add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_task_addr_offset();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 task_addr_offset(int index) const;
  void set_task_addr_offset(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      task_addr_offset() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_task_addr_offset();

  // repeated string kernel_name = 24;
  int kernel_name_size() const;
  private:
  int _internal_kernel_name_size() const;
  public:
  void clear_kernel_name();
  const std::string& kernel_name(int index) const;
  std::string* mutable_kernel_name(int index);
  void set_kernel_name(int index, const std::string& value);
  void set_kernel_name(int index, std::string&& value);
  void set_kernel_name(int index, const char* value);
  void set_kernel_name(int index, const char* value, size_t size);
  std::string* add_kernel_name();
  void add_kernel_name(const std::string& value);
  void add_kernel_name(std::string&& value);
  void add_kernel_name(const char* value);
  void add_kernel_name(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& kernel_name() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_kernel_name();
  private:
  const std::string& _internal_kernel_name(int index) const;
  std::string* _internal_add_kernel_name();
  public:

  // repeated uint32 src_slot = 25;
  int src_slot_size() const;
  private:
  int _internal_src_slot_size() const;
  public:
  void clear_src_slot();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_src_slot(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_src_slot() const;
  void _internal_add_src_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_src_slot();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 src_slot(int index) const;
  void set_src_slot(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_src_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      src_slot() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_src_slot();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_config = 3;
  void clear_prefetch_config();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_config() const;
  void set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_config() const;
  void _internal_set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 4;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 5;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 schem = 7;
  void clear_schem();
  ::PROTOBUF_NAMESPACE_ID::uint32 schem() const;
  void set_schem(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_schem() const;
  void _internal_set_schem(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 8;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_enable_bitmap = 9;
  void clear_prefetch_enable_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_enable_bitmap() const;
  void set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_enable_bitmap() const;
  void _internal_set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_once_bitmap = 10;
  void clear_prefetch_once_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_bitmap() const;
  void set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_once_bitmap() const;
  void _internal_set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pmg = 11;
  void clear_pmg();
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg() const;
  void set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pmg() const;
  void _internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ns = 12;
  void clear_ns();
  ::PROTOBUF_NAMESPACE_ID::uint32 ns() const;
  void set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ns() const;
  void _internal_set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 part_id = 13;
  void clear_part_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id() const;
  void set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_part_id() const;
  void _internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 qos = 14;
  void clear_qos();
  ::PROTOBUF_NAMESPACE_ID::uint32 qos() const;
  void set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_qos() const;
  void _internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 15;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 16;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_block_dim = 17;
  void clear_non_tail_block_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_block_dim() const;
  void set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_block_dim() const;
  void _internal_set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_block_dim = 18;
  void clear_tail_block_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_block_dim() const;
  void set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_block_dim() const;
  void _internal_set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 task_param_ptr_offset = 19;
  void clear_task_param_ptr_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 task_param_ptr_offset() const;
  void set_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_task_param_ptr_offset() const;
  void _internal_set_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 save_task_addr = 20;
  void clear_save_task_addr();
  ::PROTOBUF_NAMESPACE_ID::uint32 save_task_addr() const;
  void set_save_task_addr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_save_task_addr() const;
  void _internal_set_save_task_addr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input_output_count = 23;
  void clear_input_output_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 input_output_count() const;
  void set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_output_count() const;
  void _internal_set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 policy_pri = 26;
  void clear_policy_pri();
  ::PROTOBUF_NAMESPACE_ID::uint32 policy_pri() const;
  void set_policy_pri(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_policy_pri() const;
  void _internal_set_policy_pri(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_window_size = 27;
  void clear_thread_window_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_window_size() const;
  void set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_window_size() const;
  void _internal_set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusAicAivCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > task_addr_;
  mutable std::atomic<int> _task_addr_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > task_addr_offset_;
  mutable std::atomic<int> _task_addr_offset_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> kernel_name_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > src_slot_;
  mutable std::atomic<int> _src_slot_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_config_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 schem_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_enable_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ns_;
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_block_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_block_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 task_param_ptr_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 save_task_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input_output_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 policy_pri_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_window_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusMixAicAivCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusMixAicAivCtxDef) */ {
 public:
  inline FftsPlusMixAicAivCtxDef() : FftsPlusMixAicAivCtxDef(nullptr) {}
  virtual ~FftsPlusMixAicAivCtxDef();

  FftsPlusMixAicAivCtxDef(const FftsPlusMixAicAivCtxDef& from);
  FftsPlusMixAicAivCtxDef(FftsPlusMixAicAivCtxDef&& from) noexcept
    : FftsPlusMixAicAivCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusMixAicAivCtxDef& operator=(const FftsPlusMixAicAivCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusMixAicAivCtxDef& operator=(FftsPlusMixAicAivCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusMixAicAivCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusMixAicAivCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusMixAicAivCtxDef*>(
               &_FftsPlusMixAicAivCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(FftsPlusMixAicAivCtxDef& a, FftsPlusMixAicAivCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusMixAicAivCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusMixAicAivCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusMixAicAivCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusMixAicAivCtxDef>(nullptr);
  }

  FftsPlusMixAicAivCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusMixAicAivCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusMixAicAivCtxDef& from);
  void MergeFrom(const FftsPlusMixAicAivCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusMixAicAivCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusMixAicAivCtxDef";
  }
  protected:
  explicit FftsPlusMixAicAivCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 6,
    kKernelNameFieldNumber = 23,
    kTaskAddrFieldNumber = 24,
    kTaskAddrOffsetFieldNumber = 25,
    kSrcSlotFieldNumber = 28,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kPrefetchConfigFieldNumber = 3,
    kPredCntInitFieldNumber = 4,
    kPredCntFieldNumber = 5,
    kSchemFieldNumber = 7,
    kAtmFieldNumber = 8,
    kPrefetchEnableBitmapFieldNumber = 9,
    kPrefetchOnceBitmapFieldNumber = 10,
    kPmgFieldNumber = 11,
    kNsFieldNumber = 12,
    kPartIdFieldNumber = 13,
    kQosFieldNumber = 14,
    kNonTailBlockRatioNFieldNumber = 15,
    kTailBlockRatioNFieldNumber = 16,
    kThreadIdFieldNumber = 17,
    kThreadDimFieldNumber = 18,
    kNonTailBlockDimFieldNumber = 19,
    kTailBlockDimFieldNumber = 20,
    kAicTaskParamPtrOffsetFieldNumber = 21,
    kAivTaskParamPtrOffsetFieldNumber = 22,
    kInputOutputCountFieldNumber = 26,
    kSaveTaskAddrFieldNumber = 27,
    kPolicyPriFieldNumber = 29,
    kThreadWindowSizeFieldNumber = 30,
  };
  // repeated uint32 successor_list = 6;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // repeated string kernel_name = 23;
  int kernel_name_size() const;
  private:
  int _internal_kernel_name_size() const;
  public:
  void clear_kernel_name();
  const std::string& kernel_name(int index) const;
  std::string* mutable_kernel_name(int index);
  void set_kernel_name(int index, const std::string& value);
  void set_kernel_name(int index, std::string&& value);
  void set_kernel_name(int index, const char* value);
  void set_kernel_name(int index, const char* value, size_t size);
  std::string* add_kernel_name();
  void add_kernel_name(const std::string& value);
  void add_kernel_name(std::string&& value);
  void add_kernel_name(const char* value);
  void add_kernel_name(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& kernel_name() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_kernel_name();
  private:
  const std::string& _internal_kernel_name(int index) const;
  std::string* _internal_add_kernel_name();
  public:

  // repeated uint64 task_addr = 24;
  int task_addr_size() const;
  private:
  int _internal_task_addr_size() const;
  public:
  void clear_task_addr();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_addr(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_task_addr() const;
  void _internal_add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_task_addr();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 task_addr(int index) const;
  void set_task_addr(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      task_addr() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_task_addr();

  // repeated uint64 task_addr_offset = 25;
  int task_addr_offset_size() const;
  private:
  int _internal_task_addr_offset_size() const;
  public:
  void clear_task_addr_offset();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_addr_offset(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_task_addr_offset() const;
  void _internal_add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_task_addr_offset();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 task_addr_offset(int index) const;
  void set_task_addr_offset(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      task_addr_offset() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_task_addr_offset();

  // repeated uint32 src_slot = 28;
  int src_slot_size() const;
  private:
  int _internal_src_slot_size() const;
  public:
  void clear_src_slot();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_src_slot(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_src_slot() const;
  void _internal_add_src_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_src_slot();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 src_slot(int index) const;
  void set_src_slot(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_src_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      src_slot() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_src_slot();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_config = 3;
  void clear_prefetch_config();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_config() const;
  void set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_config() const;
  void _internal_set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 4;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 5;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 schem = 7;
  void clear_schem();
  ::PROTOBUF_NAMESPACE_ID::uint32 schem() const;
  void set_schem(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_schem() const;
  void _internal_set_schem(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 8;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_enable_bitmap = 9;
  void clear_prefetch_enable_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_enable_bitmap() const;
  void set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_enable_bitmap() const;
  void _internal_set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_once_bitmap = 10;
  void clear_prefetch_once_bitmap();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_bitmap() const;
  void set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_once_bitmap() const;
  void _internal_set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pmg = 11;
  void clear_pmg();
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg() const;
  void set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pmg() const;
  void _internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ns = 12;
  void clear_ns();
  ::PROTOBUF_NAMESPACE_ID::uint32 ns() const;
  void set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ns() const;
  void _internal_set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 part_id = 13;
  void clear_part_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id() const;
  void set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_part_id() const;
  void _internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 qos = 14;
  void clear_qos();
  ::PROTOBUF_NAMESPACE_ID::uint32 qos() const;
  void set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_qos() const;
  void _internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_block_ratio_n = 15;
  void clear_non_tail_block_ratio_n();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_block_ratio_n() const;
  void set_non_tail_block_ratio_n(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_block_ratio_n() const;
  void _internal_set_non_tail_block_ratio_n(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_block_ratio_n = 16;
  void clear_tail_block_ratio_n();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_block_ratio_n() const;
  void set_tail_block_ratio_n(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_block_ratio_n() const;
  void _internal_set_tail_block_ratio_n(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 17;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 18;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_block_dim = 19;
  void clear_non_tail_block_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_block_dim() const;
  void set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_block_dim() const;
  void _internal_set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_block_dim = 20;
  void clear_tail_block_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_block_dim() const;
  void set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_block_dim() const;
  void _internal_set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aic_task_param_ptr_offset = 21;
  void clear_aic_task_param_ptr_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_task_param_ptr_offset() const;
  void set_aic_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aic_task_param_ptr_offset() const;
  void _internal_set_aic_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aiv_task_param_ptr_offset = 22;
  void clear_aiv_task_param_ptr_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_task_param_ptr_offset() const;
  void set_aiv_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aiv_task_param_ptr_offset() const;
  void _internal_set_aiv_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input_output_count = 26;
  void clear_input_output_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 input_output_count() const;
  void set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_output_count() const;
  void _internal_set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 save_task_addr = 27;
  void clear_save_task_addr();
  ::PROTOBUF_NAMESPACE_ID::uint32 save_task_addr() const;
  void set_save_task_addr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_save_task_addr() const;
  void _internal_set_save_task_addr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 policy_pri = 29;
  void clear_policy_pri();
  ::PROTOBUF_NAMESPACE_ID::uint32 policy_pri() const;
  void set_policy_pri(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_policy_pri() const;
  void _internal_set_policy_pri(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_window_size = 30;
  void clear_thread_window_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_window_size() const;
  void set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_window_size() const;
  void _internal_set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusMixAicAivCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> kernel_name_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > task_addr_;
  mutable std::atomic<int> _task_addr_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > task_addr_offset_;
  mutable std::atomic<int> _task_addr_offset_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > src_slot_;
  mutable std::atomic<int> _src_slot_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_config_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 schem_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_enable_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_once_bitmap_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ns_;
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_block_ratio_n_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_block_ratio_n_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_block_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_block_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aic_task_param_ptr_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aiv_task_param_ptr_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input_output_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 save_task_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 policy_pri_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_window_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusSdmaCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusSdmaCtxDef) */ {
 public:
  inline FftsPlusSdmaCtxDef() : FftsPlusSdmaCtxDef(nullptr) {}
  virtual ~FftsPlusSdmaCtxDef();

  FftsPlusSdmaCtxDef(const FftsPlusSdmaCtxDef& from);
  FftsPlusSdmaCtxDef(FftsPlusSdmaCtxDef&& from) noexcept
    : FftsPlusSdmaCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusSdmaCtxDef& operator=(const FftsPlusSdmaCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusSdmaCtxDef& operator=(FftsPlusSdmaCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusSdmaCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusSdmaCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusSdmaCtxDef*>(
               &_FftsPlusSdmaCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(FftsPlusSdmaCtxDef& a, FftsPlusSdmaCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusSdmaCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusSdmaCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusSdmaCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusSdmaCtxDef>(nullptr);
  }

  FftsPlusSdmaCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusSdmaCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusSdmaCtxDef& from);
  void MergeFrom(const FftsPlusSdmaCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusSdmaCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusSdmaCtxDef";
  }
  protected:
  explicit FftsPlusSdmaCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 5,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kPredCntInitFieldNumber = 3,
    kPredCntFieldNumber = 4,
    kAtmFieldNumber = 6,
    kPmgFieldNumber = 7,
    kNsFieldNumber = 8,
    kPartIdFieldNumber = 9,
    kQosFieldNumber = 10,
    kThreadIdFieldNumber = 11,
    kThreadDimFieldNumber = 12,
    kSdmaSqeHeaderFieldNumber = 13,
    kSrcStreamIdFieldNumber = 14,
    kSrcSubStreamIdFieldNumber = 15,
    kDstStreamIdFieldNumber = 16,
    kDstSubStreamIdFieldNumber = 17,
    kSrcAddrBaseFieldNumber = 18,
    kDstAddrBaseFieldNumber = 20,
    kSrcAddrOffsetFieldNumber = 19,
    kDstAddrOffsetFieldNumber = 21,
    kNonTailDataLenFieldNumber = 22,
    kTailDataLenFieldNumber = 23,
  };
  // repeated uint32 successor_list = 5;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 3;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 4;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 6;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pmg = 7;
  void clear_pmg();
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg() const;
  void set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pmg() const;
  void _internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ns = 8;
  void clear_ns();
  ::PROTOBUF_NAMESPACE_ID::uint32 ns() const;
  void set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ns() const;
  void _internal_set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 part_id = 9;
  void clear_part_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id() const;
  void set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_part_id() const;
  void _internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 qos = 10;
  void clear_qos();
  ::PROTOBUF_NAMESPACE_ID::uint32 qos() const;
  void set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_qos() const;
  void _internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 11;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 12;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 sdma_sqe_header = 13;
  void clear_sdma_sqe_header();
  ::PROTOBUF_NAMESPACE_ID::uint32 sdma_sqe_header() const;
  void set_sdma_sqe_header(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sdma_sqe_header() const;
  void _internal_set_sdma_sqe_header(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 src_stream_id = 14;
  void clear_src_stream_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 src_stream_id() const;
  void set_src_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_src_stream_id() const;
  void _internal_set_src_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 src_sub_stream_id = 15;
  void clear_src_sub_stream_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 src_sub_stream_id() const;
  void set_src_sub_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_src_sub_stream_id() const;
  void _internal_set_src_sub_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 dst_stream_id = 16;
  void clear_dst_stream_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 dst_stream_id() const;
  void set_dst_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dst_stream_id() const;
  void _internal_set_dst_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 dst_sub_stream_id = 17;
  void clear_dst_sub_stream_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 dst_sub_stream_id() const;
  void set_dst_sub_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dst_sub_stream_id() const;
  void _internal_set_dst_sub_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 src_addr_base = 18;
  void clear_src_addr_base();
  ::PROTOBUF_NAMESPACE_ID::uint64 src_addr_base() const;
  void set_src_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_src_addr_base() const;
  void _internal_set_src_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 dst_addr_base = 20;
  void clear_dst_addr_base();
  ::PROTOBUF_NAMESPACE_ID::uint64 dst_addr_base() const;
  void set_dst_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dst_addr_base() const;
  void _internal_set_dst_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 src_addr_offset = 19;
  void clear_src_addr_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 src_addr_offset() const;
  void set_src_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_src_addr_offset() const;
  void _internal_set_src_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 dst_addr_offset = 21;
  void clear_dst_addr_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 dst_addr_offset() const;
  void set_dst_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dst_addr_offset() const;
  void _internal_set_dst_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_data_len = 22;
  void clear_non_tail_data_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_data_len() const;
  void set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_data_len() const;
  void _internal_set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_data_len = 23;
  void clear_tail_data_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_data_len() const;
  void set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_data_len() const;
  void _internal_set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusSdmaCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ns_;
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sdma_sqe_header_;
  ::PROTOBUF_NAMESPACE_ID::uint32 src_stream_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 src_sub_stream_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dst_stream_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dst_sub_stream_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 src_addr_base_;
  ::PROTOBUF_NAMESPACE_ID::uint64 dst_addr_base_;
  ::PROTOBUF_NAMESPACE_ID::uint32 src_addr_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dst_addr_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_data_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_data_len_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusNotifyCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusNotifyCtxDef) */ {
 public:
  inline FftsPlusNotifyCtxDef() : FftsPlusNotifyCtxDef(nullptr) {}
  virtual ~FftsPlusNotifyCtxDef();

  FftsPlusNotifyCtxDef(const FftsPlusNotifyCtxDef& from);
  FftsPlusNotifyCtxDef(FftsPlusNotifyCtxDef&& from) noexcept
    : FftsPlusNotifyCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusNotifyCtxDef& operator=(const FftsPlusNotifyCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusNotifyCtxDef& operator=(FftsPlusNotifyCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusNotifyCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusNotifyCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusNotifyCtxDef*>(
               &_FftsPlusNotifyCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(FftsPlusNotifyCtxDef& a, FftsPlusNotifyCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusNotifyCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusNotifyCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusNotifyCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusNotifyCtxDef>(nullptr);
  }

  FftsPlusNotifyCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusNotifyCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusNotifyCtxDef& from);
  void MergeFrom(const FftsPlusNotifyCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusNotifyCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusNotifyCtxDef";
  }
  protected:
  explicit FftsPlusNotifyCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 5,
    kNotifyIdFieldNumber = 12,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kPredCntInitFieldNumber = 3,
    kPredCntFieldNumber = 4,
    kSatmFieldNumber = 6,
    kAtmFieldNumber = 7,
    kThreadIdFieldNumber = 8,
    kThreadDimFieldNumber = 9,
    kNotifyIdBaseFieldNumber = 10,
    kAutoWindowFieldNumber = 11,
  };
  // repeated uint32 successor_list = 5;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // repeated uint32 notify_id = 12;
  int notify_id_size() const;
  private:
  int _internal_notify_id_size() const;
  public:
  void clear_notify_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_notify_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_notify_id() const;
  void _internal_add_notify_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_notify_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 notify_id(int index) const;
  void set_notify_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_notify_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      notify_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_notify_id();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 3;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 4;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 satm = 6;
  void clear_satm();
  ::PROTOBUF_NAMESPACE_ID::uint32 satm() const;
  void set_satm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_satm() const;
  void _internal_set_satm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 7;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 8;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 9;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 notify_id_base = 10;
  void clear_notify_id_base();
  ::PROTOBUF_NAMESPACE_ID::uint32 notify_id_base() const;
  void set_notify_id_base(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_notify_id_base() const;
  void _internal_set_notify_id_base(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 auto_window = 11;
  void clear_auto_window();
  ::PROTOBUF_NAMESPACE_ID::uint32 auto_window() const;
  void set_auto_window(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_auto_window() const;
  void _internal_set_auto_window(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusNotifyCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > notify_id_;
  mutable std::atomic<int> _notify_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 satm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 notify_id_base_;
  ::PROTOBUF_NAMESPACE_ID::uint32 auto_window_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusWriteValueCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusWriteValueCtxDef) */ {
 public:
  inline FftsPlusWriteValueCtxDef() : FftsPlusWriteValueCtxDef(nullptr) {}
  virtual ~FftsPlusWriteValueCtxDef();

  FftsPlusWriteValueCtxDef(const FftsPlusWriteValueCtxDef& from);
  FftsPlusWriteValueCtxDef(FftsPlusWriteValueCtxDef&& from) noexcept
    : FftsPlusWriteValueCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusWriteValueCtxDef& operator=(const FftsPlusWriteValueCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusWriteValueCtxDef& operator=(FftsPlusWriteValueCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusWriteValueCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusWriteValueCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusWriteValueCtxDef*>(
               &_FftsPlusWriteValueCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(FftsPlusWriteValueCtxDef& a, FftsPlusWriteValueCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusWriteValueCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusWriteValueCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusWriteValueCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusWriteValueCtxDef>(nullptr);
  }

  FftsPlusWriteValueCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusWriteValueCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusWriteValueCtxDef& from);
  void MergeFrom(const FftsPlusWriteValueCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusWriteValueCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusWriteValueCtxDef";
  }
  protected:
  explicit FftsPlusWriteValueCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 5,
    kWriteValueFieldNumber = 21,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kPredCntInitFieldNumber = 3,
    kPredCntFieldNumber = 4,
    kAtmFieldNumber = 6,
    kThreadIdFieldNumber = 7,
    kThreadDimFieldNumber = 8,
    kAwSizeFieldNumber = 9,
    kAwSnoopFieldNumber = 10,
    kAwCacheFieldNumber = 11,
    kAwProtFieldNumber = 12,
    kAwVaFieldNumber = 13,
    kArSizeFieldNumber = 14,
    kArSnoopFieldNumber = 15,
    kArCacheFieldNumber = 16,
    kArProtFieldNumber = 17,
    kWriteAddrBaseFieldNumber = 19,
    kArVaFieldNumber = 18,
    kWriteAddrOffsetFieldNumber = 20,
  };
  // repeated uint32 successor_list = 5;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // repeated uint32 write_value = 21;
  int write_value_size() const;
  private:
  int _internal_write_value_size() const;
  public:
  void clear_write_value();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_write_value(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_write_value() const;
  void _internal_add_write_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_write_value();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 write_value(int index) const;
  void set_write_value(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_write_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      write_value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_write_value();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 3;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 4;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 6;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 7;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 8;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aw_size = 9;
  void clear_aw_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_size() const;
  void set_aw_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aw_size() const;
  void _internal_set_aw_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aw_snoop = 10;
  void clear_aw_snoop();
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_snoop() const;
  void set_aw_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aw_snoop() const;
  void _internal_set_aw_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aw_cache = 11;
  void clear_aw_cache();
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_cache() const;
  void set_aw_cache(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aw_cache() const;
  void _internal_set_aw_cache(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aw_prot = 12;
  void clear_aw_prot();
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_prot() const;
  void set_aw_prot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aw_prot() const;
  void _internal_set_aw_prot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aw_va = 13;
  void clear_aw_va();
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_va() const;
  void set_aw_va(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aw_va() const;
  void _internal_set_aw_va(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_size = 14;
  void clear_ar_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_size() const;
  void set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_size() const;
  void _internal_set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_snoop = 15;
  void clear_ar_snoop();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_snoop() const;
  void set_ar_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_snoop() const;
  void _internal_set_ar_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_cache = 16;
  void clear_ar_cache();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_cache() const;
  void set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_cache() const;
  void _internal_set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_prot = 17;
  void clear_ar_prot();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_prot() const;
  void set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_prot() const;
  void _internal_set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 write_addr_base = 19;
  void clear_write_addr_base();
  ::PROTOBUF_NAMESPACE_ID::uint64 write_addr_base() const;
  void set_write_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_write_addr_base() const;
  void _internal_set_write_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ar_va = 18;
  void clear_ar_va();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_va() const;
  void set_ar_va(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_va() const;
  void _internal_set_ar_va(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 write_addr_offset = 20;
  void clear_write_addr_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 write_addr_offset() const;
  void set_write_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_write_addr_offset() const;
  void _internal_set_write_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusWriteValueCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > write_value_;
  mutable std::atomic<int> _write_value_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_snoop_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_cache_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_prot_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aw_va_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_snoop_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_cache_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_prot_;
  ::PROTOBUF_NAMESPACE_ID::uint64 write_addr_base_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_va_;
  ::PROTOBUF_NAMESPACE_ID::uint32 write_addr_offset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusAicpuCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusAicpuCtxDef) */ {
 public:
  inline FftsPlusAicpuCtxDef() : FftsPlusAicpuCtxDef(nullptr) {}
  virtual ~FftsPlusAicpuCtxDef();

  FftsPlusAicpuCtxDef(const FftsPlusAicpuCtxDef& from);
  FftsPlusAicpuCtxDef(FftsPlusAicpuCtxDef&& from) noexcept
    : FftsPlusAicpuCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusAicpuCtxDef& operator=(const FftsPlusAicpuCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusAicpuCtxDef& operator=(FftsPlusAicpuCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusAicpuCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusAicpuCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusAicpuCtxDef*>(
               &_FftsPlusAicpuCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(FftsPlusAicpuCtxDef& a, FftsPlusAicpuCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusAicpuCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusAicpuCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusAicpuCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusAicpuCtxDef>(nullptr);
  }

  FftsPlusAicpuCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusAicpuCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusAicpuCtxDef& from);
  void MergeFrom(const FftsPlusAicpuCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusAicpuCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusAicpuCtxDef";
  }
  protected:
  explicit FftsPlusAicpuCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 5,
    kKernelFieldNumber = 20,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kPredCntInitFieldNumber = 3,
    kPredCntFieldNumber = 4,
    kAtmFieldNumber = 6,
    kSqeIndexFieldNumber = 7,
    kKernelTypeFieldNumber = 8,
    kBmFieldNumber = 9,
    kTopicTypeFieldNumber = 10,
    kQosFieldNumber = 11,
    kThreadIdFieldNumber = 12,
    kThreadDimFieldNumber = 13,
    kNonTailBlockDimFieldNumber = 14,
    kTailBlockDimFieldNumber = 15,
    kSubTopicIdFieldNumber = 16,
    kTopicIdFieldNumber = 17,
    kGroupIdFieldNumber = 18,
    kTaskParamOffsetFieldNumber = 19,
  };
  // repeated uint32 successor_list = 5;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // .domi.aicpuKernelDef kernel = 20;
  bool has_kernel() const;
  private:
  bool _internal_has_kernel() const;
  public:
  void clear_kernel();
  const ::domi::aicpuKernelDef& kernel() const;
  ::domi::aicpuKernelDef* release_kernel();
  ::domi::aicpuKernelDef* mutable_kernel();
  void set_allocated_kernel(::domi::aicpuKernelDef* kernel);
  private:
  const ::domi::aicpuKernelDef& _internal_kernel() const;
  ::domi::aicpuKernelDef* _internal_mutable_kernel();
  public:
  void unsafe_arena_set_allocated_kernel(
      ::domi::aicpuKernelDef* kernel);
  ::domi::aicpuKernelDef* unsafe_arena_release_kernel();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 3;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 4;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 6;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 sqe_index = 7;
  void clear_sqe_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 sqe_index() const;
  void set_sqe_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sqe_index() const;
  void _internal_set_sqe_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 kernel_type = 8;
  void clear_kernel_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_type() const;
  void set_kernel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kernel_type() const;
  void _internal_set_kernel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 bm = 9;
  void clear_bm();
  ::PROTOBUF_NAMESPACE_ID::uint32 bm() const;
  void set_bm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bm() const;
  void _internal_set_bm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 topic_type = 10;
  void clear_topic_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 topic_type() const;
  void set_topic_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_topic_type() const;
  void _internal_set_topic_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 qos = 11;
  void clear_qos();
  ::PROTOBUF_NAMESPACE_ID::uint32 qos() const;
  void set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_qos() const;
  void _internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 12;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 13;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_block_dim = 14;
  void clear_non_tail_block_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_block_dim() const;
  void set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_block_dim() const;
  void _internal_set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_block_dim = 15;
  void clear_tail_block_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_block_dim() const;
  void set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_block_dim() const;
  void _internal_set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 sub_topic_id = 16;
  void clear_sub_topic_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 sub_topic_id() const;
  void set_sub_topic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sub_topic_id() const;
  void _internal_set_sub_topic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 topic_id = 17;
  void clear_topic_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 topic_id() const;
  void set_topic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_topic_id() const;
  void _internal_set_topic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 group_id = 18;
  void clear_group_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 group_id() const;
  void set_group_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_group_id() const;
  void _internal_set_group_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 task_param_offset = 19;
  void clear_task_param_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 task_param_offset() const;
  void set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_task_param_offset() const;
  void _internal_set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusAicpuCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::domi::aicpuKernelDef* kernel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sqe_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 topic_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_block_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_block_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sub_topic_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 topic_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 group_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 task_param_offset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class aicpuKernelDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.aicpuKernelDef) */ {
 public:
  inline aicpuKernelDef() : aicpuKernelDef(nullptr) {}
  virtual ~aicpuKernelDef();

  aicpuKernelDef(const aicpuKernelDef& from);
  aicpuKernelDef(aicpuKernelDef&& from) noexcept
    : aicpuKernelDef() {
    *this = ::std::move(from);
  }

  inline aicpuKernelDef& operator=(const aicpuKernelDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline aicpuKernelDef& operator=(aicpuKernelDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const aicpuKernelDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const aicpuKernelDef* internal_default_instance() {
    return reinterpret_cast<const aicpuKernelDef*>(
               &_aicpuKernelDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(aicpuKernelDef& a, aicpuKernelDef& b) {
    a.Swap(&b);
  }
  inline void Swap(aicpuKernelDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(aicpuKernelDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline aicpuKernelDef* New() const final {
    return CreateMaybeMessage<aicpuKernelDef>(nullptr);
  }

  aicpuKernelDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<aicpuKernelDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const aicpuKernelDef& from);
  void MergeFrom(const aicpuKernelDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(aicpuKernelDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.aicpuKernelDef";
  }
  protected:
  explicit aicpuKernelDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgsFieldNumber = 2,
    kSoNameFieldNumber = 3,
    kKernelNameFieldNumber = 4,
    kKernelExtInfoFieldNumber = 5,
    kArgsSizeFieldNumber = 1,
    kKernelExtInfoSizeFieldNumber = 6,
  };
  // bytes args = 2;
  void clear_args();
  const std::string& args() const;
  void set_args(const std::string& value);
  void set_args(std::string&& value);
  void set_args(const char* value);
  void set_args(const void* value, size_t size);
  std::string* mutable_args();
  std::string* release_args();
  void set_allocated_args(std::string* args);
  private:
  const std::string& _internal_args() const;
  void _internal_set_args(const std::string& value);
  std::string* _internal_mutable_args();
  public:

  // string so_name = 3;
  void clear_so_name();
  const std::string& so_name() const;
  void set_so_name(const std::string& value);
  void set_so_name(std::string&& value);
  void set_so_name(const char* value);
  void set_so_name(const char* value, size_t size);
  std::string* mutable_so_name();
  std::string* release_so_name();
  void set_allocated_so_name(std::string* so_name);
  private:
  const std::string& _internal_so_name() const;
  void _internal_set_so_name(const std::string& value);
  std::string* _internal_mutable_so_name();
  public:

  // string kernel_name = 4;
  void clear_kernel_name();
  const std::string& kernel_name() const;
  void set_kernel_name(const std::string& value);
  void set_kernel_name(std::string&& value);
  void set_kernel_name(const char* value);
  void set_kernel_name(const char* value, size_t size);
  std::string* mutable_kernel_name();
  std::string* release_kernel_name();
  void set_allocated_kernel_name(std::string* kernel_name);
  private:
  const std::string& _internal_kernel_name() const;
  void _internal_set_kernel_name(const std::string& value);
  std::string* _internal_mutable_kernel_name();
  public:

  // bytes kernel_ext_info = 5;
  void clear_kernel_ext_info();
  const std::string& kernel_ext_info() const;
  void set_kernel_ext_info(const std::string& value);
  void set_kernel_ext_info(std::string&& value);
  void set_kernel_ext_info(const char* value);
  void set_kernel_ext_info(const void* value, size_t size);
  std::string* mutable_kernel_ext_info();
  std::string* release_kernel_ext_info();
  void set_allocated_kernel_ext_info(std::string* kernel_ext_info);
  private:
  const std::string& _internal_kernel_ext_info() const;
  void _internal_set_kernel_ext_info(const std::string& value);
  std::string* _internal_mutable_kernel_ext_info();
  public:

  // uint32 args_size = 1;
  void clear_args_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 args_size() const;
  void set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_args_size() const;
  void _internal_set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 kernel_ext_info_size = 6;
  void clear_kernel_ext_info_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_ext_info_size() const;
  void set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kernel_ext_info_size() const;
  void _internal_set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.aicpuKernelDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr args_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr so_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kernel_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kernel_ext_info_;
  ::PROTOBUF_NAMESPACE_ID::uint32 args_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kernel_ext_info_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusDataCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusDataCtxDef) */ {
 public:
  inline FftsPlusDataCtxDef() : FftsPlusDataCtxDef(nullptr) {}
  virtual ~FftsPlusDataCtxDef();

  FftsPlusDataCtxDef(const FftsPlusDataCtxDef& from);
  FftsPlusDataCtxDef(FftsPlusDataCtxDef&& from) noexcept
    : FftsPlusDataCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusDataCtxDef& operator=(const FftsPlusDataCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusDataCtxDef& operator=(FftsPlusDataCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusDataCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusDataCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusDataCtxDef*>(
               &_FftsPlusDataCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(FftsPlusDataCtxDef& a, FftsPlusDataCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusDataCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusDataCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusDataCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusDataCtxDef>(nullptr);
  }

  FftsPlusDataCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusDataCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusDataCtxDef& from);
  void MergeFrom(const FftsPlusDataCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusDataCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusDataCtxDef";
  }
  protected:
  explicit FftsPlusDataCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 5,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kCntInitFieldNumber = 3,
    kCntFieldNumber = 4,
    kAtmFieldNumber = 6,
    kPmgFieldNumber = 7,
    kNsFieldNumber = 8,
    kPartIdFieldNumber = 9,
    kQosFieldNumber = 10,
    kOrigConsumerCounterFieldNumber = 11,
    kRunConsumerCounterFieldNumber = 12,
    kThreadIdFieldNumber = 13,
    kAddrBaseFieldNumber = 15,
    kThreadDimFieldNumber = 14,
    kAddrOffsetFieldNumber = 16,
    kNonTailNumOutterFieldNumber = 17,
    kNonTailNumInnerFieldNumber = 18,
    kNonTailLenInnerFieldNumber = 19,
    kNonTailStrideOutterFieldNumber = 20,
    kNonTailStrideInnerFieldNumber = 21,
    kTailNumOutterFieldNumber = 22,
    kTailNumInnerFieldNumber = 23,
    kTailLenInnerFieldNumber = 24,
    kTailStrideOutterFieldNumber = 25,
    kTailStrideInnerFieldNumber = 26,
  };
  // repeated uint32 successor_list = 5;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cnt_init = 3;
  void clear_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 cnt_init() const;
  void set_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cnt_init() const;
  void _internal_set_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cnt = 4;
  void clear_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 cnt() const;
  void set_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cnt() const;
  void _internal_set_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 6;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pmg = 7;
  void clear_pmg();
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg() const;
  void set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pmg() const;
  void _internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ns = 8;
  void clear_ns();
  ::PROTOBUF_NAMESPACE_ID::uint32 ns() const;
  void set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ns() const;
  void _internal_set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 part_id = 9;
  void clear_part_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id() const;
  void set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_part_id() const;
  void _internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 qos = 10;
  void clear_qos();
  ::PROTOBUF_NAMESPACE_ID::uint32 qos() const;
  void set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_qos() const;
  void _internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 orig_consumer_counter = 11;
  void clear_orig_consumer_counter();
  ::PROTOBUF_NAMESPACE_ID::uint32 orig_consumer_counter() const;
  void set_orig_consumer_counter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_orig_consumer_counter() const;
  void _internal_set_orig_consumer_counter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 run_consumer_counter = 12;
  void clear_run_consumer_counter();
  ::PROTOBUF_NAMESPACE_ID::uint32 run_consumer_counter() const;
  void set_run_consumer_counter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_run_consumer_counter() const;
  void _internal_set_run_consumer_counter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 13;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 addr_base = 15;
  void clear_addr_base();
  ::PROTOBUF_NAMESPACE_ID::uint64 addr_base() const;
  void set_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_addr_base() const;
  void _internal_set_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 thread_dim = 14;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 addr_offset = 16;
  void clear_addr_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 addr_offset() const;
  void set_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_addr_offset() const;
  void _internal_set_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_num_outter = 17;
  void clear_non_tail_num_outter();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_num_outter() const;
  void set_non_tail_num_outter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_num_outter() const;
  void _internal_set_non_tail_num_outter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_num_inner = 18;
  void clear_non_tail_num_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_num_inner() const;
  void set_non_tail_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_num_inner() const;
  void _internal_set_non_tail_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_len_inner = 19;
  void clear_non_tail_len_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_len_inner() const;
  void set_non_tail_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_len_inner() const;
  void _internal_set_non_tail_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_stride_outter = 20;
  void clear_non_tail_stride_outter();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_stride_outter() const;
  void set_non_tail_stride_outter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_stride_outter() const;
  void _internal_set_non_tail_stride_outter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 non_tail_stride_inner = 21;
  void clear_non_tail_stride_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_stride_inner() const;
  void set_non_tail_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_non_tail_stride_inner() const;
  void _internal_set_non_tail_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_num_outter = 22;
  void clear_tail_num_outter();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_num_outter() const;
  void set_tail_num_outter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_num_outter() const;
  void _internal_set_tail_num_outter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_num_inner = 23;
  void clear_tail_num_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_num_inner() const;
  void set_tail_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_num_inner() const;
  void _internal_set_tail_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_len_inner = 24;
  void clear_tail_len_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_len_inner() const;
  void set_tail_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_len_inner() const;
  void _internal_set_tail_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_stride_outter = 25;
  void clear_tail_stride_outter();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_stride_outter() const;
  void set_tail_stride_outter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_stride_outter() const;
  void _internal_set_tail_stride_outter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tail_stride_inner = 26;
  void clear_tail_stride_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_stride_inner() const;
  void set_tail_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tail_stride_inner() const;
  void _internal_set_tail_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusDataCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ns_;
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 orig_consumer_counter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 run_consumer_counter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 addr_base_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 addr_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_num_outter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_num_inner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_len_inner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_stride_outter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 non_tail_stride_inner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_num_outter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_num_inner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_len_inner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_stride_outter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tail_stride_inner_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusAtStartCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusAtStartCtxDef) */ {
 public:
  inline FftsPlusAtStartCtxDef() : FftsPlusAtStartCtxDef(nullptr) {}
  virtual ~FftsPlusAtStartCtxDef();

  FftsPlusAtStartCtxDef(const FftsPlusAtStartCtxDef& from);
  FftsPlusAtStartCtxDef(FftsPlusAtStartCtxDef&& from) noexcept
    : FftsPlusAtStartCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusAtStartCtxDef& operator=(const FftsPlusAtStartCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusAtStartCtxDef& operator=(FftsPlusAtStartCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusAtStartCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusAtStartCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusAtStartCtxDef*>(
               &_FftsPlusAtStartCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(FftsPlusAtStartCtxDef& a, FftsPlusAtStartCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusAtStartCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusAtStartCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusAtStartCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusAtStartCtxDef>(nullptr);
  }

  FftsPlusAtStartCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusAtStartCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusAtStartCtxDef& from);
  void MergeFrom(const FftsPlusAtStartCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusAtStartCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusAtStartCtxDef";
  }
  protected:
  explicit FftsPlusAtStartCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 5,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kPredCntInitFieldNumber = 3,
    kPredCntFieldNumber = 4,
    kThreadIdFieldNumber = 6,
    kThreadDimFieldNumber = 7,
    kThreadIdInitFieldNumber = 8,
    kThreadWindowSizeFieldNumber = 9,
  };
  // repeated uint32 successor_list = 5;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 3;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 4;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 6;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 7;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id_init = 8;
  void clear_thread_id_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_init() const;
  void set_thread_id_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id_init() const;
  void _internal_set_thread_id_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_window_size = 9;
  void clear_thread_window_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_window_size() const;
  void set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_window_size() const;
  void _internal_set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusAtStartCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_window_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusAtEndCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusAtEndCtxDef) */ {
 public:
  inline FftsPlusAtEndCtxDef() : FftsPlusAtEndCtxDef(nullptr) {}
  virtual ~FftsPlusAtEndCtxDef();

  FftsPlusAtEndCtxDef(const FftsPlusAtEndCtxDef& from);
  FftsPlusAtEndCtxDef(FftsPlusAtEndCtxDef&& from) noexcept
    : FftsPlusAtEndCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusAtEndCtxDef& operator=(const FftsPlusAtEndCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusAtEndCtxDef& operator=(FftsPlusAtEndCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusAtEndCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusAtEndCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusAtEndCtxDef*>(
               &_FftsPlusAtEndCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(FftsPlusAtEndCtxDef& a, FftsPlusAtEndCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusAtEndCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusAtEndCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusAtEndCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusAtEndCtxDef>(nullptr);
  }

  FftsPlusAtEndCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusAtEndCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusAtEndCtxDef& from);
  void MergeFrom(const FftsPlusAtEndCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusAtEndCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusAtEndCtxDef";
  }
  protected:
  explicit FftsPlusAtEndCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccAtStartSlotFieldNumber = 6,
    kSuccOutLabelSlotFieldNumber = 7,
    kAtStartSlotNumFieldNumber = 1,
    kOutLabelSlotNumFieldNumber = 2,
    kAtenFieldNumber = 3,
    kPredCntInitFieldNumber = 4,
    kPredCntFieldNumber = 5,
    kThreadIdFieldNumber = 8,
  };
  // repeated uint32 succ_at_start_slot = 6;
  int succ_at_start_slot_size() const;
  private:
  int _internal_succ_at_start_slot_size() const;
  public:
  void clear_succ_at_start_slot();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_succ_at_start_slot(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_succ_at_start_slot() const;
  void _internal_add_succ_at_start_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_succ_at_start_slot();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 succ_at_start_slot(int index) const;
  void set_succ_at_start_slot(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_succ_at_start_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      succ_at_start_slot() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_succ_at_start_slot();

  // repeated uint32 succ_out_label_slot = 7;
  int succ_out_label_slot_size() const;
  private:
  int _internal_succ_out_label_slot_size() const;
  public:
  void clear_succ_out_label_slot();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_succ_out_label_slot(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_succ_out_label_slot() const;
  void _internal_add_succ_out_label_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_succ_out_label_slot();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 succ_out_label_slot(int index) const;
  void set_succ_out_label_slot(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_succ_out_label_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      succ_out_label_slot() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_succ_out_label_slot();

  // uint32 at_start_slot_num = 1;
  void clear_at_start_slot_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 at_start_slot_num() const;
  void set_at_start_slot_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_at_start_slot_num() const;
  void _internal_set_at_start_slot_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 out_label_slot_num = 2;
  void clear_out_label_slot_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 out_label_slot_num() const;
  void set_out_label_slot_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_out_label_slot_num() const;
  void _internal_set_out_label_slot_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 3;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 4;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 5;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 8;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusAtEndCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > succ_at_start_slot_;
  mutable std::atomic<int> _succ_at_start_slot_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > succ_out_label_slot_;
  mutable std::atomic<int> _succ_out_label_slot_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 at_start_slot_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 out_label_slot_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusLabelCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusLabelCtxDef) */ {
 public:
  inline FftsPlusLabelCtxDef() : FftsPlusLabelCtxDef(nullptr) {}
  virtual ~FftsPlusLabelCtxDef();

  FftsPlusLabelCtxDef(const FftsPlusLabelCtxDef& from);
  FftsPlusLabelCtxDef(FftsPlusLabelCtxDef&& from) noexcept
    : FftsPlusLabelCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusLabelCtxDef& operator=(const FftsPlusLabelCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusLabelCtxDef& operator=(FftsPlusLabelCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusLabelCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusLabelCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusLabelCtxDef*>(
               &_FftsPlusLabelCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(FftsPlusLabelCtxDef& a, FftsPlusLabelCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusLabelCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusLabelCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusLabelCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusLabelCtxDef>(nullptr);
  }

  FftsPlusLabelCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusLabelCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusLabelCtxDef& from);
  void MergeFrom(const FftsPlusLabelCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusLabelCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusLabelCtxDef";
  }
  protected:
  explicit FftsPlusLabelCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 4,
    kSuccessorNumFieldNumber = 1,
    kPredCntInitFieldNumber = 2,
    kPredCntFieldNumber = 3,
  };
  // repeated uint32 successor_list = 4;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 2;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 3;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusLabelCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusCaseSwitchCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusCaseSwitchCtxDef) */ {
 public:
  inline FftsPlusCaseSwitchCtxDef() : FftsPlusCaseSwitchCtxDef(nullptr) {}
  virtual ~FftsPlusCaseSwitchCtxDef();

  FftsPlusCaseSwitchCtxDef(const FftsPlusCaseSwitchCtxDef& from);
  FftsPlusCaseSwitchCtxDef(FftsPlusCaseSwitchCtxDef&& from) noexcept
    : FftsPlusCaseSwitchCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusCaseSwitchCtxDef& operator=(const FftsPlusCaseSwitchCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusCaseSwitchCtxDef& operator=(FftsPlusCaseSwitchCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusCaseSwitchCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusCaseSwitchCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusCaseSwitchCtxDef*>(
               &_FftsPlusCaseSwitchCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(FftsPlusCaseSwitchCtxDef& a, FftsPlusCaseSwitchCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusCaseSwitchCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusCaseSwitchCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusCaseSwitchCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusCaseSwitchCtxDef>(nullptr);
  }

  FftsPlusCaseSwitchCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusCaseSwitchCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusCaseSwitchCtxDef& from);
  void MergeFrom(const FftsPlusCaseSwitchCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusCaseSwitchCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusCaseSwitchCtxDef";
  }
  protected:
  explicit FftsPlusCaseSwitchCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 7,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kStartLabelIdFieldNumber = 3,
    kLabelListLenFieldNumber = 4,
    kPredCntInitFieldNumber = 5,
    kPredCntFieldNumber = 6,
    kAtmFieldNumber = 8,
    kThreadIdFieldNumber = 9,
    kThreadDimFieldNumber = 10,
    kArSizeFieldNumber = 11,
    kSnoopFieldNumber = 12,
    kArCacheFieldNumber = 13,
    kArProtFieldNumber = 14,
    kVaFieldNumber = 15,
    kLoadAddr0BaseFieldNumber = 16,
    kLd0EnFieldNumber = 17,
    kLoadAddr0OffsetFieldNumber = 18,
    kLoadAddr1BaseFieldNumber = 19,
    kLd1EnFieldNumber = 20,
    kLoadAddr1OffsetFieldNumber = 21,
  };
  // repeated uint32 successor_list = 7;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 start_label_id = 3;
  void clear_start_label_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_label_id() const;
  void set_start_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_label_id() const;
  void _internal_set_start_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 label_list_len = 4;
  void clear_label_list_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 label_list_len() const;
  void set_label_list_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_label_list_len() const;
  void _internal_set_label_list_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 5;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 6;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 8;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 9;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 10;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_size = 11;
  void clear_ar_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_size() const;
  void set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_size() const;
  void _internal_set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 snoop = 12;
  void clear_snoop();
  ::PROTOBUF_NAMESPACE_ID::uint32 snoop() const;
  void set_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_snoop() const;
  void _internal_set_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_cache = 13;
  void clear_ar_cache();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_cache() const;
  void set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_cache() const;
  void _internal_set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_prot = 14;
  void clear_ar_prot();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_prot() const;
  void set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_prot() const;
  void _internal_set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 va = 15;
  void clear_va();
  ::PROTOBUF_NAMESPACE_ID::uint32 va() const;
  void set_va(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_va() const;
  void _internal_set_va(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 load_addr0_base = 16;
  void clear_load_addr0_base();
  ::PROTOBUF_NAMESPACE_ID::uint64 load_addr0_base() const;
  void set_load_addr0_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_load_addr0_base() const;
  void _internal_set_load_addr0_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ld0_en = 17;
  void clear_ld0_en();
  ::PROTOBUF_NAMESPACE_ID::uint32 ld0_en() const;
  void set_ld0_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ld0_en() const;
  void _internal_set_ld0_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 load_addr0_offset = 18;
  void clear_load_addr0_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 load_addr0_offset() const;
  void set_load_addr0_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_load_addr0_offset() const;
  void _internal_set_load_addr0_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 load_addr1_base = 19;
  void clear_load_addr1_base();
  ::PROTOBUF_NAMESPACE_ID::uint64 load_addr1_base() const;
  void set_load_addr1_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_load_addr1_base() const;
  void _internal_set_load_addr1_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ld1_en = 20;
  void clear_ld1_en();
  ::PROTOBUF_NAMESPACE_ID::uint32 ld1_en() const;
  void set_ld1_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ld1_en() const;
  void _internal_set_ld1_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 load_addr1_offset = 21;
  void clear_load_addr1_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 load_addr1_offset() const;
  void set_load_addr1_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_load_addr1_offset() const;
  void _internal_set_load_addr1_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusCaseSwitchCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_label_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 label_list_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 snoop_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_cache_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_prot_;
  ::PROTOBUF_NAMESPACE_ID::uint32 va_;
  ::PROTOBUF_NAMESPACE_ID::uint64 load_addr0_base_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ld0_en_;
  ::PROTOBUF_NAMESPACE_ID::uint32 load_addr0_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint64 load_addr1_base_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ld1_en_;
  ::PROTOBUF_NAMESPACE_ID::uint32 load_addr1_offset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusCaseDefaultCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusCaseDefaultCtxDef) */ {
 public:
  inline FftsPlusCaseDefaultCtxDef() : FftsPlusCaseDefaultCtxDef(nullptr) {}
  virtual ~FftsPlusCaseDefaultCtxDef();

  FftsPlusCaseDefaultCtxDef(const FftsPlusCaseDefaultCtxDef& from);
  FftsPlusCaseDefaultCtxDef(FftsPlusCaseDefaultCtxDef&& from) noexcept
    : FftsPlusCaseDefaultCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusCaseDefaultCtxDef& operator=(const FftsPlusCaseDefaultCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusCaseDefaultCtxDef& operator=(FftsPlusCaseDefaultCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusCaseDefaultCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusCaseDefaultCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusCaseDefaultCtxDef*>(
               &_FftsPlusCaseDefaultCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(FftsPlusCaseDefaultCtxDef& a, FftsPlusCaseDefaultCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusCaseDefaultCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusCaseDefaultCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusCaseDefaultCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusCaseDefaultCtxDef>(nullptr);
  }

  FftsPlusCaseDefaultCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusCaseDefaultCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusCaseDefaultCtxDef& from);
  void MergeFrom(const FftsPlusCaseDefaultCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusCaseDefaultCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusCaseDefaultCtxDef";
  }
  protected:
  explicit FftsPlusCaseDefaultCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 7,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kStartLabelIdFieldNumber = 3,
    kLabelListLenFieldNumber = 4,
    kPredCntInitFieldNumber = 5,
    kPredCntFieldNumber = 6,
  };
  // repeated uint32 successor_list = 7;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 start_label_id = 3;
  void clear_start_label_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_label_id() const;
  void set_start_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_label_id() const;
  void _internal_set_start_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 label_list_len = 4;
  void clear_label_list_len();
  ::PROTOBUF_NAMESPACE_ID::uint32 label_list_len() const;
  void set_label_list_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_label_list_len() const;
  void _internal_set_label_list_len(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 5;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 6;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusCaseDefaultCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_label_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 label_list_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusCondSwitchCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusCondSwitchCtxDef) */ {
 public:
  inline FftsPlusCondSwitchCtxDef() : FftsPlusCondSwitchCtxDef(nullptr) {}
  virtual ~FftsPlusCondSwitchCtxDef();

  FftsPlusCondSwitchCtxDef(const FftsPlusCondSwitchCtxDef& from);
  FftsPlusCondSwitchCtxDef(FftsPlusCondSwitchCtxDef&& from) noexcept
    : FftsPlusCondSwitchCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusCondSwitchCtxDef& operator=(const FftsPlusCondSwitchCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusCondSwitchCtxDef& operator=(FftsPlusCondSwitchCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusCondSwitchCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusCondSwitchCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusCondSwitchCtxDef*>(
               &_FftsPlusCondSwitchCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(FftsPlusCondSwitchCtxDef& a, FftsPlusCondSwitchCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusCondSwitchCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusCondSwitchCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusCondSwitchCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusCondSwitchCtxDef>(nullptr);
  }

  FftsPlusCondSwitchCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusCondSwitchCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusCondSwitchCtxDef& from);
  void MergeFrom(const FftsPlusCondSwitchCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusCondSwitchCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusCondSwitchCtxDef";
  }
  protected:
  explicit FftsPlusCondSwitchCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrueSuccessorListFieldNumber = 7,
    kFalseSuccessorListFieldNumber = 8,
    kTrueSuccessorNumFieldNumber = 1,
    kFalseSuccessorNumFieldNumber = 2,
    kAtenFieldNumber = 3,
    kConditionFieldNumber = 4,
    kPredCntInitFieldNumber = 5,
    kPredCntFieldNumber = 6,
    kAtmFieldNumber = 9,
    kThreadIdFieldNumber = 10,
    kThreadDimFieldNumber = 11,
    kArSizeFieldNumber = 12,
    kSnoopFieldNumber = 13,
    kArCacheFieldNumber = 14,
    kArProtFieldNumber = 15,
    kVaFieldNumber = 16,
    kLoadAddr0BaseFieldNumber = 17,
    kLd0EnFieldNumber = 18,
    kLoadAddr0OffsetFieldNumber = 19,
    kLoadAddr1BaseFieldNumber = 20,
    kLd1EnFieldNumber = 21,
    kLoadAddr1OffsetFieldNumber = 22,
    kCmpValue1FieldNumber = 23,
    kCmpValue2FieldNumber = 24,
  };
  // repeated uint32 true_successor_list = 7;
  int true_successor_list_size() const;
  private:
  int _internal_true_successor_list_size() const;
  public:
  void clear_true_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_true_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_true_successor_list() const;
  void _internal_add_true_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_true_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 true_successor_list(int index) const;
  void set_true_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_true_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      true_successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_true_successor_list();

  // repeated uint32 false_successor_list = 8;
  int false_successor_list_size() const;
  private:
  int _internal_false_successor_list_size() const;
  public:
  void clear_false_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_false_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_false_successor_list() const;
  void _internal_add_false_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_false_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 false_successor_list(int index) const;
  void set_false_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_false_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      false_successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_false_successor_list();

  // uint32 true_successor_num = 1;
  void clear_true_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 true_successor_num() const;
  void set_true_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_true_successor_num() const;
  void _internal_set_true_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 false_successor_num = 2;
  void clear_false_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 false_successor_num() const;
  void set_false_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_false_successor_num() const;
  void _internal_set_false_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 3;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 condition = 4;
  void clear_condition();
  ::PROTOBUF_NAMESPACE_ID::uint32 condition() const;
  void set_condition(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_condition() const;
  void _internal_set_condition(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 5;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 6;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 9;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 10;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 11;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_size = 12;
  void clear_ar_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_size() const;
  void set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_size() const;
  void _internal_set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 snoop = 13;
  void clear_snoop();
  ::PROTOBUF_NAMESPACE_ID::uint32 snoop() const;
  void set_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_snoop() const;
  void _internal_set_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_cache = 14;
  void clear_ar_cache();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_cache() const;
  void set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_cache() const;
  void _internal_set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ar_prot = 15;
  void clear_ar_prot();
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_prot() const;
  void set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ar_prot() const;
  void _internal_set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 va = 16;
  void clear_va();
  ::PROTOBUF_NAMESPACE_ID::uint32 va() const;
  void set_va(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_va() const;
  void _internal_set_va(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 load_addr0_base = 17;
  void clear_load_addr0_base();
  ::PROTOBUF_NAMESPACE_ID::uint64 load_addr0_base() const;
  void set_load_addr0_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_load_addr0_base() const;
  void _internal_set_load_addr0_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ld0_en = 18;
  void clear_ld0_en();
  ::PROTOBUF_NAMESPACE_ID::uint32 ld0_en() const;
  void set_ld0_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ld0_en() const;
  void _internal_set_ld0_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 load_addr0_offset = 19;
  void clear_load_addr0_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 load_addr0_offset() const;
  void set_load_addr0_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_load_addr0_offset() const;
  void _internal_set_load_addr0_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 load_addr1_base = 20;
  void clear_load_addr1_base();
  ::PROTOBUF_NAMESPACE_ID::uint64 load_addr1_base() const;
  void set_load_addr1_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_load_addr1_base() const;
  void _internal_set_load_addr1_base(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ld1_en = 21;
  void clear_ld1_en();
  ::PROTOBUF_NAMESPACE_ID::uint32 ld1_en() const;
  void set_ld1_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ld1_en() const;
  void _internal_set_ld1_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 load_addr1_offset = 22;
  void clear_load_addr1_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 load_addr1_offset() const;
  void set_load_addr1_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_load_addr1_offset() const;
  void _internal_set_load_addr1_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cmp_value_1 = 23;
  void clear_cmp_value_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmp_value_1() const;
  void set_cmp_value_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmp_value_1() const;
  void _internal_set_cmp_value_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cmp_value_2 = 24;
  void clear_cmp_value_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmp_value_2() const;
  void set_cmp_value_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmp_value_2() const;
  void _internal_set_cmp_value_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusCondSwitchCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > true_successor_list_;
  mutable std::atomic<int> _true_successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > false_successor_list_;
  mutable std::atomic<int> _false_successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 true_successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 false_successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 condition_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 snoop_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_cache_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ar_prot_;
  ::PROTOBUF_NAMESPACE_ID::uint32 va_;
  ::PROTOBUF_NAMESPACE_ID::uint64 load_addr0_base_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ld0_en_;
  ::PROTOBUF_NAMESPACE_ID::uint32 load_addr0_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint64 load_addr1_base_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ld1_en_;
  ::PROTOBUF_NAMESPACE_ID::uint32 load_addr1_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmp_value_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmp_value_2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusCachePersistCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusCachePersistCtxDef) */ {
 public:
  inline FftsPlusCachePersistCtxDef() : FftsPlusCachePersistCtxDef(nullptr) {}
  virtual ~FftsPlusCachePersistCtxDef();

  FftsPlusCachePersistCtxDef(const FftsPlusCachePersistCtxDef& from);
  FftsPlusCachePersistCtxDef(FftsPlusCachePersistCtxDef&& from) noexcept
    : FftsPlusCachePersistCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusCachePersistCtxDef& operator=(const FftsPlusCachePersistCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusCachePersistCtxDef& operator=(FftsPlusCachePersistCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusCachePersistCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusCachePersistCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusCachePersistCtxDef*>(
               &_FftsPlusCachePersistCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(FftsPlusCachePersistCtxDef& a, FftsPlusCachePersistCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusCachePersistCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusCachePersistCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusCachePersistCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusCachePersistCtxDef>(nullptr);
  }

  FftsPlusCachePersistCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusCachePersistCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusCachePersistCtxDef& from);
  void MergeFrom(const FftsPlusCachePersistCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusCachePersistCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusCachePersistCtxDef";
  }
  protected:
  explicit FftsPlusCachePersistCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 6,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kPrefetchConfigFieldNumber = 3,
    kPredCntInitFieldNumber = 4,
    kPredCntFieldNumber = 5,
    kPersistentSizeFieldNumber = 7,
    kPersistentEnFieldNumber = 8,
    kPersistentIdFieldNumber = 9,
  };
  // repeated uint32 successor_list = 6;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prefetch_config = 3;
  void clear_prefetch_config();
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_config() const;
  void set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prefetch_config() const;
  void _internal_set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 4;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 5;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 persistent_size = 7;
  void clear_persistent_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 persistent_size() const;
  void set_persistent_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_persistent_size() const;
  void _internal_set_persistent_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 persistent_en = 8;
  void clear_persistent_en();
  ::PROTOBUF_NAMESPACE_ID::uint32 persistent_en() const;
  void set_persistent_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_persistent_en() const;
  void _internal_set_persistent_en(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 persistent_id = 9;
  void clear_persistent_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 persistent_id() const;
  void set_persistent_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_persistent_id() const;
  void _internal_set_persistent_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusCachePersistCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prefetch_config_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 persistent_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 persistent_en_;
  ::PROTOBUF_NAMESPACE_ID::uint32 persistent_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class FftsPlusDsaCtxDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.FftsPlusDsaCtxDef) */ {
 public:
  inline FftsPlusDsaCtxDef() : FftsPlusDsaCtxDef(nullptr) {}
  virtual ~FftsPlusDsaCtxDef();

  FftsPlusDsaCtxDef(const FftsPlusDsaCtxDef& from);
  FftsPlusDsaCtxDef(FftsPlusDsaCtxDef&& from) noexcept
    : FftsPlusDsaCtxDef() {
    *this = ::std::move(from);
  }

  inline FftsPlusDsaCtxDef& operator=(const FftsPlusDsaCtxDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FftsPlusDsaCtxDef& operator=(FftsPlusDsaCtxDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FftsPlusDsaCtxDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FftsPlusDsaCtxDef* internal_default_instance() {
    return reinterpret_cast<const FftsPlusDsaCtxDef*>(
               &_FftsPlusDsaCtxDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(FftsPlusDsaCtxDef& a, FftsPlusDsaCtxDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FftsPlusDsaCtxDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FftsPlusDsaCtxDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FftsPlusDsaCtxDef* New() const final {
    return CreateMaybeMessage<FftsPlusDsaCtxDef>(nullptr);
  }

  FftsPlusDsaCtxDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FftsPlusDsaCtxDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FftsPlusDsaCtxDef& from);
  void MergeFrom(const FftsPlusDsaCtxDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FftsPlusDsaCtxDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.FftsPlusDsaCtxDef";
  }
  protected:
  explicit FftsPlusDsaCtxDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessorListFieldNumber = 5,
    kArgsFieldNumber = 20,
    kSuccessorNumFieldNumber = 1,
    kAtenFieldNumber = 2,
    kPredCntInitFieldNumber = 3,
    kPredCntFieldNumber = 4,
    kAtmFieldNumber = 6,
    kAddressOffsetFieldNumber = 7,
    kThreadIdFieldNumber = 8,
    kThreadDimFieldNumber = 9,
    kStartFieldNumber = 10,
    kDistributionTypeFieldNumber = 11,
    kDataTypeFieldNumber = 12,
    kAlgTypeFieldNumber = 13,
    kInputVldFieldNumber = 14,
    kInputValueAddrFlagFieldNumber = 15,
    kInput1ValueOrPtrFieldNumber = 16,
    kInput2ValueOrPtrFieldNumber = 17,
    kSeedValueOrPtrFieldNumber = 18,
    kRandomCountValueOrPtrFieldNumber = 19,
  };
  // repeated uint32 successor_list = 5;
  int successor_list_size() const;
  private:
  int _internal_successor_list_size() const;
  public:
  void clear_successor_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_successor_list() const;
  void _internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_successor_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_list(int index) const;
  void set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      successor_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_successor_list();

  // .domi.DSATaskArgsDef args = 20;
  bool has_args() const;
  private:
  bool _internal_has_args() const;
  public:
  void clear_args();
  const ::domi::DSATaskArgsDef& args() const;
  ::domi::DSATaskArgsDef* release_args();
  ::domi::DSATaskArgsDef* mutable_args();
  void set_allocated_args(::domi::DSATaskArgsDef* args);
  private:
  const ::domi::DSATaskArgsDef& _internal_args() const;
  ::domi::DSATaskArgsDef* _internal_mutable_args();
  public:
  void unsafe_arena_set_allocated_args(
      ::domi::DSATaskArgsDef* args);
  ::domi::DSATaskArgsDef* unsafe_arena_release_args();

  // uint32 successor_num = 1;
  void clear_successor_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num() const;
  void set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_successor_num() const;
  void _internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 aten = 2;
  void clear_aten();
  ::PROTOBUF_NAMESPACE_ID::uint32 aten() const;
  void set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_aten() const;
  void _internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt_init = 3;
  void clear_pred_cnt_init();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init() const;
  void set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt_init() const;
  void _internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pred_cnt = 4;
  void clear_pred_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt() const;
  void set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pred_cnt() const;
  void _internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 atm = 6;
  void clear_atm();
  ::PROTOBUF_NAMESPACE_ID::uint32 atm() const;
  void set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atm() const;
  void _internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 address_offset = 7;
  void clear_address_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 address_offset() const;
  void set_address_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_address_offset() const;
  void _internal_set_address_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_id = 8;
  void clear_thread_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id() const;
  void set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_id() const;
  void _internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 thread_dim = 9;
  void clear_thread_dim();
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim() const;
  void set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_thread_dim() const;
  void _internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 start = 10;
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::uint32 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start() const;
  void _internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 distribution_type = 11;
  void clear_distribution_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 distribution_type() const;
  void set_distribution_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_distribution_type() const;
  void _internal_set_distribution_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_type = 12;
  void clear_data_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type() const;
  void set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_type() const;
  void _internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 alg_type = 13;
  void clear_alg_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 alg_type() const;
  void set_alg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_alg_type() const;
  void _internal_set_alg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input_vld = 14;
  void clear_input_vld();
  ::PROTOBUF_NAMESPACE_ID::uint32 input_vld() const;
  void set_input_vld(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_vld() const;
  void _internal_set_input_vld(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input_value_addr_flag = 15;
  void clear_input_value_addr_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 input_value_addr_flag() const;
  void set_input_value_addr_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input_value_addr_flag() const;
  void _internal_set_input_value_addr_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input1_value_or_ptr = 16;
  void clear_input1_value_or_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint32 input1_value_or_ptr() const;
  void set_input1_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input1_value_or_ptr() const;
  void _internal_set_input1_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 input2_value_or_ptr = 17;
  void clear_input2_value_or_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint32 input2_value_or_ptr() const;
  void set_input2_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_input2_value_or_ptr() const;
  void _internal_set_input2_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seed_value_or_ptr = 18;
  void clear_seed_value_or_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint32 seed_value_or_ptr() const;
  void set_seed_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seed_value_or_ptr() const;
  void _internal_set_seed_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 random_count_value_or_ptr = 19;
  void clear_random_count_value_or_ptr();
  ::PROTOBUF_NAMESPACE_ID::uint32 random_count_value_or_ptr() const;
  void set_random_count_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_random_count_value_or_ptr() const;
  void _internal_set_random_count_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.FftsPlusDsaCtxDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > successor_list_;
  mutable std::atomic<int> _successor_list_cached_byte_size_;
  ::domi::DSATaskArgsDef* args_;
  ::PROTOBUF_NAMESPACE_ID::uint32 successor_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 aten_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_init_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pred_cnt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 address_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 thread_dim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_;
  ::PROTOBUF_NAMESPACE_ID::uint32 distribution_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 alg_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input_vld_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input_value_addr_flag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input1_value_or_ptr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input2_value_or_ptr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seed_value_or_ptr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 random_count_value_or_ptr_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class CmoTaskDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.CmoTaskDef) */ {
 public:
  inline CmoTaskDef() : CmoTaskDef(nullptr) {}
  virtual ~CmoTaskDef();

  CmoTaskDef(const CmoTaskDef& from);
  CmoTaskDef(CmoTaskDef&& from) noexcept
    : CmoTaskDef() {
    *this = ::std::move(from);
  }

  inline CmoTaskDef& operator=(const CmoTaskDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline CmoTaskDef& operator=(CmoTaskDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CmoTaskDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CmoTaskDef* internal_default_instance() {
    return reinterpret_cast<const CmoTaskDef*>(
               &_CmoTaskDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CmoTaskDef& a, CmoTaskDef& b) {
    a.Swap(&b);
  }
  inline void Swap(CmoTaskDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CmoTaskDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CmoTaskDef* New() const final {
    return CreateMaybeMessage<CmoTaskDef>(nullptr);
  }

  CmoTaskDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CmoTaskDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CmoTaskDef& from);
  void MergeFrom(const CmoTaskDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CmoTaskDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.CmoTaskDef";
  }
  protected:
  explicit CmoTaskDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmoTypeFieldNumber = 1,
    kLogicIdFieldNumber = 2,
    kOpCodeFieldNumber = 3,
    kQosFieldNumber = 4,
    kPartIdFieldNumber = 5,
    kPmgFieldNumber = 6,
    kNumInnerFieldNumber = 7,
    kNumOuterFieldNumber = 8,
    kSourceAddrFieldNumber = 10,
    kLengthInnerFieldNumber = 9,
    kStriderOuterFieldNumber = 11,
    kStriderInnerFieldNumber = 12,
  };
  // uint32 cmo_type = 1;
  void clear_cmo_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmo_type() const;
  void set_cmo_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmo_type() const;
  void _internal_set_cmo_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 logic_id = 2;
  void clear_logic_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 logic_id() const;
  void set_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_logic_id() const;
  void _internal_set_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 op_code = 3;
  void clear_op_code();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_code() const;
  void set_op_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_code() const;
  void _internal_set_op_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 qos = 4;
  void clear_qos();
  ::PROTOBUF_NAMESPACE_ID::uint32 qos() const;
  void set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_qos() const;
  void _internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 part_id = 5;
  void clear_part_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id() const;
  void set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_part_id() const;
  void _internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pmg = 6;
  void clear_pmg();
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg() const;
  void set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pmg() const;
  void _internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 num_inner = 7;
  void clear_num_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_inner() const;
  void set_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_inner() const;
  void _internal_set_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 num_outer = 8;
  void clear_num_outer();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_outer() const;
  void set_num_outer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_outer() const;
  void _internal_set_num_outer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 source_addr = 10;
  void clear_source_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 source_addr() const;
  void set_source_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_source_addr() const;
  void _internal_set_source_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 length_inner = 9;
  void clear_length_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 length_inner() const;
  void set_length_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_length_inner() const;
  void _internal_set_length_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 strider_outer = 11;
  void clear_strider_outer();
  ::PROTOBUF_NAMESPACE_ID::uint32 strider_outer() const;
  void set_strider_outer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_strider_outer() const;
  void _internal_set_strider_outer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 strider_inner = 12;
  void clear_strider_inner();
  ::PROTOBUF_NAMESPACE_ID::uint32 strider_inner() const;
  void set_strider_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_strider_inner() const;
  void _internal_set_strider_inner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.CmoTaskDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmo_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 logic_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 part_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pmg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_inner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_outer_;
  ::PROTOBUF_NAMESPACE_ID::uint64 source_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 length_inner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 strider_outer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 strider_inner_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class CmoBarrierTaskDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.CmoBarrierTaskDef) */ {
 public:
  inline CmoBarrierTaskDef() : CmoBarrierTaskDef(nullptr) {}
  virtual ~CmoBarrierTaskDef();

  CmoBarrierTaskDef(const CmoBarrierTaskDef& from);
  CmoBarrierTaskDef(CmoBarrierTaskDef&& from) noexcept
    : CmoBarrierTaskDef() {
    *this = ::std::move(from);
  }

  inline CmoBarrierTaskDef& operator=(const CmoBarrierTaskDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline CmoBarrierTaskDef& operator=(CmoBarrierTaskDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CmoBarrierTaskDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CmoBarrierTaskDef* internal_default_instance() {
    return reinterpret_cast<const CmoBarrierTaskDef*>(
               &_CmoBarrierTaskDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CmoBarrierTaskDef& a, CmoBarrierTaskDef& b) {
    a.Swap(&b);
  }
  inline void Swap(CmoBarrierTaskDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CmoBarrierTaskDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CmoBarrierTaskDef* New() const final {
    return CreateMaybeMessage<CmoBarrierTaskDef>(nullptr);
  }

  CmoBarrierTaskDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CmoBarrierTaskDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CmoBarrierTaskDef& from);
  void MergeFrom(const CmoBarrierTaskDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CmoBarrierTaskDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.CmoBarrierTaskDef";
  }
  protected:
  explicit CmoBarrierTaskDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBarrierInfoFieldNumber = 2,
    kLogicIdNumFieldNumber = 1,
  };
  // repeated .domi.CmoBarrierInfoDef barrier_info = 2;
  int barrier_info_size() const;
  private:
  int _internal_barrier_info_size() const;
  public:
  void clear_barrier_info();
  ::domi::CmoBarrierInfoDef* mutable_barrier_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::CmoBarrierInfoDef >*
      mutable_barrier_info();
  private:
  const ::domi::CmoBarrierInfoDef& _internal_barrier_info(int index) const;
  ::domi::CmoBarrierInfoDef* _internal_add_barrier_info();
  public:
  const ::domi::CmoBarrierInfoDef& barrier_info(int index) const;
  ::domi::CmoBarrierInfoDef* add_barrier_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::CmoBarrierInfoDef >&
      barrier_info() const;

  // uint32 logic_id_num = 1;
  void clear_logic_id_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 logic_id_num() const;
  void set_logic_id_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_logic_id_num() const;
  void _internal_set_logic_id_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.CmoBarrierTaskDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::CmoBarrierInfoDef > barrier_info_;
  ::PROTOBUF_NAMESPACE_ID::uint32 logic_id_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class CmoBarrierInfoDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.CmoBarrierInfoDef) */ {
 public:
  inline CmoBarrierInfoDef() : CmoBarrierInfoDef(nullptr) {}
  virtual ~CmoBarrierInfoDef();

  CmoBarrierInfoDef(const CmoBarrierInfoDef& from);
  CmoBarrierInfoDef(CmoBarrierInfoDef&& from) noexcept
    : CmoBarrierInfoDef() {
    *this = ::std::move(from);
  }

  inline CmoBarrierInfoDef& operator=(const CmoBarrierInfoDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline CmoBarrierInfoDef& operator=(CmoBarrierInfoDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CmoBarrierInfoDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CmoBarrierInfoDef* internal_default_instance() {
    return reinterpret_cast<const CmoBarrierInfoDef*>(
               &_CmoBarrierInfoDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CmoBarrierInfoDef& a, CmoBarrierInfoDef& b) {
    a.Swap(&b);
  }
  inline void Swap(CmoBarrierInfoDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CmoBarrierInfoDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CmoBarrierInfoDef* New() const final {
    return CreateMaybeMessage<CmoBarrierInfoDef>(nullptr);
  }

  CmoBarrierInfoDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CmoBarrierInfoDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CmoBarrierInfoDef& from);
  void MergeFrom(const CmoBarrierInfoDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CmoBarrierInfoDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.CmoBarrierInfoDef";
  }
  protected:
  explicit CmoBarrierInfoDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmoTypeFieldNumber = 1,
    kLogicIdFieldNumber = 2,
  };
  // uint32 cmo_type = 1;
  void clear_cmo_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmo_type() const;
  void set_cmo_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cmo_type() const;
  void _internal_set_cmo_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 logic_id = 2;
  void clear_logic_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 logic_id() const;
  void set_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_logic_id() const;
  void _internal_set_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.CmoBarrierInfoDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmo_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 logic_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class NpuGetFloatStatusDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.NpuGetFloatStatusDef) */ {
 public:
  inline NpuGetFloatStatusDef() : NpuGetFloatStatusDef(nullptr) {}
  virtual ~NpuGetFloatStatusDef();

  NpuGetFloatStatusDef(const NpuGetFloatStatusDef& from);
  NpuGetFloatStatusDef(NpuGetFloatStatusDef&& from) noexcept
    : NpuGetFloatStatusDef() {
    *this = ::std::move(from);
  }

  inline NpuGetFloatStatusDef& operator=(const NpuGetFloatStatusDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline NpuGetFloatStatusDef& operator=(NpuGetFloatStatusDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NpuGetFloatStatusDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NpuGetFloatStatusDef* internal_default_instance() {
    return reinterpret_cast<const NpuGetFloatStatusDef*>(
               &_NpuGetFloatStatusDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(NpuGetFloatStatusDef& a, NpuGetFloatStatusDef& b) {
    a.Swap(&b);
  }
  inline void Swap(NpuGetFloatStatusDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NpuGetFloatStatusDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NpuGetFloatStatusDef* New() const final {
    return CreateMaybeMessage<NpuGetFloatStatusDef>(nullptr);
  }

  NpuGetFloatStatusDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NpuGetFloatStatusDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NpuGetFloatStatusDef& from);
  void MergeFrom(const NpuGetFloatStatusDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NpuGetFloatStatusDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.NpuGetFloatStatusDef";
  }
  protected:
  explicit NpuGetFloatStatusDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutputAddrFieldNumber = 1,
    kOutputSizeFieldNumber = 2,
    kModeFieldNumber = 3,
    kOpIndexFieldNumber = 4,
  };
  // uint64 output_addr = 1;
  void clear_output_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 output_addr() const;
  void set_output_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_output_addr() const;
  void _internal_set_output_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 output_size = 2;
  void clear_output_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 output_size() const;
  void set_output_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_output_size() const;
  void _internal_set_output_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 mode = 3;
  void clear_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 mode() const;
  void set_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mode() const;
  void _internal_set_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 op_index = 4;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.NpuGetFloatStatusDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 output_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 output_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class NpuClearFloatStatusDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.NpuClearFloatStatusDef) */ {
 public:
  inline NpuClearFloatStatusDef() : NpuClearFloatStatusDef(nullptr) {}
  virtual ~NpuClearFloatStatusDef();

  NpuClearFloatStatusDef(const NpuClearFloatStatusDef& from);
  NpuClearFloatStatusDef(NpuClearFloatStatusDef&& from) noexcept
    : NpuClearFloatStatusDef() {
    *this = ::std::move(from);
  }

  inline NpuClearFloatStatusDef& operator=(const NpuClearFloatStatusDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline NpuClearFloatStatusDef& operator=(NpuClearFloatStatusDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NpuClearFloatStatusDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NpuClearFloatStatusDef* internal_default_instance() {
    return reinterpret_cast<const NpuClearFloatStatusDef*>(
               &_NpuClearFloatStatusDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(NpuClearFloatStatusDef& a, NpuClearFloatStatusDef& b) {
    a.Swap(&b);
  }
  inline void Swap(NpuClearFloatStatusDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NpuClearFloatStatusDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NpuClearFloatStatusDef* New() const final {
    return CreateMaybeMessage<NpuClearFloatStatusDef>(nullptr);
  }

  NpuClearFloatStatusDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NpuClearFloatStatusDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NpuClearFloatStatusDef& from);
  void MergeFrom(const NpuClearFloatStatusDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NpuClearFloatStatusDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.NpuClearFloatStatusDef";
  }
  protected:
  explicit NpuClearFloatStatusDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModeFieldNumber = 1,
    kOpIndexFieldNumber = 2,
  };
  // uint32 mode = 1;
  void clear_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 mode() const;
  void set_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mode() const;
  void _internal_set_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 op_index = 2;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.NpuClearFloatStatusDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// -------------------------------------------------------------------

class DvppTaskDef PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:domi.DvppTaskDef) */ {
 public:
  inline DvppTaskDef() : DvppTaskDef(nullptr) {}
  virtual ~DvppTaskDef();

  DvppTaskDef(const DvppTaskDef& from);
  DvppTaskDef(DvppTaskDef&& from) noexcept
    : DvppTaskDef() {
    *this = ::std::move(from);
  }

  inline DvppTaskDef& operator=(const DvppTaskDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline DvppTaskDef& operator=(DvppTaskDef&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DvppTaskDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DvppTaskDef* internal_default_instance() {
    return reinterpret_cast<const DvppTaskDef*>(
               &_DvppTaskDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(DvppTaskDef& a, DvppTaskDef& b) {
    a.Swap(&b);
  }
  inline void Swap(DvppTaskDef* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DvppTaskDef* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DvppTaskDef* New() const final {
    return CreateMaybeMessage<DvppTaskDef>(nullptr);
  }

  DvppTaskDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DvppTaskDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DvppTaskDef& from);
  void MergeFrom(const DvppTaskDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DvppTaskDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "domi.DvppTaskDef";
  }
  protected:
  explicit DvppTaskDef(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_task_2eproto);
    return ::descriptor_table_task_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpIndexFieldNumber = 1,
  };
  // uint32 op_index = 1;
  void clear_op_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index() const;
  void set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_op_index() const;
  void _internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:domi.DvppTaskDef)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 op_index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_task_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ModelTaskDef

// string version = 1;
inline void ModelTaskDef::clear_version() {
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ModelTaskDef::version() const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.version)
  return _internal_version();
}
inline void ModelTaskDef::set_version(const std::string& value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.version)
}
inline std::string* ModelTaskDef::mutable_version() {
  // @@protoc_insertion_point(field_mutable:domi.ModelTaskDef.version)
  return _internal_mutable_version();
}
inline const std::string& ModelTaskDef::_internal_version() const {
  return version_.Get();
}
inline void ModelTaskDef::_internal_set_version(const std::string& value) {
  
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ModelTaskDef::set_version(std::string&& value) {
  
  version_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.ModelTaskDef.version)
}
inline void ModelTaskDef::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.ModelTaskDef.version)
}
inline void ModelTaskDef::set_version(const char* value,
    size_t size) {
  
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.ModelTaskDef.version)
}
inline std::string* ModelTaskDef::_internal_mutable_version() {
  
  return version_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ModelTaskDef::release_version() {
  // @@protoc_insertion_point(field_release:domi.ModelTaskDef.version)
  return version_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ModelTaskDef::set_allocated_version(std::string* version) {
  if (version != nullptr) {
    
  } else {
    
  }
  version_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), version,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.ModelTaskDef.version)
}

// map<string, string> attr = 9;
inline int ModelTaskDef::_internal_attr_size() const {
  return attr_.size();
}
inline int ModelTaskDef::attr_size() const {
  return _internal_attr_size();
}
inline void ModelTaskDef::clear_attr() {
  attr_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
ModelTaskDef::_internal_attr() const {
  return attr_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
ModelTaskDef::attr() const {
  // @@protoc_insertion_point(field_map:domi.ModelTaskDef.attr)
  return _internal_attr();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
ModelTaskDef::_internal_mutable_attr() {
  return attr_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
ModelTaskDef::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_map:domi.ModelTaskDef.attr)
  return _internal_mutable_attr();
}

// repeated .domi.TaskDef task = 10;
inline int ModelTaskDef::_internal_task_size() const {
  return task_.size();
}
inline int ModelTaskDef::task_size() const {
  return _internal_task_size();
}
inline void ModelTaskDef::clear_task() {
  task_.Clear();
}
inline ::domi::TaskDef* ModelTaskDef::mutable_task(int index) {
  // @@protoc_insertion_point(field_mutable:domi.ModelTaskDef.task)
  return task_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TaskDef >*
ModelTaskDef::mutable_task() {
  // @@protoc_insertion_point(field_mutable_list:domi.ModelTaskDef.task)
  return &task_;
}
inline const ::domi::TaskDef& ModelTaskDef::_internal_task(int index) const {
  return task_.Get(index);
}
inline const ::domi::TaskDef& ModelTaskDef::task(int index) const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.task)
  return _internal_task(index);
}
inline ::domi::TaskDef* ModelTaskDef::_internal_add_task() {
  return task_.Add();
}
inline ::domi::TaskDef* ModelTaskDef::add_task() {
  // @@protoc_insertion_point(field_add:domi.ModelTaskDef.task)
  return _internal_add_task();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TaskDef >&
ModelTaskDef::task() const {
  // @@protoc_insertion_point(field_list:domi.ModelTaskDef.task)
  return task_;
}

// uint64 memory_size = 11;
inline void ModelTaskDef::clear_memory_size() {
  memory_size_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelTaskDef::_internal_memory_size() const {
  return memory_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelTaskDef::memory_size() const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.memory_size)
  return _internal_memory_size();
}
inline void ModelTaskDef::_internal_set_memory_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  memory_size_ = value;
}
inline void ModelTaskDef::set_memory_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_memory_size(value);
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.memory_size)
}

// uint32 stream_num = 12;
inline void ModelTaskDef::clear_stream_num() {
  stream_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModelTaskDef::_internal_stream_num() const {
  return stream_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModelTaskDef::stream_num() const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.stream_num)
  return _internal_stream_num();
}
inline void ModelTaskDef::_internal_set_stream_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  stream_num_ = value;
}
inline void ModelTaskDef::set_stream_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stream_num(value);
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.stream_num)
}

// uint32 event_num = 13;
inline void ModelTaskDef::clear_event_num() {
  event_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModelTaskDef::_internal_event_num() const {
  return event_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModelTaskDef::event_num() const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.event_num)
  return _internal_event_num();
}
inline void ModelTaskDef::_internal_set_event_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  event_num_ = value;
}
inline void ModelTaskDef::set_event_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_num(value);
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.event_num)
}

// uint64 weight_size = 14;
inline void ModelTaskDef::clear_weight_size() {
  weight_size_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelTaskDef::_internal_weight_size() const {
  return weight_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelTaskDef::weight_size() const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.weight_size)
  return _internal_weight_size();
}
inline void ModelTaskDef::_internal_set_weight_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  weight_size_ = value;
}
inline void ModelTaskDef::set_weight_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_weight_size(value);
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.weight_size)
}

// repeated bytes op = 15;
inline int ModelTaskDef::_internal_op_size() const {
  return op_.size();
}
inline int ModelTaskDef::op_size() const {
  return _internal_op_size();
}
inline void ModelTaskDef::clear_op() {
  op_.Clear();
}
inline std::string* ModelTaskDef::add_op() {
  // @@protoc_insertion_point(field_add_mutable:domi.ModelTaskDef.op)
  return _internal_add_op();
}
inline const std::string& ModelTaskDef::_internal_op(int index) const {
  return op_.Get(index);
}
inline const std::string& ModelTaskDef::op(int index) const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.op)
  return _internal_op(index);
}
inline std::string* ModelTaskDef::mutable_op(int index) {
  // @@protoc_insertion_point(field_mutable:domi.ModelTaskDef.op)
  return op_.Mutable(index);
}
inline void ModelTaskDef::set_op(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.op)
  op_.Mutable(index)->assign(value);
}
inline void ModelTaskDef::set_op(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.op)
  op_.Mutable(index)->assign(std::move(value));
}
inline void ModelTaskDef::set_op(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  op_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:domi.ModelTaskDef.op)
}
inline void ModelTaskDef::set_op(int index, const void* value, size_t size) {
  op_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:domi.ModelTaskDef.op)
}
inline std::string* ModelTaskDef::_internal_add_op() {
  return op_.Add();
}
inline void ModelTaskDef::add_op(const std::string& value) {
  op_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:domi.ModelTaskDef.op)
}
inline void ModelTaskDef::add_op(std::string&& value) {
  op_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:domi.ModelTaskDef.op)
}
inline void ModelTaskDef::add_op(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  op_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:domi.ModelTaskDef.op)
}
inline void ModelTaskDef::add_op(const void* value, size_t size) {
  op_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:domi.ModelTaskDef.op)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ModelTaskDef::op() const {
  // @@protoc_insertion_point(field_list:domi.ModelTaskDef.op)
  return op_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ModelTaskDef::mutable_op() {
  // @@protoc_insertion_point(field_mutable_list:domi.ModelTaskDef.op)
  return &op_;
}

// uint64 base_addr = 16;
inline void ModelTaskDef::clear_base_addr() {
  base_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelTaskDef::_internal_base_addr() const {
  return base_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelTaskDef::base_addr() const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.base_addr)
  return _internal_base_addr();
}
inline void ModelTaskDef::_internal_set_base_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  base_addr_ = value;
}
inline void ModelTaskDef::set_base_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_base_addr(value);
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.base_addr)
}

// uint64 weight_addr = 17;
inline void ModelTaskDef::clear_weight_addr() {
  weight_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelTaskDef::_internal_weight_addr() const {
  return weight_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelTaskDef::weight_addr() const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.weight_addr)
  return _internal_weight_addr();
}
inline void ModelTaskDef::_internal_set_weight_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  weight_addr_ = value;
}
inline void ModelTaskDef::set_weight_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_weight_addr(value);
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.weight_addr)
}

// uint32 batch_num = 18;
inline void ModelTaskDef::clear_batch_num() {
  batch_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModelTaskDef::_internal_batch_num() const {
  return batch_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModelTaskDef::batch_num() const {
  // @@protoc_insertion_point(field_get:domi.ModelTaskDef.batch_num)
  return _internal_batch_num();
}
inline void ModelTaskDef::_internal_set_batch_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  batch_num_ = value;
}
inline void ModelTaskDef::set_batch_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_batch_num(value);
  // @@protoc_insertion_point(field_set:domi.ModelTaskDef.batch_num)
}

// -------------------------------------------------------------------

// TaskDef

// uint32 id = 1;
inline void TaskDef::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::id() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.id)
  return _internal_id();
}
inline void TaskDef::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void TaskDef::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:domi.TaskDef.id)
}

// uint32 type = 2;
inline void TaskDef::clear_type() {
  type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::type() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.type)
  return _internal_type();
}
inline void TaskDef::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  type_ = value;
}
inline void TaskDef::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:domi.TaskDef.type)
}

// uint32 stream_id = 10;
inline void TaskDef::clear_stream_id() {
  stream_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::_internal_stream_id() const {
  return stream_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::stream_id() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.stream_id)
  return _internal_stream_id();
}
inline void TaskDef::_internal_set_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  stream_id_ = value;
}
inline void TaskDef::set_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stream_id(value);
  // @@protoc_insertion_point(field_set:domi.TaskDef.stream_id)
}

// uint32 event_id = 11;
inline void TaskDef::clear_event_id() {
  event_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::_internal_event_id() const {
  return event_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::event_id() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.event_id)
  return _internal_event_id();
}
inline void TaskDef::_internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  event_id_ = value;
}
inline void TaskDef::set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:domi.TaskDef.event_id)
}

// uint32 notify_id = 12;
inline void TaskDef::clear_notify_id() {
  notify_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::_internal_notify_id() const {
  return notify_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::notify_id() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.notify_id)
  return _internal_notify_id();
}
inline void TaskDef::_internal_set_notify_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  notify_id_ = value;
}
inline void TaskDef::set_notify_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_notify_id(value);
  // @@protoc_insertion_point(field_set:domi.TaskDef.notify_id)
}

// .domi.KernelDef kernel = 20;
inline bool TaskDef::_internal_has_kernel() const {
  return this != internal_default_instance() && kernel_ != nullptr;
}
inline bool TaskDef::has_kernel() const {
  return _internal_has_kernel();
}
inline void TaskDef::clear_kernel() {
  if (GetArena() == nullptr && kernel_ != nullptr) {
    delete kernel_;
  }
  kernel_ = nullptr;
}
inline const ::domi::KernelDef& TaskDef::_internal_kernel() const {
  const ::domi::KernelDef* p = kernel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::KernelDef*>(
      &::domi::_KernelDef_default_instance_);
}
inline const ::domi::KernelDef& TaskDef::kernel() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.kernel)
  return _internal_kernel();
}
inline void TaskDef::unsafe_arena_set_allocated_kernel(
    ::domi::KernelDef* kernel) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(kernel_);
  }
  kernel_ = kernel;
  if (kernel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.kernel)
}
inline ::domi::KernelDef* TaskDef::release_kernel() {
  
  ::domi::KernelDef* temp = kernel_;
  kernel_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::KernelDef* TaskDef::unsafe_arena_release_kernel() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.kernel)
  
  ::domi::KernelDef* temp = kernel_;
  kernel_ = nullptr;
  return temp;
}
inline ::domi::KernelDef* TaskDef::_internal_mutable_kernel() {
  
  if (kernel_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::KernelDef>(GetArena());
    kernel_ = p;
  }
  return kernel_;
}
inline ::domi::KernelDef* TaskDef::mutable_kernel() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.kernel)
  return _internal_mutable_kernel();
}
inline void TaskDef::set_allocated_kernel(::domi::KernelDef* kernel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete kernel_;
  }
  if (kernel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(kernel);
    if (message_arena != submessage_arena) {
      kernel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kernel, submessage_arena);
    }
    
  } else {
    
  }
  kernel_ = kernel;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.kernel)
}

// .domi.KernelExDef kernel_ex = 21;
inline bool TaskDef::_internal_has_kernel_ex() const {
  return this != internal_default_instance() && kernel_ex_ != nullptr;
}
inline bool TaskDef::has_kernel_ex() const {
  return _internal_has_kernel_ex();
}
inline void TaskDef::clear_kernel_ex() {
  if (GetArena() == nullptr && kernel_ex_ != nullptr) {
    delete kernel_ex_;
  }
  kernel_ex_ = nullptr;
}
inline const ::domi::KernelExDef& TaskDef::_internal_kernel_ex() const {
  const ::domi::KernelExDef* p = kernel_ex_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::KernelExDef*>(
      &::domi::_KernelExDef_default_instance_);
}
inline const ::domi::KernelExDef& TaskDef::kernel_ex() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.kernel_ex)
  return _internal_kernel_ex();
}
inline void TaskDef::unsafe_arena_set_allocated_kernel_ex(
    ::domi::KernelExDef* kernel_ex) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(kernel_ex_);
  }
  kernel_ex_ = kernel_ex;
  if (kernel_ex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.kernel_ex)
}
inline ::domi::KernelExDef* TaskDef::release_kernel_ex() {
  
  ::domi::KernelExDef* temp = kernel_ex_;
  kernel_ex_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::KernelExDef* TaskDef::unsafe_arena_release_kernel_ex() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.kernel_ex)
  
  ::domi::KernelExDef* temp = kernel_ex_;
  kernel_ex_ = nullptr;
  return temp;
}
inline ::domi::KernelExDef* TaskDef::_internal_mutable_kernel_ex() {
  
  if (kernel_ex_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::KernelExDef>(GetArena());
    kernel_ex_ = p;
  }
  return kernel_ex_;
}
inline ::domi::KernelExDef* TaskDef::mutable_kernel_ex() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.kernel_ex)
  return _internal_mutable_kernel_ex();
}
inline void TaskDef::set_allocated_kernel_ex(::domi::KernelExDef* kernel_ex) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete kernel_ex_;
  }
  if (kernel_ex) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(kernel_ex);
    if (message_arena != submessage_arena) {
      kernel_ex = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kernel_ex, submessage_arena);
    }
    
  } else {
    
  }
  kernel_ex_ = kernel_ex;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.kernel_ex)
}

// .domi.KernelHcclDef kernel_hccl = 25;
inline bool TaskDef::_internal_has_kernel_hccl() const {
  return this != internal_default_instance() && kernel_hccl_ != nullptr;
}
inline bool TaskDef::has_kernel_hccl() const {
  return _internal_has_kernel_hccl();
}
inline void TaskDef::clear_kernel_hccl() {
  if (GetArena() == nullptr && kernel_hccl_ != nullptr) {
    delete kernel_hccl_;
  }
  kernel_hccl_ = nullptr;
}
inline const ::domi::KernelHcclDef& TaskDef::_internal_kernel_hccl() const {
  const ::domi::KernelHcclDef* p = kernel_hccl_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::KernelHcclDef*>(
      &::domi::_KernelHcclDef_default_instance_);
}
inline const ::domi::KernelHcclDef& TaskDef::kernel_hccl() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.kernel_hccl)
  return _internal_kernel_hccl();
}
inline void TaskDef::unsafe_arena_set_allocated_kernel_hccl(
    ::domi::KernelHcclDef* kernel_hccl) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(kernel_hccl_);
  }
  kernel_hccl_ = kernel_hccl;
  if (kernel_hccl) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.kernel_hccl)
}
inline ::domi::KernelHcclDef* TaskDef::release_kernel_hccl() {
  
  ::domi::KernelHcclDef* temp = kernel_hccl_;
  kernel_hccl_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::KernelHcclDef* TaskDef::unsafe_arena_release_kernel_hccl() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.kernel_hccl)
  
  ::domi::KernelHcclDef* temp = kernel_hccl_;
  kernel_hccl_ = nullptr;
  return temp;
}
inline ::domi::KernelHcclDef* TaskDef::_internal_mutable_kernel_hccl() {
  
  if (kernel_hccl_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::KernelHcclDef>(GetArena());
    kernel_hccl_ = p;
  }
  return kernel_hccl_;
}
inline ::domi::KernelHcclDef* TaskDef::mutable_kernel_hccl() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.kernel_hccl)
  return _internal_mutable_kernel_hccl();
}
inline void TaskDef::set_allocated_kernel_hccl(::domi::KernelHcclDef* kernel_hccl) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete kernel_hccl_;
  }
  if (kernel_hccl) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(kernel_hccl);
    if (message_arena != submessage_arena) {
      kernel_hccl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kernel_hccl, submessage_arena);
    }
    
  } else {
    
  }
  kernel_hccl_ = kernel_hccl;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.kernel_hccl)
}

// .domi.EventExDef event_ex = 26;
inline bool TaskDef::_internal_has_event_ex() const {
  return this != internal_default_instance() && event_ex_ != nullptr;
}
inline bool TaskDef::has_event_ex() const {
  return _internal_has_event_ex();
}
inline void TaskDef::clear_event_ex() {
  if (GetArena() == nullptr && event_ex_ != nullptr) {
    delete event_ex_;
  }
  event_ex_ = nullptr;
}
inline const ::domi::EventExDef& TaskDef::_internal_event_ex() const {
  const ::domi::EventExDef* p = event_ex_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::EventExDef*>(
      &::domi::_EventExDef_default_instance_);
}
inline const ::domi::EventExDef& TaskDef::event_ex() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.event_ex)
  return _internal_event_ex();
}
inline void TaskDef::unsafe_arena_set_allocated_event_ex(
    ::domi::EventExDef* event_ex) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event_ex_);
  }
  event_ex_ = event_ex;
  if (event_ex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.event_ex)
}
inline ::domi::EventExDef* TaskDef::release_event_ex() {
  
  ::domi::EventExDef* temp = event_ex_;
  event_ex_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::EventExDef* TaskDef::unsafe_arena_release_event_ex() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.event_ex)
  
  ::domi::EventExDef* temp = event_ex_;
  event_ex_ = nullptr;
  return temp;
}
inline ::domi::EventExDef* TaskDef::_internal_mutable_event_ex() {
  
  if (event_ex_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::EventExDef>(GetArena());
    event_ex_ = p;
  }
  return event_ex_;
}
inline ::domi::EventExDef* TaskDef::mutable_event_ex() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.event_ex)
  return _internal_mutable_event_ex();
}
inline void TaskDef::set_allocated_event_ex(::domi::EventExDef* event_ex) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete event_ex_;
  }
  if (event_ex) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(event_ex);
    if (message_arena != submessage_arena) {
      event_ex = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event_ex, submessage_arena);
    }
    
  } else {
    
  }
  event_ex_ = event_ex;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.event_ex)
}

// .domi.LogTimeStampDef log_timestamp = 28;
inline bool TaskDef::_internal_has_log_timestamp() const {
  return this != internal_default_instance() && log_timestamp_ != nullptr;
}
inline bool TaskDef::has_log_timestamp() const {
  return _internal_has_log_timestamp();
}
inline void TaskDef::clear_log_timestamp() {
  if (GetArena() == nullptr && log_timestamp_ != nullptr) {
    delete log_timestamp_;
  }
  log_timestamp_ = nullptr;
}
inline const ::domi::LogTimeStampDef& TaskDef::_internal_log_timestamp() const {
  const ::domi::LogTimeStampDef* p = log_timestamp_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::LogTimeStampDef*>(
      &::domi::_LogTimeStampDef_default_instance_);
}
inline const ::domi::LogTimeStampDef& TaskDef::log_timestamp() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.log_timestamp)
  return _internal_log_timestamp();
}
inline void TaskDef::unsafe_arena_set_allocated_log_timestamp(
    ::domi::LogTimeStampDef* log_timestamp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(log_timestamp_);
  }
  log_timestamp_ = log_timestamp;
  if (log_timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.log_timestamp)
}
inline ::domi::LogTimeStampDef* TaskDef::release_log_timestamp() {
  
  ::domi::LogTimeStampDef* temp = log_timestamp_;
  log_timestamp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::LogTimeStampDef* TaskDef::unsafe_arena_release_log_timestamp() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.log_timestamp)
  
  ::domi::LogTimeStampDef* temp = log_timestamp_;
  log_timestamp_ = nullptr;
  return temp;
}
inline ::domi::LogTimeStampDef* TaskDef::_internal_mutable_log_timestamp() {
  
  if (log_timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::LogTimeStampDef>(GetArena());
    log_timestamp_ = p;
  }
  return log_timestamp_;
}
inline ::domi::LogTimeStampDef* TaskDef::mutable_log_timestamp() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.log_timestamp)
  return _internal_mutable_log_timestamp();
}
inline void TaskDef::set_allocated_log_timestamp(::domi::LogTimeStampDef* log_timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete log_timestamp_;
  }
  if (log_timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(log_timestamp);
    if (message_arena != submessage_arena) {
      log_timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, log_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  log_timestamp_ = log_timestamp;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.log_timestamp)
}

// uint32 label_id = 30;
inline void TaskDef::clear_label_id() {
  label_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::_internal_label_id() const {
  return label_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TaskDef::label_id() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.label_id)
  return _internal_label_id();
}
inline void TaskDef::_internal_set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  label_id_ = value;
}
inline void TaskDef::set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_label_id(value);
  // @@protoc_insertion_point(field_set:domi.TaskDef.label_id)
}

// .domi.MemcpyAsyncDef memcpy_async = 31;
inline bool TaskDef::_internal_has_memcpy_async() const {
  return this != internal_default_instance() && memcpy_async_ != nullptr;
}
inline bool TaskDef::has_memcpy_async() const {
  return _internal_has_memcpy_async();
}
inline void TaskDef::clear_memcpy_async() {
  if (GetArena() == nullptr && memcpy_async_ != nullptr) {
    delete memcpy_async_;
  }
  memcpy_async_ = nullptr;
}
inline const ::domi::MemcpyAsyncDef& TaskDef::_internal_memcpy_async() const {
  const ::domi::MemcpyAsyncDef* p = memcpy_async_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::MemcpyAsyncDef*>(
      &::domi::_MemcpyAsyncDef_default_instance_);
}
inline const ::domi::MemcpyAsyncDef& TaskDef::memcpy_async() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.memcpy_async)
  return _internal_memcpy_async();
}
inline void TaskDef::unsafe_arena_set_allocated_memcpy_async(
    ::domi::MemcpyAsyncDef* memcpy_async) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(memcpy_async_);
  }
  memcpy_async_ = memcpy_async;
  if (memcpy_async) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.memcpy_async)
}
inline ::domi::MemcpyAsyncDef* TaskDef::release_memcpy_async() {
  
  ::domi::MemcpyAsyncDef* temp = memcpy_async_;
  memcpy_async_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::MemcpyAsyncDef* TaskDef::unsafe_arena_release_memcpy_async() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.memcpy_async)
  
  ::domi::MemcpyAsyncDef* temp = memcpy_async_;
  memcpy_async_ = nullptr;
  return temp;
}
inline ::domi::MemcpyAsyncDef* TaskDef::_internal_mutable_memcpy_async() {
  
  if (memcpy_async_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::MemcpyAsyncDef>(GetArena());
    memcpy_async_ = p;
  }
  return memcpy_async_;
}
inline ::domi::MemcpyAsyncDef* TaskDef::mutable_memcpy_async() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.memcpy_async)
  return _internal_mutable_memcpy_async();
}
inline void TaskDef::set_allocated_memcpy_async(::domi::MemcpyAsyncDef* memcpy_async) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete memcpy_async_;
  }
  if (memcpy_async) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(memcpy_async);
    if (message_arena != submessage_arena) {
      memcpy_async = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, memcpy_async, submessage_arena);
    }
    
  } else {
    
  }
  memcpy_async_ = memcpy_async;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.memcpy_async)
}

// .domi.StreamSwitchDef stream_switch = 32;
inline bool TaskDef::_internal_has_stream_switch() const {
  return this != internal_default_instance() && stream_switch_ != nullptr;
}
inline bool TaskDef::has_stream_switch() const {
  return _internal_has_stream_switch();
}
inline void TaskDef::clear_stream_switch() {
  if (GetArena() == nullptr && stream_switch_ != nullptr) {
    delete stream_switch_;
  }
  stream_switch_ = nullptr;
}
inline const ::domi::StreamSwitchDef& TaskDef::_internal_stream_switch() const {
  const ::domi::StreamSwitchDef* p = stream_switch_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::StreamSwitchDef*>(
      &::domi::_StreamSwitchDef_default_instance_);
}
inline const ::domi::StreamSwitchDef& TaskDef::stream_switch() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.stream_switch)
  return _internal_stream_switch();
}
inline void TaskDef::unsafe_arena_set_allocated_stream_switch(
    ::domi::StreamSwitchDef* stream_switch) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stream_switch_);
  }
  stream_switch_ = stream_switch;
  if (stream_switch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.stream_switch)
}
inline ::domi::StreamSwitchDef* TaskDef::release_stream_switch() {
  
  ::domi::StreamSwitchDef* temp = stream_switch_;
  stream_switch_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::StreamSwitchDef* TaskDef::unsafe_arena_release_stream_switch() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.stream_switch)
  
  ::domi::StreamSwitchDef* temp = stream_switch_;
  stream_switch_ = nullptr;
  return temp;
}
inline ::domi::StreamSwitchDef* TaskDef::_internal_mutable_stream_switch() {
  
  if (stream_switch_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::StreamSwitchDef>(GetArena());
    stream_switch_ = p;
  }
  return stream_switch_;
}
inline ::domi::StreamSwitchDef* TaskDef::mutable_stream_switch() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.stream_switch)
  return _internal_mutable_stream_switch();
}
inline void TaskDef::set_allocated_stream_switch(::domi::StreamSwitchDef* stream_switch) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stream_switch_;
  }
  if (stream_switch) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stream_switch);
    if (message_arena != submessage_arena) {
      stream_switch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stream_switch, submessage_arena);
    }
    
  } else {
    
  }
  stream_switch_ = stream_switch;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.stream_switch)
}

// .domi.StreamActiveDef stream_active = 33;
inline bool TaskDef::_internal_has_stream_active() const {
  return this != internal_default_instance() && stream_active_ != nullptr;
}
inline bool TaskDef::has_stream_active() const {
  return _internal_has_stream_active();
}
inline void TaskDef::clear_stream_active() {
  if (GetArena() == nullptr && stream_active_ != nullptr) {
    delete stream_active_;
  }
  stream_active_ = nullptr;
}
inline const ::domi::StreamActiveDef& TaskDef::_internal_stream_active() const {
  const ::domi::StreamActiveDef* p = stream_active_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::StreamActiveDef*>(
      &::domi::_StreamActiveDef_default_instance_);
}
inline const ::domi::StreamActiveDef& TaskDef::stream_active() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.stream_active)
  return _internal_stream_active();
}
inline void TaskDef::unsafe_arena_set_allocated_stream_active(
    ::domi::StreamActiveDef* stream_active) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stream_active_);
  }
  stream_active_ = stream_active;
  if (stream_active) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.stream_active)
}
inline ::domi::StreamActiveDef* TaskDef::release_stream_active() {
  
  ::domi::StreamActiveDef* temp = stream_active_;
  stream_active_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::StreamActiveDef* TaskDef::unsafe_arena_release_stream_active() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.stream_active)
  
  ::domi::StreamActiveDef* temp = stream_active_;
  stream_active_ = nullptr;
  return temp;
}
inline ::domi::StreamActiveDef* TaskDef::_internal_mutable_stream_active() {
  
  if (stream_active_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::StreamActiveDef>(GetArena());
    stream_active_ = p;
  }
  return stream_active_;
}
inline ::domi::StreamActiveDef* TaskDef::mutable_stream_active() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.stream_active)
  return _internal_mutable_stream_active();
}
inline void TaskDef::set_allocated_stream_active(::domi::StreamActiveDef* stream_active) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stream_active_;
  }
  if (stream_active) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stream_active);
    if (message_arena != submessage_arena) {
      stream_active = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stream_active, submessage_arena);
    }
    
  } else {
    
  }
  stream_active_ = stream_active;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.stream_active)
}

// bytes private_def = 34;
inline void TaskDef::clear_private_def() {
  private_def_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TaskDef::private_def() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.private_def)
  return _internal_private_def();
}
inline void TaskDef::set_private_def(const std::string& value) {
  _internal_set_private_def(value);
  // @@protoc_insertion_point(field_set:domi.TaskDef.private_def)
}
inline std::string* TaskDef::mutable_private_def() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.private_def)
  return _internal_mutable_private_def();
}
inline const std::string& TaskDef::_internal_private_def() const {
  return private_def_.Get();
}
inline void TaskDef::_internal_set_private_def(const std::string& value) {
  
  private_def_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TaskDef::set_private_def(std::string&& value) {
  
  private_def_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.TaskDef.private_def)
}
inline void TaskDef::set_private_def(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  private_def_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.TaskDef.private_def)
}
inline void TaskDef::set_private_def(const void* value,
    size_t size) {
  
  private_def_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.TaskDef.private_def)
}
inline std::string* TaskDef::_internal_mutable_private_def() {
  
  return private_def_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TaskDef::release_private_def() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.private_def)
  return private_def_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TaskDef::set_allocated_private_def(std::string* private_def) {
  if (private_def != nullptr) {
    
  } else {
    
  }
  private_def_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), private_def,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.private_def)
}

// uint64 ops_kernel_store_ptr = 35;
inline void TaskDef::clear_ops_kernel_store_ptr() {
  ops_kernel_store_ptr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TaskDef::_internal_ops_kernel_store_ptr() const {
  return ops_kernel_store_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TaskDef::ops_kernel_store_ptr() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.ops_kernel_store_ptr)
  return _internal_ops_kernel_store_ptr();
}
inline void TaskDef::_internal_set_ops_kernel_store_ptr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  ops_kernel_store_ptr_ = value;
}
inline void TaskDef::set_ops_kernel_store_ptr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_ops_kernel_store_ptr(value);
  // @@protoc_insertion_point(field_set:domi.TaskDef.ops_kernel_store_ptr)
}

// .domi.StreamSwitchNDef stream_switch_n = 36;
inline bool TaskDef::_internal_has_stream_switch_n() const {
  return this != internal_default_instance() && stream_switch_n_ != nullptr;
}
inline bool TaskDef::has_stream_switch_n() const {
  return _internal_has_stream_switch_n();
}
inline void TaskDef::clear_stream_switch_n() {
  if (GetArena() == nullptr && stream_switch_n_ != nullptr) {
    delete stream_switch_n_;
  }
  stream_switch_n_ = nullptr;
}
inline const ::domi::StreamSwitchNDef& TaskDef::_internal_stream_switch_n() const {
  const ::domi::StreamSwitchNDef* p = stream_switch_n_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::StreamSwitchNDef*>(
      &::domi::_StreamSwitchNDef_default_instance_);
}
inline const ::domi::StreamSwitchNDef& TaskDef::stream_switch_n() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.stream_switch_n)
  return _internal_stream_switch_n();
}
inline void TaskDef::unsafe_arena_set_allocated_stream_switch_n(
    ::domi::StreamSwitchNDef* stream_switch_n) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stream_switch_n_);
  }
  stream_switch_n_ = stream_switch_n;
  if (stream_switch_n) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.stream_switch_n)
}
inline ::domi::StreamSwitchNDef* TaskDef::release_stream_switch_n() {
  
  ::domi::StreamSwitchNDef* temp = stream_switch_n_;
  stream_switch_n_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::StreamSwitchNDef* TaskDef::unsafe_arena_release_stream_switch_n() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.stream_switch_n)
  
  ::domi::StreamSwitchNDef* temp = stream_switch_n_;
  stream_switch_n_ = nullptr;
  return temp;
}
inline ::domi::StreamSwitchNDef* TaskDef::_internal_mutable_stream_switch_n() {
  
  if (stream_switch_n_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::StreamSwitchNDef>(GetArena());
    stream_switch_n_ = p;
  }
  return stream_switch_n_;
}
inline ::domi::StreamSwitchNDef* TaskDef::mutable_stream_switch_n() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.stream_switch_n)
  return _internal_mutable_stream_switch_n();
}
inline void TaskDef::set_allocated_stream_switch_n(::domi::StreamSwitchNDef* stream_switch_n) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stream_switch_n_;
  }
  if (stream_switch_n) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stream_switch_n);
    if (message_arena != submessage_arena) {
      stream_switch_n = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stream_switch_n, submessage_arena);
    }
    
  } else {
    
  }
  stream_switch_n_ = stream_switch_n;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.stream_switch_n)
}

// .domi.LabelSetDef label_set = 37;
inline bool TaskDef::_internal_has_label_set() const {
  return this != internal_default_instance() && label_set_ != nullptr;
}
inline bool TaskDef::has_label_set() const {
  return _internal_has_label_set();
}
inline void TaskDef::clear_label_set() {
  if (GetArena() == nullptr && label_set_ != nullptr) {
    delete label_set_;
  }
  label_set_ = nullptr;
}
inline const ::domi::LabelSetDef& TaskDef::_internal_label_set() const {
  const ::domi::LabelSetDef* p = label_set_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::LabelSetDef*>(
      &::domi::_LabelSetDef_default_instance_);
}
inline const ::domi::LabelSetDef& TaskDef::label_set() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.label_set)
  return _internal_label_set();
}
inline void TaskDef::unsafe_arena_set_allocated_label_set(
    ::domi::LabelSetDef* label_set) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(label_set_);
  }
  label_set_ = label_set;
  if (label_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.label_set)
}
inline ::domi::LabelSetDef* TaskDef::release_label_set() {
  
  ::domi::LabelSetDef* temp = label_set_;
  label_set_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::LabelSetDef* TaskDef::unsafe_arena_release_label_set() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.label_set)
  
  ::domi::LabelSetDef* temp = label_set_;
  label_set_ = nullptr;
  return temp;
}
inline ::domi::LabelSetDef* TaskDef::_internal_mutable_label_set() {
  
  if (label_set_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::LabelSetDef>(GetArena());
    label_set_ = p;
  }
  return label_set_;
}
inline ::domi::LabelSetDef* TaskDef::mutable_label_set() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.label_set)
  return _internal_mutable_label_set();
}
inline void TaskDef::set_allocated_label_set(::domi::LabelSetDef* label_set) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete label_set_;
  }
  if (label_set) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(label_set);
    if (message_arena != submessage_arena) {
      label_set = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, label_set, submessage_arena);
    }
    
  } else {
    
  }
  label_set_ = label_set;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.label_set)
}

// .domi.LabelGotoExDef label_goto_ex = 38;
inline bool TaskDef::_internal_has_label_goto_ex() const {
  return this != internal_default_instance() && label_goto_ex_ != nullptr;
}
inline bool TaskDef::has_label_goto_ex() const {
  return _internal_has_label_goto_ex();
}
inline void TaskDef::clear_label_goto_ex() {
  if (GetArena() == nullptr && label_goto_ex_ != nullptr) {
    delete label_goto_ex_;
  }
  label_goto_ex_ = nullptr;
}
inline const ::domi::LabelGotoExDef& TaskDef::_internal_label_goto_ex() const {
  const ::domi::LabelGotoExDef* p = label_goto_ex_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::LabelGotoExDef*>(
      &::domi::_LabelGotoExDef_default_instance_);
}
inline const ::domi::LabelGotoExDef& TaskDef::label_goto_ex() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.label_goto_ex)
  return _internal_label_goto_ex();
}
inline void TaskDef::unsafe_arena_set_allocated_label_goto_ex(
    ::domi::LabelGotoExDef* label_goto_ex) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(label_goto_ex_);
  }
  label_goto_ex_ = label_goto_ex;
  if (label_goto_ex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.label_goto_ex)
}
inline ::domi::LabelGotoExDef* TaskDef::release_label_goto_ex() {
  
  ::domi::LabelGotoExDef* temp = label_goto_ex_;
  label_goto_ex_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::LabelGotoExDef* TaskDef::unsafe_arena_release_label_goto_ex() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.label_goto_ex)
  
  ::domi::LabelGotoExDef* temp = label_goto_ex_;
  label_goto_ex_ = nullptr;
  return temp;
}
inline ::domi::LabelGotoExDef* TaskDef::_internal_mutable_label_goto_ex() {
  
  if (label_goto_ex_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::LabelGotoExDef>(GetArena());
    label_goto_ex_ = p;
  }
  return label_goto_ex_;
}
inline ::domi::LabelGotoExDef* TaskDef::mutable_label_goto_ex() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.label_goto_ex)
  return _internal_mutable_label_goto_ex();
}
inline void TaskDef::set_allocated_label_goto_ex(::domi::LabelGotoExDef* label_goto_ex) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete label_goto_ex_;
  }
  if (label_goto_ex) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(label_goto_ex);
    if (message_arena != submessage_arena) {
      label_goto_ex = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, label_goto_ex, submessage_arena);
    }
    
  } else {
    
  }
  label_goto_ex_ = label_goto_ex;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.label_goto_ex)
}

// .domi.LabelSwitchByIndexDef label_switch_by_index = 39;
inline bool TaskDef::_internal_has_label_switch_by_index() const {
  return this != internal_default_instance() && label_switch_by_index_ != nullptr;
}
inline bool TaskDef::has_label_switch_by_index() const {
  return _internal_has_label_switch_by_index();
}
inline void TaskDef::clear_label_switch_by_index() {
  if (GetArena() == nullptr && label_switch_by_index_ != nullptr) {
    delete label_switch_by_index_;
  }
  label_switch_by_index_ = nullptr;
}
inline const ::domi::LabelSwitchByIndexDef& TaskDef::_internal_label_switch_by_index() const {
  const ::domi::LabelSwitchByIndexDef* p = label_switch_by_index_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::LabelSwitchByIndexDef*>(
      &::domi::_LabelSwitchByIndexDef_default_instance_);
}
inline const ::domi::LabelSwitchByIndexDef& TaskDef::label_switch_by_index() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.label_switch_by_index)
  return _internal_label_switch_by_index();
}
inline void TaskDef::unsafe_arena_set_allocated_label_switch_by_index(
    ::domi::LabelSwitchByIndexDef* label_switch_by_index) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(label_switch_by_index_);
  }
  label_switch_by_index_ = label_switch_by_index;
  if (label_switch_by_index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.label_switch_by_index)
}
inline ::domi::LabelSwitchByIndexDef* TaskDef::release_label_switch_by_index() {
  
  ::domi::LabelSwitchByIndexDef* temp = label_switch_by_index_;
  label_switch_by_index_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::LabelSwitchByIndexDef* TaskDef::unsafe_arena_release_label_switch_by_index() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.label_switch_by_index)
  
  ::domi::LabelSwitchByIndexDef* temp = label_switch_by_index_;
  label_switch_by_index_ = nullptr;
  return temp;
}
inline ::domi::LabelSwitchByIndexDef* TaskDef::_internal_mutable_label_switch_by_index() {
  
  if (label_switch_by_index_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::LabelSwitchByIndexDef>(GetArena());
    label_switch_by_index_ = p;
  }
  return label_switch_by_index_;
}
inline ::domi::LabelSwitchByIndexDef* TaskDef::mutable_label_switch_by_index() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.label_switch_by_index)
  return _internal_mutable_label_switch_by_index();
}
inline void TaskDef::set_allocated_label_switch_by_index(::domi::LabelSwitchByIndexDef* label_switch_by_index) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete label_switch_by_index_;
  }
  if (label_switch_by_index) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(label_switch_by_index);
    if (message_arena != submessage_arena) {
      label_switch_by_index = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, label_switch_by_index, submessage_arena);
    }
    
  } else {
    
  }
  label_switch_by_index_ = label_switch_by_index;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.label_switch_by_index)
}

// .domi.KernelDefWithHandle kernel_with_handle = 40;
inline bool TaskDef::_internal_has_kernel_with_handle() const {
  return this != internal_default_instance() && kernel_with_handle_ != nullptr;
}
inline bool TaskDef::has_kernel_with_handle() const {
  return _internal_has_kernel_with_handle();
}
inline void TaskDef::clear_kernel_with_handle() {
  if (GetArena() == nullptr && kernel_with_handle_ != nullptr) {
    delete kernel_with_handle_;
  }
  kernel_with_handle_ = nullptr;
}
inline const ::domi::KernelDefWithHandle& TaskDef::_internal_kernel_with_handle() const {
  const ::domi::KernelDefWithHandle* p = kernel_with_handle_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::KernelDefWithHandle*>(
      &::domi::_KernelDefWithHandle_default_instance_);
}
inline const ::domi::KernelDefWithHandle& TaskDef::kernel_with_handle() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.kernel_with_handle)
  return _internal_kernel_with_handle();
}
inline void TaskDef::unsafe_arena_set_allocated_kernel_with_handle(
    ::domi::KernelDefWithHandle* kernel_with_handle) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(kernel_with_handle_);
  }
  kernel_with_handle_ = kernel_with_handle;
  if (kernel_with_handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.kernel_with_handle)
}
inline ::domi::KernelDefWithHandle* TaskDef::release_kernel_with_handle() {
  
  ::domi::KernelDefWithHandle* temp = kernel_with_handle_;
  kernel_with_handle_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::KernelDefWithHandle* TaskDef::unsafe_arena_release_kernel_with_handle() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.kernel_with_handle)
  
  ::domi::KernelDefWithHandle* temp = kernel_with_handle_;
  kernel_with_handle_ = nullptr;
  return temp;
}
inline ::domi::KernelDefWithHandle* TaskDef::_internal_mutable_kernel_with_handle() {
  
  if (kernel_with_handle_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::KernelDefWithHandle>(GetArena());
    kernel_with_handle_ = p;
  }
  return kernel_with_handle_;
}
inline ::domi::KernelDefWithHandle* TaskDef::mutable_kernel_with_handle() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.kernel_with_handle)
  return _internal_mutable_kernel_with_handle();
}
inline void TaskDef::set_allocated_kernel_with_handle(::domi::KernelDefWithHandle* kernel_with_handle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete kernel_with_handle_;
  }
  if (kernel_with_handle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(kernel_with_handle);
    if (message_arena != submessage_arena) {
      kernel_with_handle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kernel_with_handle, submessage_arena);
    }
    
  } else {
    
  }
  kernel_with_handle_ = kernel_with_handle;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.kernel_with_handle)
}

// .domi.FftsTaskDef ffts_task = 41;
inline bool TaskDef::_internal_has_ffts_task() const {
  return this != internal_default_instance() && ffts_task_ != nullptr;
}
inline bool TaskDef::has_ffts_task() const {
  return _internal_has_ffts_task();
}
inline void TaskDef::clear_ffts_task() {
  if (GetArena() == nullptr && ffts_task_ != nullptr) {
    delete ffts_task_;
  }
  ffts_task_ = nullptr;
}
inline const ::domi::FftsTaskDef& TaskDef::_internal_ffts_task() const {
  const ::domi::FftsTaskDef* p = ffts_task_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsTaskDef*>(
      &::domi::_FftsTaskDef_default_instance_);
}
inline const ::domi::FftsTaskDef& TaskDef::ffts_task() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.ffts_task)
  return _internal_ffts_task();
}
inline void TaskDef::unsafe_arena_set_allocated_ffts_task(
    ::domi::FftsTaskDef* ffts_task) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ffts_task_);
  }
  ffts_task_ = ffts_task;
  if (ffts_task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.ffts_task)
}
inline ::domi::FftsTaskDef* TaskDef::release_ffts_task() {
  
  ::domi::FftsTaskDef* temp = ffts_task_;
  ffts_task_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsTaskDef* TaskDef::unsafe_arena_release_ffts_task() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.ffts_task)
  
  ::domi::FftsTaskDef* temp = ffts_task_;
  ffts_task_ = nullptr;
  return temp;
}
inline ::domi::FftsTaskDef* TaskDef::_internal_mutable_ffts_task() {
  
  if (ffts_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsTaskDef>(GetArena());
    ffts_task_ = p;
  }
  return ffts_task_;
}
inline ::domi::FftsTaskDef* TaskDef::mutable_ffts_task() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.ffts_task)
  return _internal_mutable_ffts_task();
}
inline void TaskDef::set_allocated_ffts_task(::domi::FftsTaskDef* ffts_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete ffts_task_;
  }
  if (ffts_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ffts_task);
    if (message_arena != submessage_arena) {
      ffts_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ffts_task, submessage_arena);
    }
    
  } else {
    
  }
  ffts_task_ = ffts_task;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.ffts_task)
}

// .domi.FftsPlusTaskDef ffts_plus_task = 42;
inline bool TaskDef::_internal_has_ffts_plus_task() const {
  return this != internal_default_instance() && ffts_plus_task_ != nullptr;
}
inline bool TaskDef::has_ffts_plus_task() const {
  return _internal_has_ffts_plus_task();
}
inline void TaskDef::clear_ffts_plus_task() {
  if (GetArena() == nullptr && ffts_plus_task_ != nullptr) {
    delete ffts_plus_task_;
  }
  ffts_plus_task_ = nullptr;
}
inline const ::domi::FftsPlusTaskDef& TaskDef::_internal_ffts_plus_task() const {
  const ::domi::FftsPlusTaskDef* p = ffts_plus_task_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusTaskDef*>(
      &::domi::_FftsPlusTaskDef_default_instance_);
}
inline const ::domi::FftsPlusTaskDef& TaskDef::ffts_plus_task() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.ffts_plus_task)
  return _internal_ffts_plus_task();
}
inline void TaskDef::unsafe_arena_set_allocated_ffts_plus_task(
    ::domi::FftsPlusTaskDef* ffts_plus_task) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ffts_plus_task_);
  }
  ffts_plus_task_ = ffts_plus_task;
  if (ffts_plus_task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.ffts_plus_task)
}
inline ::domi::FftsPlusTaskDef* TaskDef::release_ffts_plus_task() {
  
  ::domi::FftsPlusTaskDef* temp = ffts_plus_task_;
  ffts_plus_task_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusTaskDef* TaskDef::unsafe_arena_release_ffts_plus_task() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.ffts_plus_task)
  
  ::domi::FftsPlusTaskDef* temp = ffts_plus_task_;
  ffts_plus_task_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusTaskDef* TaskDef::_internal_mutable_ffts_plus_task() {
  
  if (ffts_plus_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusTaskDef>(GetArena());
    ffts_plus_task_ = p;
  }
  return ffts_plus_task_;
}
inline ::domi::FftsPlusTaskDef* TaskDef::mutable_ffts_plus_task() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.ffts_plus_task)
  return _internal_mutable_ffts_plus_task();
}
inline void TaskDef::set_allocated_ffts_plus_task(::domi::FftsPlusTaskDef* ffts_plus_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete ffts_plus_task_;
  }
  if (ffts_plus_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ffts_plus_task);
    if (message_arena != submessage_arena) {
      ffts_plus_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ffts_plus_task, submessage_arena);
    }
    
  } else {
    
  }
  ffts_plus_task_ = ffts_plus_task;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.ffts_plus_task)
}

// .domi.DSATaskDef dsa_task = 43;
inline bool TaskDef::_internal_has_dsa_task() const {
  return this != internal_default_instance() && dsa_task_ != nullptr;
}
inline bool TaskDef::has_dsa_task() const {
  return _internal_has_dsa_task();
}
inline void TaskDef::clear_dsa_task() {
  if (GetArena() == nullptr && dsa_task_ != nullptr) {
    delete dsa_task_;
  }
  dsa_task_ = nullptr;
}
inline const ::domi::DSATaskDef& TaskDef::_internal_dsa_task() const {
  const ::domi::DSATaskDef* p = dsa_task_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::DSATaskDef*>(
      &::domi::_DSATaskDef_default_instance_);
}
inline const ::domi::DSATaskDef& TaskDef::dsa_task() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.dsa_task)
  return _internal_dsa_task();
}
inline void TaskDef::unsafe_arena_set_allocated_dsa_task(
    ::domi::DSATaskDef* dsa_task) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dsa_task_);
  }
  dsa_task_ = dsa_task;
  if (dsa_task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.dsa_task)
}
inline ::domi::DSATaskDef* TaskDef::release_dsa_task() {
  
  ::domi::DSATaskDef* temp = dsa_task_;
  dsa_task_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::DSATaskDef* TaskDef::unsafe_arena_release_dsa_task() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.dsa_task)
  
  ::domi::DSATaskDef* temp = dsa_task_;
  dsa_task_ = nullptr;
  return temp;
}
inline ::domi::DSATaskDef* TaskDef::_internal_mutable_dsa_task() {
  
  if (dsa_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::DSATaskDef>(GetArena());
    dsa_task_ = p;
  }
  return dsa_task_;
}
inline ::domi::DSATaskDef* TaskDef::mutable_dsa_task() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.dsa_task)
  return _internal_mutable_dsa_task();
}
inline void TaskDef::set_allocated_dsa_task(::domi::DSATaskDef* dsa_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dsa_task_;
  }
  if (dsa_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dsa_task);
    if (message_arena != submessage_arena) {
      dsa_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dsa_task, submessage_arena);
    }
    
  } else {
    
  }
  dsa_task_ = dsa_task;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.dsa_task)
}

// .domi.CmoTaskDef cmo_task = 44;
inline bool TaskDef::_internal_has_cmo_task() const {
  return this != internal_default_instance() && cmo_task_ != nullptr;
}
inline bool TaskDef::has_cmo_task() const {
  return _internal_has_cmo_task();
}
inline void TaskDef::clear_cmo_task() {
  if (GetArena() == nullptr && cmo_task_ != nullptr) {
    delete cmo_task_;
  }
  cmo_task_ = nullptr;
}
inline const ::domi::CmoTaskDef& TaskDef::_internal_cmo_task() const {
  const ::domi::CmoTaskDef* p = cmo_task_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::CmoTaskDef*>(
      &::domi::_CmoTaskDef_default_instance_);
}
inline const ::domi::CmoTaskDef& TaskDef::cmo_task() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.cmo_task)
  return _internal_cmo_task();
}
inline void TaskDef::unsafe_arena_set_allocated_cmo_task(
    ::domi::CmoTaskDef* cmo_task) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cmo_task_);
  }
  cmo_task_ = cmo_task;
  if (cmo_task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.cmo_task)
}
inline ::domi::CmoTaskDef* TaskDef::release_cmo_task() {
  
  ::domi::CmoTaskDef* temp = cmo_task_;
  cmo_task_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::CmoTaskDef* TaskDef::unsafe_arena_release_cmo_task() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.cmo_task)
  
  ::domi::CmoTaskDef* temp = cmo_task_;
  cmo_task_ = nullptr;
  return temp;
}
inline ::domi::CmoTaskDef* TaskDef::_internal_mutable_cmo_task() {
  
  if (cmo_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::CmoTaskDef>(GetArena());
    cmo_task_ = p;
  }
  return cmo_task_;
}
inline ::domi::CmoTaskDef* TaskDef::mutable_cmo_task() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.cmo_task)
  return _internal_mutable_cmo_task();
}
inline void TaskDef::set_allocated_cmo_task(::domi::CmoTaskDef* cmo_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete cmo_task_;
  }
  if (cmo_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cmo_task);
    if (message_arena != submessage_arena) {
      cmo_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmo_task, submessage_arena);
    }
    
  } else {
    
  }
  cmo_task_ = cmo_task;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.cmo_task)
}

// .domi.CmoBarrierTaskDef cmo_barrier_task = 45;
inline bool TaskDef::_internal_has_cmo_barrier_task() const {
  return this != internal_default_instance() && cmo_barrier_task_ != nullptr;
}
inline bool TaskDef::has_cmo_barrier_task() const {
  return _internal_has_cmo_barrier_task();
}
inline void TaskDef::clear_cmo_barrier_task() {
  if (GetArena() == nullptr && cmo_barrier_task_ != nullptr) {
    delete cmo_barrier_task_;
  }
  cmo_barrier_task_ = nullptr;
}
inline const ::domi::CmoBarrierTaskDef& TaskDef::_internal_cmo_barrier_task() const {
  const ::domi::CmoBarrierTaskDef* p = cmo_barrier_task_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::CmoBarrierTaskDef*>(
      &::domi::_CmoBarrierTaskDef_default_instance_);
}
inline const ::domi::CmoBarrierTaskDef& TaskDef::cmo_barrier_task() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.cmo_barrier_task)
  return _internal_cmo_barrier_task();
}
inline void TaskDef::unsafe_arena_set_allocated_cmo_barrier_task(
    ::domi::CmoBarrierTaskDef* cmo_barrier_task) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cmo_barrier_task_);
  }
  cmo_barrier_task_ = cmo_barrier_task;
  if (cmo_barrier_task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.cmo_barrier_task)
}
inline ::domi::CmoBarrierTaskDef* TaskDef::release_cmo_barrier_task() {
  
  ::domi::CmoBarrierTaskDef* temp = cmo_barrier_task_;
  cmo_barrier_task_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::CmoBarrierTaskDef* TaskDef::unsafe_arena_release_cmo_barrier_task() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.cmo_barrier_task)
  
  ::domi::CmoBarrierTaskDef* temp = cmo_barrier_task_;
  cmo_barrier_task_ = nullptr;
  return temp;
}
inline ::domi::CmoBarrierTaskDef* TaskDef::_internal_mutable_cmo_barrier_task() {
  
  if (cmo_barrier_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::CmoBarrierTaskDef>(GetArena());
    cmo_barrier_task_ = p;
  }
  return cmo_barrier_task_;
}
inline ::domi::CmoBarrierTaskDef* TaskDef::mutable_cmo_barrier_task() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.cmo_barrier_task)
  return _internal_mutable_cmo_barrier_task();
}
inline void TaskDef::set_allocated_cmo_barrier_task(::domi::CmoBarrierTaskDef* cmo_barrier_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete cmo_barrier_task_;
  }
  if (cmo_barrier_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cmo_barrier_task);
    if (message_arena != submessage_arena) {
      cmo_barrier_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmo_barrier_task, submessage_arena);
    }
    
  } else {
    
  }
  cmo_barrier_task_ = cmo_barrier_task;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.cmo_barrier_task)
}

// .domi.NpuGetFloatStatusDef npu_get_float_status = 46;
inline bool TaskDef::_internal_has_npu_get_float_status() const {
  return this != internal_default_instance() && npu_get_float_status_ != nullptr;
}
inline bool TaskDef::has_npu_get_float_status() const {
  return _internal_has_npu_get_float_status();
}
inline void TaskDef::clear_npu_get_float_status() {
  if (GetArena() == nullptr && npu_get_float_status_ != nullptr) {
    delete npu_get_float_status_;
  }
  npu_get_float_status_ = nullptr;
}
inline const ::domi::NpuGetFloatStatusDef& TaskDef::_internal_npu_get_float_status() const {
  const ::domi::NpuGetFloatStatusDef* p = npu_get_float_status_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::NpuGetFloatStatusDef*>(
      &::domi::_NpuGetFloatStatusDef_default_instance_);
}
inline const ::domi::NpuGetFloatStatusDef& TaskDef::npu_get_float_status() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.npu_get_float_status)
  return _internal_npu_get_float_status();
}
inline void TaskDef::unsafe_arena_set_allocated_npu_get_float_status(
    ::domi::NpuGetFloatStatusDef* npu_get_float_status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(npu_get_float_status_);
  }
  npu_get_float_status_ = npu_get_float_status;
  if (npu_get_float_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.npu_get_float_status)
}
inline ::domi::NpuGetFloatStatusDef* TaskDef::release_npu_get_float_status() {
  
  ::domi::NpuGetFloatStatusDef* temp = npu_get_float_status_;
  npu_get_float_status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::NpuGetFloatStatusDef* TaskDef::unsafe_arena_release_npu_get_float_status() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.npu_get_float_status)
  
  ::domi::NpuGetFloatStatusDef* temp = npu_get_float_status_;
  npu_get_float_status_ = nullptr;
  return temp;
}
inline ::domi::NpuGetFloatStatusDef* TaskDef::_internal_mutable_npu_get_float_status() {
  
  if (npu_get_float_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::NpuGetFloatStatusDef>(GetArena());
    npu_get_float_status_ = p;
  }
  return npu_get_float_status_;
}
inline ::domi::NpuGetFloatStatusDef* TaskDef::mutable_npu_get_float_status() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.npu_get_float_status)
  return _internal_mutable_npu_get_float_status();
}
inline void TaskDef::set_allocated_npu_get_float_status(::domi::NpuGetFloatStatusDef* npu_get_float_status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete npu_get_float_status_;
  }
  if (npu_get_float_status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(npu_get_float_status);
    if (message_arena != submessage_arena) {
      npu_get_float_status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, npu_get_float_status, submessage_arena);
    }
    
  } else {
    
  }
  npu_get_float_status_ = npu_get_float_status;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.npu_get_float_status)
}

// .domi.NpuClearFloatStatusDef npu_clear_float_status = 47;
inline bool TaskDef::_internal_has_npu_clear_float_status() const {
  return this != internal_default_instance() && npu_clear_float_status_ != nullptr;
}
inline bool TaskDef::has_npu_clear_float_status() const {
  return _internal_has_npu_clear_float_status();
}
inline void TaskDef::clear_npu_clear_float_status() {
  if (GetArena() == nullptr && npu_clear_float_status_ != nullptr) {
    delete npu_clear_float_status_;
  }
  npu_clear_float_status_ = nullptr;
}
inline const ::domi::NpuClearFloatStatusDef& TaskDef::_internal_npu_clear_float_status() const {
  const ::domi::NpuClearFloatStatusDef* p = npu_clear_float_status_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::NpuClearFloatStatusDef*>(
      &::domi::_NpuClearFloatStatusDef_default_instance_);
}
inline const ::domi::NpuClearFloatStatusDef& TaskDef::npu_clear_float_status() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.npu_clear_float_status)
  return _internal_npu_clear_float_status();
}
inline void TaskDef::unsafe_arena_set_allocated_npu_clear_float_status(
    ::domi::NpuClearFloatStatusDef* npu_clear_float_status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(npu_clear_float_status_);
  }
  npu_clear_float_status_ = npu_clear_float_status;
  if (npu_clear_float_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.npu_clear_float_status)
}
inline ::domi::NpuClearFloatStatusDef* TaskDef::release_npu_clear_float_status() {
  
  ::domi::NpuClearFloatStatusDef* temp = npu_clear_float_status_;
  npu_clear_float_status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::NpuClearFloatStatusDef* TaskDef::unsafe_arena_release_npu_clear_float_status() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.npu_clear_float_status)
  
  ::domi::NpuClearFloatStatusDef* temp = npu_clear_float_status_;
  npu_clear_float_status_ = nullptr;
  return temp;
}
inline ::domi::NpuClearFloatStatusDef* TaskDef::_internal_mutable_npu_clear_float_status() {
  
  if (npu_clear_float_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::NpuClearFloatStatusDef>(GetArena());
    npu_clear_float_status_ = p;
  }
  return npu_clear_float_status_;
}
inline ::domi::NpuClearFloatStatusDef* TaskDef::mutable_npu_clear_float_status() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.npu_clear_float_status)
  return _internal_mutable_npu_clear_float_status();
}
inline void TaskDef::set_allocated_npu_clear_float_status(::domi::NpuClearFloatStatusDef* npu_clear_float_status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete npu_clear_float_status_;
  }
  if (npu_clear_float_status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(npu_clear_float_status);
    if (message_arena != submessage_arena) {
      npu_clear_float_status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, npu_clear_float_status, submessage_arena);
    }
    
  } else {
    
  }
  npu_clear_float_status_ = npu_clear_float_status;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.npu_clear_float_status)
}

// .domi.DvppTaskDef dvpp_task = 48;
inline bool TaskDef::_internal_has_dvpp_task() const {
  return this != internal_default_instance() && dvpp_task_ != nullptr;
}
inline bool TaskDef::has_dvpp_task() const {
  return _internal_has_dvpp_task();
}
inline void TaskDef::clear_dvpp_task() {
  if (GetArena() == nullptr && dvpp_task_ != nullptr) {
    delete dvpp_task_;
  }
  dvpp_task_ = nullptr;
}
inline const ::domi::DvppTaskDef& TaskDef::_internal_dvpp_task() const {
  const ::domi::DvppTaskDef* p = dvpp_task_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::DvppTaskDef*>(
      &::domi::_DvppTaskDef_default_instance_);
}
inline const ::domi::DvppTaskDef& TaskDef::dvpp_task() const {
  // @@protoc_insertion_point(field_get:domi.TaskDef.dvpp_task)
  return _internal_dvpp_task();
}
inline void TaskDef::unsafe_arena_set_allocated_dvpp_task(
    ::domi::DvppTaskDef* dvpp_task) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dvpp_task_);
  }
  dvpp_task_ = dvpp_task;
  if (dvpp_task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TaskDef.dvpp_task)
}
inline ::domi::DvppTaskDef* TaskDef::release_dvpp_task() {
  
  ::domi::DvppTaskDef* temp = dvpp_task_;
  dvpp_task_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::DvppTaskDef* TaskDef::unsafe_arena_release_dvpp_task() {
  // @@protoc_insertion_point(field_release:domi.TaskDef.dvpp_task)
  
  ::domi::DvppTaskDef* temp = dvpp_task_;
  dvpp_task_ = nullptr;
  return temp;
}
inline ::domi::DvppTaskDef* TaskDef::_internal_mutable_dvpp_task() {
  
  if (dvpp_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::DvppTaskDef>(GetArena());
    dvpp_task_ = p;
  }
  return dvpp_task_;
}
inline ::domi::DvppTaskDef* TaskDef::mutable_dvpp_task() {
  // @@protoc_insertion_point(field_mutable:domi.TaskDef.dvpp_task)
  return _internal_mutable_dvpp_task();
}
inline void TaskDef::set_allocated_dvpp_task(::domi::DvppTaskDef* dvpp_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dvpp_task_;
  }
  if (dvpp_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dvpp_task);
    if (message_arena != submessage_arena) {
      dvpp_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dvpp_task, submessage_arena);
    }
    
  } else {
    
  }
  dvpp_task_ = dvpp_task;
  // @@protoc_insertion_point(field_set_allocated:domi.TaskDef.dvpp_task)
}

// -------------------------------------------------------------------

// KernelDef

// .domi.KernelContext context = 1;
inline bool KernelDef::_internal_has_context() const {
  return this != internal_default_instance() && context_ != nullptr;
}
inline bool KernelDef::has_context() const {
  return _internal_has_context();
}
inline void KernelDef::clear_context() {
  if (GetArena() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
}
inline const ::domi::KernelContext& KernelDef::_internal_context() const {
  const ::domi::KernelContext* p = context_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::KernelContext*>(
      &::domi::_KernelContext_default_instance_);
}
inline const ::domi::KernelContext& KernelDef::context() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.context)
  return _internal_context();
}
inline void KernelDef::unsafe_arena_set_allocated_context(
    ::domi::KernelContext* context) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(context_);
  }
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.KernelDef.context)
}
inline ::domi::KernelContext* KernelDef::release_context() {
  
  ::domi::KernelContext* temp = context_;
  context_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::KernelContext* KernelDef::unsafe_arena_release_context() {
  // @@protoc_insertion_point(field_release:domi.KernelDef.context)
  
  ::domi::KernelContext* temp = context_;
  context_ = nullptr;
  return temp;
}
inline ::domi::KernelContext* KernelDef::_internal_mutable_context() {
  
  if (context_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::KernelContext>(GetArena());
    context_ = p;
  }
  return context_;
}
inline ::domi::KernelContext* KernelDef::mutable_context() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDef.context)
  return _internal_mutable_context();
}
inline void KernelDef::set_allocated_context(::domi::KernelContext* context) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete context_;
  }
  if (context) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(context);
    if (message_arena != submessage_arena) {
      context = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDef.context)
}

// string stub_func = 10;
inline void KernelDef::clear_stub_func() {
  stub_func_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDef::stub_func() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.stub_func)
  return _internal_stub_func();
}
inline void KernelDef::set_stub_func(const std::string& value) {
  _internal_set_stub_func(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.stub_func)
}
inline std::string* KernelDef::mutable_stub_func() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDef.stub_func)
  return _internal_mutable_stub_func();
}
inline const std::string& KernelDef::_internal_stub_func() const {
  return stub_func_.Get();
}
inline void KernelDef::_internal_set_stub_func(const std::string& value) {
  
  stub_func_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDef::set_stub_func(std::string&& value) {
  
  stub_func_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDef.stub_func)
}
inline void KernelDef::set_stub_func(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stub_func_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDef.stub_func)
}
inline void KernelDef::set_stub_func(const char* value,
    size_t size) {
  
  stub_func_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDef.stub_func)
}
inline std::string* KernelDef::_internal_mutable_stub_func() {
  
  return stub_func_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDef::release_stub_func() {
  // @@protoc_insertion_point(field_release:domi.KernelDef.stub_func)
  return stub_func_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDef::set_allocated_stub_func(std::string* stub_func) {
  if (stub_func != nullptr) {
    
  } else {
    
  }
  stub_func_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stub_func,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDef.stub_func)
}

// uint32 block_dim = 11;
inline void KernelDef::clear_block_dim() {
  block_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDef::_internal_block_dim() const {
  return block_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDef::block_dim() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.block_dim)
  return _internal_block_dim();
}
inline void KernelDef::_internal_set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  block_dim_ = value;
}
inline void KernelDef::set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block_dim(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.block_dim)
}

// uint32 args_size = 12;
inline void KernelDef::clear_args_size() {
  args_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDef::_internal_args_size() const {
  return args_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDef::args_size() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.args_size)
  return _internal_args_size();
}
inline void KernelDef::_internal_set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  args_size_ = value;
}
inline void KernelDef::set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_args_size(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.args_size)
}

// bytes args = 13;
inline void KernelDef::clear_args() {
  args_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDef::args() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.args)
  return _internal_args();
}
inline void KernelDef::set_args(const std::string& value) {
  _internal_set_args(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.args)
}
inline std::string* KernelDef::mutable_args() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDef.args)
  return _internal_mutable_args();
}
inline const std::string& KernelDef::_internal_args() const {
  return args_.Get();
}
inline void KernelDef::_internal_set_args(const std::string& value) {
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDef::set_args(std::string&& value) {
  
  args_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDef.args)
}
inline void KernelDef::set_args(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDef.args)
}
inline void KernelDef::set_args(const void* value,
    size_t size) {
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDef.args)
}
inline std::string* KernelDef::_internal_mutable_args() {
  
  return args_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDef::release_args() {
  // @@protoc_insertion_point(field_release:domi.KernelDef.args)
  return args_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDef::set_allocated_args(std::string* args) {
  if (args != nullptr) {
    
  } else {
    
  }
  args_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), args,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDef.args)
}

// bytes sm_desc = 14;
inline void KernelDef::clear_sm_desc() {
  sm_desc_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDef::sm_desc() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.sm_desc)
  return _internal_sm_desc();
}
inline void KernelDef::set_sm_desc(const std::string& value) {
  _internal_set_sm_desc(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.sm_desc)
}
inline std::string* KernelDef::mutable_sm_desc() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDef.sm_desc)
  return _internal_mutable_sm_desc();
}
inline const std::string& KernelDef::_internal_sm_desc() const {
  return sm_desc_.Get();
}
inline void KernelDef::_internal_set_sm_desc(const std::string& value) {
  
  sm_desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDef::set_sm_desc(std::string&& value) {
  
  sm_desc_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDef.sm_desc)
}
inline void KernelDef::set_sm_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sm_desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDef.sm_desc)
}
inline void KernelDef::set_sm_desc(const void* value,
    size_t size) {
  
  sm_desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDef.sm_desc)
}
inline std::string* KernelDef::_internal_mutable_sm_desc() {
  
  return sm_desc_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDef::release_sm_desc() {
  // @@protoc_insertion_point(field_release:domi.KernelDef.sm_desc)
  return sm_desc_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDef::set_allocated_sm_desc(std::string* sm_desc) {
  if (sm_desc != nullptr) {
    
  } else {
    
  }
  sm_desc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sm_desc,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDef.sm_desc)
}

// bytes flowtable = 15;
inline void KernelDef::clear_flowtable() {
  flowtable_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDef::flowtable() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.flowtable)
  return _internal_flowtable();
}
inline void KernelDef::set_flowtable(const std::string& value) {
  _internal_set_flowtable(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.flowtable)
}
inline std::string* KernelDef::mutable_flowtable() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDef.flowtable)
  return _internal_mutable_flowtable();
}
inline const std::string& KernelDef::_internal_flowtable() const {
  return flowtable_.Get();
}
inline void KernelDef::_internal_set_flowtable(const std::string& value) {
  
  flowtable_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDef::set_flowtable(std::string&& value) {
  
  flowtable_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDef.flowtable)
}
inline void KernelDef::set_flowtable(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  flowtable_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDef.flowtable)
}
inline void KernelDef::set_flowtable(const void* value,
    size_t size) {
  
  flowtable_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDef.flowtable)
}
inline std::string* KernelDef::_internal_mutable_flowtable() {
  
  return flowtable_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDef::release_flowtable() {
  // @@protoc_insertion_point(field_release:domi.KernelDef.flowtable)
  return flowtable_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDef::set_allocated_flowtable(std::string* flowtable) {
  if (flowtable != nullptr) {
    
  } else {
    
  }
  flowtable_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), flowtable,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDef.flowtable)
}

// string so_name = 16;
inline void KernelDef::clear_so_name() {
  so_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDef::so_name() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.so_name)
  return _internal_so_name();
}
inline void KernelDef::set_so_name(const std::string& value) {
  _internal_set_so_name(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.so_name)
}
inline std::string* KernelDef::mutable_so_name() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDef.so_name)
  return _internal_mutable_so_name();
}
inline const std::string& KernelDef::_internal_so_name() const {
  return so_name_.Get();
}
inline void KernelDef::_internal_set_so_name(const std::string& value) {
  
  so_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDef::set_so_name(std::string&& value) {
  
  so_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDef.so_name)
}
inline void KernelDef::set_so_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  so_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDef.so_name)
}
inline void KernelDef::set_so_name(const char* value,
    size_t size) {
  
  so_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDef.so_name)
}
inline std::string* KernelDef::_internal_mutable_so_name() {
  
  return so_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDef::release_so_name() {
  // @@protoc_insertion_point(field_release:domi.KernelDef.so_name)
  return so_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDef::set_allocated_so_name(std::string* so_name) {
  if (so_name != nullptr) {
    
  } else {
    
  }
  so_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), so_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDef.so_name)
}

// string kernel_name = 17;
inline void KernelDef::clear_kernel_name() {
  kernel_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDef::kernel_name() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.kernel_name)
  return _internal_kernel_name();
}
inline void KernelDef::set_kernel_name(const std::string& value) {
  _internal_set_kernel_name(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.kernel_name)
}
inline std::string* KernelDef::mutable_kernel_name() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDef.kernel_name)
  return _internal_mutable_kernel_name();
}
inline const std::string& KernelDef::_internal_kernel_name() const {
  return kernel_name_.Get();
}
inline void KernelDef::_internal_set_kernel_name(const std::string& value) {
  
  kernel_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDef::set_kernel_name(std::string&& value) {
  
  kernel_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDef.kernel_name)
}
inline void KernelDef::set_kernel_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kernel_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDef.kernel_name)
}
inline void KernelDef::set_kernel_name(const char* value,
    size_t size) {
  
  kernel_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDef.kernel_name)
}
inline std::string* KernelDef::_internal_mutable_kernel_name() {
  
  return kernel_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDef::release_kernel_name() {
  // @@protoc_insertion_point(field_release:domi.KernelDef.kernel_name)
  return kernel_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDef::set_allocated_kernel_name(std::string* kernel_name) {
  if (kernel_name != nullptr) {
    
  } else {
    
  }
  kernel_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kernel_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDef.kernel_name)
}

// bytes kernel_ext_info = 18;
inline void KernelDef::clear_kernel_ext_info() {
  kernel_ext_info_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDef::kernel_ext_info() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.kernel_ext_info)
  return _internal_kernel_ext_info();
}
inline void KernelDef::set_kernel_ext_info(const std::string& value) {
  _internal_set_kernel_ext_info(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.kernel_ext_info)
}
inline std::string* KernelDef::mutable_kernel_ext_info() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDef.kernel_ext_info)
  return _internal_mutable_kernel_ext_info();
}
inline const std::string& KernelDef::_internal_kernel_ext_info() const {
  return kernel_ext_info_.Get();
}
inline void KernelDef::_internal_set_kernel_ext_info(const std::string& value) {
  
  kernel_ext_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDef::set_kernel_ext_info(std::string&& value) {
  
  kernel_ext_info_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDef.kernel_ext_info)
}
inline void KernelDef::set_kernel_ext_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kernel_ext_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDef.kernel_ext_info)
}
inline void KernelDef::set_kernel_ext_info(const void* value,
    size_t size) {
  
  kernel_ext_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDef.kernel_ext_info)
}
inline std::string* KernelDef::_internal_mutable_kernel_ext_info() {
  
  return kernel_ext_info_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDef::release_kernel_ext_info() {
  // @@protoc_insertion_point(field_release:domi.KernelDef.kernel_ext_info)
  return kernel_ext_info_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDef::set_allocated_kernel_ext_info(std::string* kernel_ext_info) {
  if (kernel_ext_info != nullptr) {
    
  } else {
    
  }
  kernel_ext_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kernel_ext_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDef.kernel_ext_info)
}

// uint32 kernel_ext_info_size = 19;
inline void KernelDef::clear_kernel_ext_info_size() {
  kernel_ext_info_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDef::_internal_kernel_ext_info_size() const {
  return kernel_ext_info_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDef::kernel_ext_info_size() const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.kernel_ext_info_size)
  return _internal_kernel_ext_info_size();
}
inline void KernelDef::_internal_set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  kernel_ext_info_size_ = value;
}
inline void KernelDef::set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kernel_ext_info_size(value);
  // @@protoc_insertion_point(field_set:domi.KernelDef.kernel_ext_info_size)
}

// repeated .domi.ArgsInfo args_info = 20;
inline int KernelDef::_internal_args_info_size() const {
  return args_info_.size();
}
inline int KernelDef::args_info_size() const {
  return _internal_args_info_size();
}
inline void KernelDef::clear_args_info() {
  args_info_.Clear();
}
inline ::domi::ArgsInfo* KernelDef::mutable_args_info(int index) {
  // @@protoc_insertion_point(field_mutable:domi.KernelDef.args_info)
  return args_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo >*
KernelDef::mutable_args_info() {
  // @@protoc_insertion_point(field_mutable_list:domi.KernelDef.args_info)
  return &args_info_;
}
inline const ::domi::ArgsInfo& KernelDef::_internal_args_info(int index) const {
  return args_info_.Get(index);
}
inline const ::domi::ArgsInfo& KernelDef::args_info(int index) const {
  // @@protoc_insertion_point(field_get:domi.KernelDef.args_info)
  return _internal_args_info(index);
}
inline ::domi::ArgsInfo* KernelDef::_internal_add_args_info() {
  return args_info_.Add();
}
inline ::domi::ArgsInfo* KernelDef::add_args_info() {
  // @@protoc_insertion_point(field_add:domi.KernelDef.args_info)
  return _internal_add_args_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo >&
KernelDef::args_info() const {
  // @@protoc_insertion_point(field_list:domi.KernelDef.args_info)
  return args_info_;
}

// -------------------------------------------------------------------

// KernelDefWithHandle

// .domi.KernelContext context = 1;
inline bool KernelDefWithHandle::_internal_has_context() const {
  return this != internal_default_instance() && context_ != nullptr;
}
inline bool KernelDefWithHandle::has_context() const {
  return _internal_has_context();
}
inline void KernelDefWithHandle::clear_context() {
  if (GetArena() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
}
inline const ::domi::KernelContext& KernelDefWithHandle::_internal_context() const {
  const ::domi::KernelContext* p = context_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::KernelContext*>(
      &::domi::_KernelContext_default_instance_);
}
inline const ::domi::KernelContext& KernelDefWithHandle::context() const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.context)
  return _internal_context();
}
inline void KernelDefWithHandle::unsafe_arena_set_allocated_context(
    ::domi::KernelContext* context) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(context_);
  }
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.KernelDefWithHandle.context)
}
inline ::domi::KernelContext* KernelDefWithHandle::release_context() {
  
  ::domi::KernelContext* temp = context_;
  context_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::KernelContext* KernelDefWithHandle::unsafe_arena_release_context() {
  // @@protoc_insertion_point(field_release:domi.KernelDefWithHandle.context)
  
  ::domi::KernelContext* temp = context_;
  context_ = nullptr;
  return temp;
}
inline ::domi::KernelContext* KernelDefWithHandle::_internal_mutable_context() {
  
  if (context_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::KernelContext>(GetArena());
    context_ = p;
  }
  return context_;
}
inline ::domi::KernelContext* KernelDefWithHandle::mutable_context() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDefWithHandle.context)
  return _internal_mutable_context();
}
inline void KernelDefWithHandle::set_allocated_context(::domi::KernelContext* context) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete context_;
  }
  if (context) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(context);
    if (message_arena != submessage_arena) {
      context = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDefWithHandle.context)
}

// uint64 handle = 10;
inline void KernelDefWithHandle::clear_handle() {
  handle_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 KernelDefWithHandle::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 KernelDefWithHandle::handle() const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.handle)
  return _internal_handle();
}
inline void KernelDefWithHandle::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  handle_ = value;
}
inline void KernelDefWithHandle::set_handle(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:domi.KernelDefWithHandle.handle)
}

// string dev_func = 11;
inline void KernelDefWithHandle::clear_dev_func() {
  dev_func_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDefWithHandle::dev_func() const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.dev_func)
  return _internal_dev_func();
}
inline void KernelDefWithHandle::set_dev_func(const std::string& value) {
  _internal_set_dev_func(value);
  // @@protoc_insertion_point(field_set:domi.KernelDefWithHandle.dev_func)
}
inline std::string* KernelDefWithHandle::mutable_dev_func() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDefWithHandle.dev_func)
  return _internal_mutable_dev_func();
}
inline const std::string& KernelDefWithHandle::_internal_dev_func() const {
  return dev_func_.Get();
}
inline void KernelDefWithHandle::_internal_set_dev_func(const std::string& value) {
  
  dev_func_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDefWithHandle::set_dev_func(std::string&& value) {
  
  dev_func_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDefWithHandle.dev_func)
}
inline void KernelDefWithHandle::set_dev_func(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dev_func_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDefWithHandle.dev_func)
}
inline void KernelDefWithHandle::set_dev_func(const char* value,
    size_t size) {
  
  dev_func_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDefWithHandle.dev_func)
}
inline std::string* KernelDefWithHandle::_internal_mutable_dev_func() {
  
  return dev_func_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDefWithHandle::release_dev_func() {
  // @@protoc_insertion_point(field_release:domi.KernelDefWithHandle.dev_func)
  return dev_func_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDefWithHandle::set_allocated_dev_func(std::string* dev_func) {
  if (dev_func != nullptr) {
    
  } else {
    
  }
  dev_func_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dev_func,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDefWithHandle.dev_func)
}

// uint32 block_dim = 12;
inline void KernelDefWithHandle::clear_block_dim() {
  block_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDefWithHandle::_internal_block_dim() const {
  return block_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDefWithHandle::block_dim() const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.block_dim)
  return _internal_block_dim();
}
inline void KernelDefWithHandle::_internal_set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  block_dim_ = value;
}
inline void KernelDefWithHandle::set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block_dim(value);
  // @@protoc_insertion_point(field_set:domi.KernelDefWithHandle.block_dim)
}

// uint32 args_size = 13;
inline void KernelDefWithHandle::clear_args_size() {
  args_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDefWithHandle::_internal_args_size() const {
  return args_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelDefWithHandle::args_size() const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.args_size)
  return _internal_args_size();
}
inline void KernelDefWithHandle::_internal_set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  args_size_ = value;
}
inline void KernelDefWithHandle::set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_args_size(value);
  // @@protoc_insertion_point(field_set:domi.KernelDefWithHandle.args_size)
}

// bytes args = 14;
inline void KernelDefWithHandle::clear_args() {
  args_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDefWithHandle::args() const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.args)
  return _internal_args();
}
inline void KernelDefWithHandle::set_args(const std::string& value) {
  _internal_set_args(value);
  // @@protoc_insertion_point(field_set:domi.KernelDefWithHandle.args)
}
inline std::string* KernelDefWithHandle::mutable_args() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDefWithHandle.args)
  return _internal_mutable_args();
}
inline const std::string& KernelDefWithHandle::_internal_args() const {
  return args_.Get();
}
inline void KernelDefWithHandle::_internal_set_args(const std::string& value) {
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDefWithHandle::set_args(std::string&& value) {
  
  args_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDefWithHandle.args)
}
inline void KernelDefWithHandle::set_args(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDefWithHandle.args)
}
inline void KernelDefWithHandle::set_args(const void* value,
    size_t size) {
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDefWithHandle.args)
}
inline std::string* KernelDefWithHandle::_internal_mutable_args() {
  
  return args_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDefWithHandle::release_args() {
  // @@protoc_insertion_point(field_release:domi.KernelDefWithHandle.args)
  return args_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDefWithHandle::set_allocated_args(std::string* args) {
  if (args != nullptr) {
    
  } else {
    
  }
  args_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), args,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDefWithHandle.args)
}

// bytes sm_desc = 15;
inline void KernelDefWithHandle::clear_sm_desc() {
  sm_desc_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDefWithHandle::sm_desc() const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.sm_desc)
  return _internal_sm_desc();
}
inline void KernelDefWithHandle::set_sm_desc(const std::string& value) {
  _internal_set_sm_desc(value);
  // @@protoc_insertion_point(field_set:domi.KernelDefWithHandle.sm_desc)
}
inline std::string* KernelDefWithHandle::mutable_sm_desc() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDefWithHandle.sm_desc)
  return _internal_mutable_sm_desc();
}
inline const std::string& KernelDefWithHandle::_internal_sm_desc() const {
  return sm_desc_.Get();
}
inline void KernelDefWithHandle::_internal_set_sm_desc(const std::string& value) {
  
  sm_desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDefWithHandle::set_sm_desc(std::string&& value) {
  
  sm_desc_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDefWithHandle.sm_desc)
}
inline void KernelDefWithHandle::set_sm_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sm_desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDefWithHandle.sm_desc)
}
inline void KernelDefWithHandle::set_sm_desc(const void* value,
    size_t size) {
  
  sm_desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDefWithHandle.sm_desc)
}
inline std::string* KernelDefWithHandle::_internal_mutable_sm_desc() {
  
  return sm_desc_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDefWithHandle::release_sm_desc() {
  // @@protoc_insertion_point(field_release:domi.KernelDefWithHandle.sm_desc)
  return sm_desc_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDefWithHandle::set_allocated_sm_desc(std::string* sm_desc) {
  if (sm_desc != nullptr) {
    
  } else {
    
  }
  sm_desc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sm_desc,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDefWithHandle.sm_desc)
}

// string original_kernel_key = 16;
inline void KernelDefWithHandle::clear_original_kernel_key() {
  original_kernel_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDefWithHandle::original_kernel_key() const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.original_kernel_key)
  return _internal_original_kernel_key();
}
inline void KernelDefWithHandle::set_original_kernel_key(const std::string& value) {
  _internal_set_original_kernel_key(value);
  // @@protoc_insertion_point(field_set:domi.KernelDefWithHandle.original_kernel_key)
}
inline std::string* KernelDefWithHandle::mutable_original_kernel_key() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDefWithHandle.original_kernel_key)
  return _internal_mutable_original_kernel_key();
}
inline const std::string& KernelDefWithHandle::_internal_original_kernel_key() const {
  return original_kernel_key_.Get();
}
inline void KernelDefWithHandle::_internal_set_original_kernel_key(const std::string& value) {
  
  original_kernel_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDefWithHandle::set_original_kernel_key(std::string&& value) {
  
  original_kernel_key_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDefWithHandle.original_kernel_key)
}
inline void KernelDefWithHandle::set_original_kernel_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  original_kernel_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDefWithHandle.original_kernel_key)
}
inline void KernelDefWithHandle::set_original_kernel_key(const char* value,
    size_t size) {
  
  original_kernel_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDefWithHandle.original_kernel_key)
}
inline std::string* KernelDefWithHandle::_internal_mutable_original_kernel_key() {
  
  return original_kernel_key_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDefWithHandle::release_original_kernel_key() {
  // @@protoc_insertion_point(field_release:domi.KernelDefWithHandle.original_kernel_key)
  return original_kernel_key_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDefWithHandle::set_allocated_original_kernel_key(std::string* original_kernel_key) {
  if (original_kernel_key != nullptr) {
    
  } else {
    
  }
  original_kernel_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), original_kernel_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDefWithHandle.original_kernel_key)
}

// string node_info = 17;
inline void KernelDefWithHandle::clear_node_info() {
  node_info_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelDefWithHandle::node_info() const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.node_info)
  return _internal_node_info();
}
inline void KernelDefWithHandle::set_node_info(const std::string& value) {
  _internal_set_node_info(value);
  // @@protoc_insertion_point(field_set:domi.KernelDefWithHandle.node_info)
}
inline std::string* KernelDefWithHandle::mutable_node_info() {
  // @@protoc_insertion_point(field_mutable:domi.KernelDefWithHandle.node_info)
  return _internal_mutable_node_info();
}
inline const std::string& KernelDefWithHandle::_internal_node_info() const {
  return node_info_.Get();
}
inline void KernelDefWithHandle::_internal_set_node_info(const std::string& value) {
  
  node_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelDefWithHandle::set_node_info(std::string&& value) {
  
  node_info_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelDefWithHandle.node_info)
}
inline void KernelDefWithHandle::set_node_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  node_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelDefWithHandle.node_info)
}
inline void KernelDefWithHandle::set_node_info(const char* value,
    size_t size) {
  
  node_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelDefWithHandle.node_info)
}
inline std::string* KernelDefWithHandle::_internal_mutable_node_info() {
  
  return node_info_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelDefWithHandle::release_node_info() {
  // @@protoc_insertion_point(field_release:domi.KernelDefWithHandle.node_info)
  return node_info_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelDefWithHandle::set_allocated_node_info(std::string* node_info) {
  if (node_info != nullptr) {
    
  } else {
    
  }
  node_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), node_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelDefWithHandle.node_info)
}

// repeated .domi.ArgsInfo args_info = 18;
inline int KernelDefWithHandle::_internal_args_info_size() const {
  return args_info_.size();
}
inline int KernelDefWithHandle::args_info_size() const {
  return _internal_args_info_size();
}
inline void KernelDefWithHandle::clear_args_info() {
  args_info_.Clear();
}
inline ::domi::ArgsInfo* KernelDefWithHandle::mutable_args_info(int index) {
  // @@protoc_insertion_point(field_mutable:domi.KernelDefWithHandle.args_info)
  return args_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo >*
KernelDefWithHandle::mutable_args_info() {
  // @@protoc_insertion_point(field_mutable_list:domi.KernelDefWithHandle.args_info)
  return &args_info_;
}
inline const ::domi::ArgsInfo& KernelDefWithHandle::_internal_args_info(int index) const {
  return args_info_.Get(index);
}
inline const ::domi::ArgsInfo& KernelDefWithHandle::args_info(int index) const {
  // @@protoc_insertion_point(field_get:domi.KernelDefWithHandle.args_info)
  return _internal_args_info(index);
}
inline ::domi::ArgsInfo* KernelDefWithHandle::_internal_add_args_info() {
  return args_info_.Add();
}
inline ::domi::ArgsInfo* KernelDefWithHandle::add_args_info() {
  // @@protoc_insertion_point(field_add:domi.KernelDefWithHandle.args_info)
  return _internal_add_args_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ArgsInfo >&
KernelDefWithHandle::args_info() const {
  // @@protoc_insertion_point(field_list:domi.KernelDefWithHandle.args_info)
  return args_info_;
}

// -------------------------------------------------------------------

// KernelContext

// uint32 kernel_type = 1;
inline void KernelContext::clear_kernel_type() {
  kernel_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::_internal_kernel_type() const {
  return kernel_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::kernel_type() const {
  // @@protoc_insertion_point(field_get:domi.KernelContext.kernel_type)
  return _internal_kernel_type();
}
inline void KernelContext::_internal_set_kernel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  kernel_type_ = value;
}
inline void KernelContext::set_kernel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kernel_type(value);
  // @@protoc_insertion_point(field_set:domi.KernelContext.kernel_type)
}

// uint32 op_id = 2;
inline void KernelContext::clear_op_id() {
  op_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::_internal_op_id() const {
  return op_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::op_id() const {
  // @@protoc_insertion_point(field_get:domi.KernelContext.op_id)
  return _internal_op_id();
}
inline void KernelContext::_internal_set_op_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_id_ = value;
}
inline void KernelContext::set_op_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_id(value);
  // @@protoc_insertion_point(field_set:domi.KernelContext.op_id)
}

// uint32 kernel_func_id = 3;
inline void KernelContext::clear_kernel_func_id() {
  kernel_func_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::_internal_kernel_func_id() const {
  return kernel_func_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::kernel_func_id() const {
  // @@protoc_insertion_point(field_get:domi.KernelContext.kernel_func_id)
  return _internal_kernel_func_id();
}
inline void KernelContext::_internal_set_kernel_func_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  kernel_func_id_ = value;
}
inline void KernelContext::set_kernel_func_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kernel_func_id(value);
  // @@protoc_insertion_point(field_set:domi.KernelContext.kernel_func_id)
}

// uint32 op_index = 4;
inline void KernelContext::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::op_index() const {
  // @@protoc_insertion_point(field_get:domi.KernelContext.op_index)
  return _internal_op_index();
}
inline void KernelContext::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void KernelContext::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.KernelContext.op_index)
}

// bool is_flowtable = 5;
inline void KernelContext::clear_is_flowtable() {
  is_flowtable_ = false;
}
inline bool KernelContext::_internal_is_flowtable() const {
  return is_flowtable_;
}
inline bool KernelContext::is_flowtable() const {
  // @@protoc_insertion_point(field_get:domi.KernelContext.is_flowtable)
  return _internal_is_flowtable();
}
inline void KernelContext::_internal_set_is_flowtable(bool value) {
  
  is_flowtable_ = value;
}
inline void KernelContext::set_is_flowtable(bool value) {
  _internal_set_is_flowtable(value);
  // @@protoc_insertion_point(field_set:domi.KernelContext.is_flowtable)
}

// bytes args_offset = 6;
inline void KernelContext::clear_args_offset() {
  args_offset_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelContext::args_offset() const {
  // @@protoc_insertion_point(field_get:domi.KernelContext.args_offset)
  return _internal_args_offset();
}
inline void KernelContext::set_args_offset(const std::string& value) {
  _internal_set_args_offset(value);
  // @@protoc_insertion_point(field_set:domi.KernelContext.args_offset)
}
inline std::string* KernelContext::mutable_args_offset() {
  // @@protoc_insertion_point(field_mutable:domi.KernelContext.args_offset)
  return _internal_mutable_args_offset();
}
inline const std::string& KernelContext::_internal_args_offset() const {
  return args_offset_.Get();
}
inline void KernelContext::_internal_set_args_offset(const std::string& value) {
  
  args_offset_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelContext::set_args_offset(std::string&& value) {
  
  args_offset_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelContext.args_offset)
}
inline void KernelContext::set_args_offset(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  args_offset_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelContext.args_offset)
}
inline void KernelContext::set_args_offset(const void* value,
    size_t size) {
  
  args_offset_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelContext.args_offset)
}
inline std::string* KernelContext::_internal_mutable_args_offset() {
  
  return args_offset_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelContext::release_args_offset() {
  // @@protoc_insertion_point(field_release:domi.KernelContext.args_offset)
  return args_offset_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelContext::set_allocated_args_offset(std::string* args_offset) {
  if (args_offset != nullptr) {
    
  } else {
    
  }
  args_offset_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), args_offset,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelContext.args_offset)
}

// uint32 args_count = 7;
inline void KernelContext::clear_args_count() {
  args_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::_internal_args_count() const {
  return args_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::args_count() const {
  // @@protoc_insertion_point(field_get:domi.KernelContext.args_count)
  return _internal_args_count();
}
inline void KernelContext::_internal_set_args_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  args_count_ = value;
}
inline void KernelContext::set_args_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_args_count(value);
  // @@protoc_insertion_point(field_set:domi.KernelContext.args_count)
}

// repeated uint32 origin_op_index = 8;
inline int KernelContext::_internal_origin_op_index_size() const {
  return origin_op_index_.size();
}
inline int KernelContext::origin_op_index_size() const {
  return _internal_origin_op_index_size();
}
inline void KernelContext::clear_origin_op_index() {
  origin_op_index_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::_internal_origin_op_index(int index) const {
  return origin_op_index_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelContext::origin_op_index(int index) const {
  // @@protoc_insertion_point(field_get:domi.KernelContext.origin_op_index)
  return _internal_origin_op_index(index);
}
inline void KernelContext::set_origin_op_index(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  origin_op_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.KernelContext.origin_op_index)
}
inline void KernelContext::_internal_add_origin_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  origin_op_index_.Add(value);
}
inline void KernelContext::add_origin_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_origin_op_index(value);
  // @@protoc_insertion_point(field_add:domi.KernelContext.origin_op_index)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
KernelContext::_internal_origin_op_index() const {
  return origin_op_index_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
KernelContext::origin_op_index() const {
  // @@protoc_insertion_point(field_list:domi.KernelContext.origin_op_index)
  return _internal_origin_op_index();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
KernelContext::_internal_mutable_origin_op_index() {
  return &origin_op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
KernelContext::mutable_origin_op_index() {
  // @@protoc_insertion_point(field_mutable_list:domi.KernelContext.origin_op_index)
  return _internal_mutable_origin_op_index();
}

// -------------------------------------------------------------------

// ArgsInfo

// .domi.ArgsInfo.ArgsType arg_type = 1;
inline void ArgsInfo::clear_arg_type() {
  arg_type_ = 0;
}
inline ::domi::ArgsInfo_ArgsType ArgsInfo::_internal_arg_type() const {
  return static_cast< ::domi::ArgsInfo_ArgsType >(arg_type_);
}
inline ::domi::ArgsInfo_ArgsType ArgsInfo::arg_type() const {
  // @@protoc_insertion_point(field_get:domi.ArgsInfo.arg_type)
  return _internal_arg_type();
}
inline void ArgsInfo::_internal_set_arg_type(::domi::ArgsInfo_ArgsType value) {
  
  arg_type_ = value;
}
inline void ArgsInfo::set_arg_type(::domi::ArgsInfo_ArgsType value) {
  _internal_set_arg_type(value);
  // @@protoc_insertion_point(field_set:domi.ArgsInfo.arg_type)
}

// .domi.ArgsInfo.ArgsFormat arg_format = 2;
inline void ArgsInfo::clear_arg_format() {
  arg_format_ = 0;
}
inline ::domi::ArgsInfo_ArgsFormat ArgsInfo::_internal_arg_format() const {
  return static_cast< ::domi::ArgsInfo_ArgsFormat >(arg_format_);
}
inline ::domi::ArgsInfo_ArgsFormat ArgsInfo::arg_format() const {
  // @@protoc_insertion_point(field_get:domi.ArgsInfo.arg_format)
  return _internal_arg_format();
}
inline void ArgsInfo::_internal_set_arg_format(::domi::ArgsInfo_ArgsFormat value) {
  
  arg_format_ = value;
}
inline void ArgsInfo::set_arg_format(::domi::ArgsInfo_ArgsFormat value) {
  _internal_set_arg_format(value);
  // @@protoc_insertion_point(field_set:domi.ArgsInfo.arg_format)
}

// int32 start_index = 3;
inline void ArgsInfo::clear_start_index() {
  start_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ArgsInfo::_internal_start_index() const {
  return start_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ArgsInfo::start_index() const {
  // @@protoc_insertion_point(field_get:domi.ArgsInfo.start_index)
  return _internal_start_index();
}
inline void ArgsInfo::_internal_set_start_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  start_index_ = value;
}
inline void ArgsInfo::set_start_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_start_index(value);
  // @@protoc_insertion_point(field_set:domi.ArgsInfo.start_index)
}

// uint32 size = 4;
inline void ArgsInfo::clear_size() {
  size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ArgsInfo::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ArgsInfo::size() const {
  // @@protoc_insertion_point(field_get:domi.ArgsInfo.size)
  return _internal_size();
}
inline void ArgsInfo::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  size_ = value;
}
inline void ArgsInfo::set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:domi.ArgsInfo.size)
}

// -------------------------------------------------------------------

// KernelExDef

// uint32 flags = 1;
inline void KernelExDef::clear_flags() {
  flags_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::_internal_flags() const {
  return flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::flags() const {
  // @@protoc_insertion_point(field_get:domi.KernelExDef.flags)
  return _internal_flags();
}
inline void KernelExDef::_internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  flags_ = value;
}
inline void KernelExDef::set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:domi.KernelExDef.flags)
}

// uint32 op_index = 4;
inline void KernelExDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.KernelExDef.op_index)
  return _internal_op_index();
}
inline void KernelExDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void KernelExDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.KernelExDef.op_index)
}

// uint32 args_size = 12;
inline void KernelExDef::clear_args_size() {
  args_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::_internal_args_size() const {
  return args_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::args_size() const {
  // @@protoc_insertion_point(field_get:domi.KernelExDef.args_size)
  return _internal_args_size();
}
inline void KernelExDef::_internal_set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  args_size_ = value;
}
inline void KernelExDef::set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_args_size(value);
  // @@protoc_insertion_point(field_set:domi.KernelExDef.args_size)
}

// bytes args = 13;
inline void KernelExDef::clear_args() {
  args_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelExDef::args() const {
  // @@protoc_insertion_point(field_get:domi.KernelExDef.args)
  return _internal_args();
}
inline void KernelExDef::set_args(const std::string& value) {
  _internal_set_args(value);
  // @@protoc_insertion_point(field_set:domi.KernelExDef.args)
}
inline std::string* KernelExDef::mutable_args() {
  // @@protoc_insertion_point(field_mutable:domi.KernelExDef.args)
  return _internal_mutable_args();
}
inline const std::string& KernelExDef::_internal_args() const {
  return args_.Get();
}
inline void KernelExDef::_internal_set_args(const std::string& value) {
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelExDef::set_args(std::string&& value) {
  
  args_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelExDef.args)
}
inline void KernelExDef::set_args(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelExDef.args)
}
inline void KernelExDef::set_args(const void* value,
    size_t size) {
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelExDef.args)
}
inline std::string* KernelExDef::_internal_mutable_args() {
  
  return args_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelExDef::release_args() {
  // @@protoc_insertion_point(field_release:domi.KernelExDef.args)
  return args_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelExDef::set_allocated_args(std::string* args) {
  if (args != nullptr) {
    
  } else {
    
  }
  args_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), args,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelExDef.args)
}

// bytes task_info = 14;
inline void KernelExDef::clear_task_info() {
  task_info_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelExDef::task_info() const {
  // @@protoc_insertion_point(field_get:domi.KernelExDef.task_info)
  return _internal_task_info();
}
inline void KernelExDef::set_task_info(const std::string& value) {
  _internal_set_task_info(value);
  // @@protoc_insertion_point(field_set:domi.KernelExDef.task_info)
}
inline std::string* KernelExDef::mutable_task_info() {
  // @@protoc_insertion_point(field_mutable:domi.KernelExDef.task_info)
  return _internal_mutable_task_info();
}
inline const std::string& KernelExDef::_internal_task_info() const {
  return task_info_.Get();
}
inline void KernelExDef::_internal_set_task_info(const std::string& value) {
  
  task_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelExDef::set_task_info(std::string&& value) {
  
  task_info_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelExDef.task_info)
}
inline void KernelExDef::set_task_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  task_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelExDef.task_info)
}
inline void KernelExDef::set_task_info(const void* value,
    size_t size) {
  
  task_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelExDef.task_info)
}
inline std::string* KernelExDef::_internal_mutable_task_info() {
  
  return task_info_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelExDef::release_task_info() {
  // @@protoc_insertion_point(field_release:domi.KernelExDef.task_info)
  return task_info_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelExDef::set_allocated_task_info(std::string* task_info) {
  if (task_info != nullptr) {
    
  } else {
    
  }
  task_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), task_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelExDef.task_info)
}

// uint32 task_info_size = 15;
inline void KernelExDef::clear_task_info_size() {
  task_info_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::_internal_task_info_size() const {
  return task_info_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::task_info_size() const {
  // @@protoc_insertion_point(field_get:domi.KernelExDef.task_info_size)
  return _internal_task_info_size();
}
inline void KernelExDef::_internal_set_task_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  task_info_size_ = value;
}
inline void KernelExDef::set_task_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_task_info_size(value);
  // @@protoc_insertion_point(field_set:domi.KernelExDef.task_info_size)
}

// bytes kernel_ext_info = 16;
inline void KernelExDef::clear_kernel_ext_info() {
  kernel_ext_info_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelExDef::kernel_ext_info() const {
  // @@protoc_insertion_point(field_get:domi.KernelExDef.kernel_ext_info)
  return _internal_kernel_ext_info();
}
inline void KernelExDef::set_kernel_ext_info(const std::string& value) {
  _internal_set_kernel_ext_info(value);
  // @@protoc_insertion_point(field_set:domi.KernelExDef.kernel_ext_info)
}
inline std::string* KernelExDef::mutable_kernel_ext_info() {
  // @@protoc_insertion_point(field_mutable:domi.KernelExDef.kernel_ext_info)
  return _internal_mutable_kernel_ext_info();
}
inline const std::string& KernelExDef::_internal_kernel_ext_info() const {
  return kernel_ext_info_.Get();
}
inline void KernelExDef::_internal_set_kernel_ext_info(const std::string& value) {
  
  kernel_ext_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelExDef::set_kernel_ext_info(std::string&& value) {
  
  kernel_ext_info_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelExDef.kernel_ext_info)
}
inline void KernelExDef::set_kernel_ext_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kernel_ext_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelExDef.kernel_ext_info)
}
inline void KernelExDef::set_kernel_ext_info(const void* value,
    size_t size) {
  
  kernel_ext_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelExDef.kernel_ext_info)
}
inline std::string* KernelExDef::_internal_mutable_kernel_ext_info() {
  
  return kernel_ext_info_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelExDef::release_kernel_ext_info() {
  // @@protoc_insertion_point(field_release:domi.KernelExDef.kernel_ext_info)
  return kernel_ext_info_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelExDef::set_allocated_kernel_ext_info(std::string* kernel_ext_info) {
  if (kernel_ext_info != nullptr) {
    
  } else {
    
  }
  kernel_ext_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kernel_ext_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelExDef.kernel_ext_info)
}

// uint32 kernel_ext_info_size = 17;
inline void KernelExDef::clear_kernel_ext_info_size() {
  kernel_ext_info_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::_internal_kernel_ext_info_size() const {
  return kernel_ext_info_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelExDef::kernel_ext_info_size() const {
  // @@protoc_insertion_point(field_get:domi.KernelExDef.kernel_ext_info_size)
  return _internal_kernel_ext_info_size();
}
inline void KernelExDef::_internal_set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  kernel_ext_info_size_ = value;
}
inline void KernelExDef::set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kernel_ext_info_size(value);
  // @@protoc_insertion_point(field_set:domi.KernelExDef.kernel_ext_info_size)
}

// -------------------------------------------------------------------

// KernelHcclDef

// uint32 op_index = 8;
inline void KernelHcclDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelHcclDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KernelHcclDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.KernelHcclDef.op_index)
  return _internal_op_index();
}
inline void KernelHcclDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void KernelHcclDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.KernelHcclDef.op_index)
}

// string hccl_type = 9;
inline void KernelHcclDef::clear_hccl_type() {
  hccl_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& KernelHcclDef::hccl_type() const {
  // @@protoc_insertion_point(field_get:domi.KernelHcclDef.hccl_type)
  return _internal_hccl_type();
}
inline void KernelHcclDef::set_hccl_type(const std::string& value) {
  _internal_set_hccl_type(value);
  // @@protoc_insertion_point(field_set:domi.KernelHcclDef.hccl_type)
}
inline std::string* KernelHcclDef::mutable_hccl_type() {
  // @@protoc_insertion_point(field_mutable:domi.KernelHcclDef.hccl_type)
  return _internal_mutable_hccl_type();
}
inline const std::string& KernelHcclDef::_internal_hccl_type() const {
  return hccl_type_.Get();
}
inline void KernelHcclDef::_internal_set_hccl_type(const std::string& value) {
  
  hccl_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void KernelHcclDef::set_hccl_type(std::string&& value) {
  
  hccl_type_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.KernelHcclDef.hccl_type)
}
inline void KernelHcclDef::set_hccl_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hccl_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.KernelHcclDef.hccl_type)
}
inline void KernelHcclDef::set_hccl_type(const char* value,
    size_t size) {
  
  hccl_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.KernelHcclDef.hccl_type)
}
inline std::string* KernelHcclDef::_internal_mutable_hccl_type() {
  
  return hccl_type_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* KernelHcclDef::release_hccl_type() {
  // @@protoc_insertion_point(field_release:domi.KernelHcclDef.hccl_type)
  return hccl_type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void KernelHcclDef::set_allocated_hccl_type(std::string* hccl_type) {
  if (hccl_type != nullptr) {
    
  } else {
    
  }
  hccl_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hccl_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.KernelHcclDef.hccl_type)
}

// repeated int32 input_zero_copy_flag = 10;
inline int KernelHcclDef::_internal_input_zero_copy_flag_size() const {
  return input_zero_copy_flag_.size();
}
inline int KernelHcclDef::input_zero_copy_flag_size() const {
  return _internal_input_zero_copy_flag_size();
}
inline void KernelHcclDef::clear_input_zero_copy_flag() {
  input_zero_copy_flag_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 KernelHcclDef::_internal_input_zero_copy_flag(int index) const {
  return input_zero_copy_flag_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 KernelHcclDef::input_zero_copy_flag(int index) const {
  // @@protoc_insertion_point(field_get:domi.KernelHcclDef.input_zero_copy_flag)
  return _internal_input_zero_copy_flag(index);
}
inline void KernelHcclDef::set_input_zero_copy_flag(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  input_zero_copy_flag_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.KernelHcclDef.input_zero_copy_flag)
}
inline void KernelHcclDef::_internal_add_input_zero_copy_flag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  input_zero_copy_flag_.Add(value);
}
inline void KernelHcclDef::add_input_zero_copy_flag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_input_zero_copy_flag(value);
  // @@protoc_insertion_point(field_add:domi.KernelHcclDef.input_zero_copy_flag)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
KernelHcclDef::_internal_input_zero_copy_flag() const {
  return input_zero_copy_flag_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
KernelHcclDef::input_zero_copy_flag() const {
  // @@protoc_insertion_point(field_list:domi.KernelHcclDef.input_zero_copy_flag)
  return _internal_input_zero_copy_flag();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
KernelHcclDef::_internal_mutable_input_zero_copy_flag() {
  return &input_zero_copy_flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
KernelHcclDef::mutable_input_zero_copy_flag() {
  // @@protoc_insertion_point(field_mutable_list:domi.KernelHcclDef.input_zero_copy_flag)
  return _internal_mutable_input_zero_copy_flag();
}

// repeated int32 output_zero_copy_flag = 11;
inline int KernelHcclDef::_internal_output_zero_copy_flag_size() const {
  return output_zero_copy_flag_.size();
}
inline int KernelHcclDef::output_zero_copy_flag_size() const {
  return _internal_output_zero_copy_flag_size();
}
inline void KernelHcclDef::clear_output_zero_copy_flag() {
  output_zero_copy_flag_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 KernelHcclDef::_internal_output_zero_copy_flag(int index) const {
  return output_zero_copy_flag_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 KernelHcclDef::output_zero_copy_flag(int index) const {
  // @@protoc_insertion_point(field_get:domi.KernelHcclDef.output_zero_copy_flag)
  return _internal_output_zero_copy_flag(index);
}
inline void KernelHcclDef::set_output_zero_copy_flag(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  output_zero_copy_flag_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.KernelHcclDef.output_zero_copy_flag)
}
inline void KernelHcclDef::_internal_add_output_zero_copy_flag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  output_zero_copy_flag_.Add(value);
}
inline void KernelHcclDef::add_output_zero_copy_flag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_output_zero_copy_flag(value);
  // @@protoc_insertion_point(field_add:domi.KernelHcclDef.output_zero_copy_flag)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
KernelHcclDef::_internal_output_zero_copy_flag() const {
  return output_zero_copy_flag_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
KernelHcclDef::output_zero_copy_flag() const {
  // @@protoc_insertion_point(field_list:domi.KernelHcclDef.output_zero_copy_flag)
  return _internal_output_zero_copy_flag();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
KernelHcclDef::_internal_mutable_output_zero_copy_flag() {
  return &output_zero_copy_flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
KernelHcclDef::mutable_output_zero_copy_flag() {
  // @@protoc_insertion_point(field_mutable_list:domi.KernelHcclDef.output_zero_copy_flag)
  return _internal_mutable_output_zero_copy_flag();
}

// -------------------------------------------------------------------

// EventExDef

// uint32 op_index = 1;
inline void EventExDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EventExDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EventExDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.EventExDef.op_index)
  return _internal_op_index();
}
inline void EventExDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void EventExDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.EventExDef.op_index)
}

// uint32 event_type = 2;
inline void EventExDef::clear_event_type() {
  event_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EventExDef::_internal_event_type() const {
  return event_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EventExDef::event_type() const {
  // @@protoc_insertion_point(field_get:domi.EventExDef.event_type)
  return _internal_event_type();
}
inline void EventExDef::_internal_set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  event_type_ = value;
}
inline void EventExDef::set_event_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:domi.EventExDef.event_type)
}

// -------------------------------------------------------------------

// LogTimeStampDef

// uint64 logid = 1;
inline void LogTimeStampDef::clear_logid() {
  logid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogTimeStampDef::_internal_logid() const {
  return logid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogTimeStampDef::logid() const {
  // @@protoc_insertion_point(field_get:domi.LogTimeStampDef.logid)
  return _internal_logid();
}
inline void LogTimeStampDef::_internal_set_logid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  logid_ = value;
}
inline void LogTimeStampDef::set_logid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_logid(value);
  // @@protoc_insertion_point(field_set:domi.LogTimeStampDef.logid)
}

// bool notify = 2;
inline void LogTimeStampDef::clear_notify() {
  notify_ = false;
}
inline bool LogTimeStampDef::_internal_notify() const {
  return notify_;
}
inline bool LogTimeStampDef::notify() const {
  // @@protoc_insertion_point(field_get:domi.LogTimeStampDef.notify)
  return _internal_notify();
}
inline void LogTimeStampDef::_internal_set_notify(bool value) {
  
  notify_ = value;
}
inline void LogTimeStampDef::set_notify(bool value) {
  _internal_set_notify(value);
  // @@protoc_insertion_point(field_set:domi.LogTimeStampDef.notify)
}

// uint32 flat = 3;
inline void LogTimeStampDef::clear_flat() {
  flat_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogTimeStampDef::_internal_flat() const {
  return flat_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogTimeStampDef::flat() const {
  // @@protoc_insertion_point(field_get:domi.LogTimeStampDef.flat)
  return _internal_flat();
}
inline void LogTimeStampDef::_internal_set_flat(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  flat_ = value;
}
inline void LogTimeStampDef::set_flat(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flat(value);
  // @@protoc_insertion_point(field_set:domi.LogTimeStampDef.flat)
}

// -------------------------------------------------------------------

// MemcpyAsyncDef

// uint64 dst = 1;
inline void MemcpyAsyncDef::clear_dst() {
  dst_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemcpyAsyncDef::_internal_dst() const {
  return dst_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemcpyAsyncDef::dst() const {
  // @@protoc_insertion_point(field_get:domi.MemcpyAsyncDef.dst)
  return _internal_dst();
}
inline void MemcpyAsyncDef::_internal_set_dst(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  dst_ = value;
}
inline void MemcpyAsyncDef::set_dst(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_dst(value);
  // @@protoc_insertion_point(field_set:domi.MemcpyAsyncDef.dst)
}

// uint64 dst_max = 2;
inline void MemcpyAsyncDef::clear_dst_max() {
  dst_max_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemcpyAsyncDef::_internal_dst_max() const {
  return dst_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemcpyAsyncDef::dst_max() const {
  // @@protoc_insertion_point(field_get:domi.MemcpyAsyncDef.dst_max)
  return _internal_dst_max();
}
inline void MemcpyAsyncDef::_internal_set_dst_max(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  dst_max_ = value;
}
inline void MemcpyAsyncDef::set_dst_max(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_dst_max(value);
  // @@protoc_insertion_point(field_set:domi.MemcpyAsyncDef.dst_max)
}

// uint64 src = 3;
inline void MemcpyAsyncDef::clear_src() {
  src_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemcpyAsyncDef::_internal_src() const {
  return src_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemcpyAsyncDef::src() const {
  // @@protoc_insertion_point(field_get:domi.MemcpyAsyncDef.src)
  return _internal_src();
}
inline void MemcpyAsyncDef::_internal_set_src(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  src_ = value;
}
inline void MemcpyAsyncDef::set_src(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_src(value);
  // @@protoc_insertion_point(field_set:domi.MemcpyAsyncDef.src)
}

// uint64 count = 4;
inline void MemcpyAsyncDef::clear_count() {
  count_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemcpyAsyncDef::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemcpyAsyncDef::count() const {
  // @@protoc_insertion_point(field_get:domi.MemcpyAsyncDef.count)
  return _internal_count();
}
inline void MemcpyAsyncDef::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  count_ = value;
}
inline void MemcpyAsyncDef::set_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:domi.MemcpyAsyncDef.count)
}

// uint32 kind = 5;
inline void MemcpyAsyncDef::clear_kind() {
  kind_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemcpyAsyncDef::_internal_kind() const {
  return kind_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemcpyAsyncDef::kind() const {
  // @@protoc_insertion_point(field_get:domi.MemcpyAsyncDef.kind)
  return _internal_kind();
}
inline void MemcpyAsyncDef::_internal_set_kind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  kind_ = value;
}
inline void MemcpyAsyncDef::set_kind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:domi.MemcpyAsyncDef.kind)
}

// uint32 op_index = 6;
inline void MemcpyAsyncDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemcpyAsyncDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemcpyAsyncDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.MemcpyAsyncDef.op_index)
  return _internal_op_index();
}
inline void MemcpyAsyncDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void MemcpyAsyncDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.MemcpyAsyncDef.op_index)
}

// -------------------------------------------------------------------

// StreamSwitchDef

// uint32 op_index = 1;
inline void StreamSwitchDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchDef.op_index)
  return _internal_op_index();
}
inline void StreamSwitchDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void StreamSwitchDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchDef.op_index)
}

// uint32 true_stream_id = 2;
inline void StreamSwitchDef::clear_true_stream_id() {
  true_stream_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchDef::_internal_true_stream_id() const {
  return true_stream_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchDef::true_stream_id() const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchDef.true_stream_id)
  return _internal_true_stream_id();
}
inline void StreamSwitchDef::_internal_set_true_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  true_stream_id_ = value;
}
inline void StreamSwitchDef::set_true_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_true_stream_id(value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchDef.true_stream_id)
}

// int64 value = 3;
inline void StreamSwitchDef::clear_value() {
  value_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StreamSwitchDef::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StreamSwitchDef::value() const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchDef.value)
  return _internal_value();
}
inline void StreamSwitchDef::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  value_ = value;
}
inline void StreamSwitchDef::set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchDef.value)
}

// uint64 value_ptr = 4;
inline void StreamSwitchDef::clear_value_ptr() {
  value_ptr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StreamSwitchDef::_internal_value_ptr() const {
  return value_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StreamSwitchDef::value_ptr() const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchDef.value_ptr)
  return _internal_value_ptr();
}
inline void StreamSwitchDef::_internal_set_value_ptr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  value_ptr_ = value;
}
inline void StreamSwitchDef::set_value_ptr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_value_ptr(value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchDef.value_ptr)
}

// uint32 data_type = 5;
inline void StreamSwitchDef::clear_data_type() {
  data_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchDef::_internal_data_type() const {
  return data_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchDef::data_type() const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchDef.data_type)
  return _internal_data_type();
}
inline void StreamSwitchDef::_internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_type_ = value;
}
inline void StreamSwitchDef::set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_type(value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchDef.data_type)
}

// -------------------------------------------------------------------

// StreamActiveDef

// uint32 op_index = 1;
inline void StreamActiveDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamActiveDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamActiveDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.StreamActiveDef.op_index)
  return _internal_op_index();
}
inline void StreamActiveDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void StreamActiveDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.StreamActiveDef.op_index)
}

// uint32 active_stream_id = 2;
inline void StreamActiveDef::clear_active_stream_id() {
  active_stream_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamActiveDef::_internal_active_stream_id() const {
  return active_stream_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamActiveDef::active_stream_id() const {
  // @@protoc_insertion_point(field_get:domi.StreamActiveDef.active_stream_id)
  return _internal_active_stream_id();
}
inline void StreamActiveDef::_internal_set_active_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  active_stream_id_ = value;
}
inline void StreamActiveDef::set_active_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active_stream_id(value);
  // @@protoc_insertion_point(field_set:domi.StreamActiveDef.active_stream_id)
}

// -------------------------------------------------------------------

// StreamSwitchNDef

// uint32 op_index = 1;
inline void StreamSwitchNDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchNDef.op_index)
  return _internal_op_index();
}
inline void StreamSwitchNDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void StreamSwitchNDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchNDef.op_index)
}

// uint32 size = 2;
inline void StreamSwitchNDef::clear_size() {
  size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::size() const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchNDef.size)
  return _internal_size();
}
inline void StreamSwitchNDef::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  size_ = value;
}
inline void StreamSwitchNDef::set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchNDef.size)
}

// repeated int64 target_value = 3;
inline int StreamSwitchNDef::_internal_target_value_size() const {
  return target_value_.size();
}
inline int StreamSwitchNDef::target_value_size() const {
  return _internal_target_value_size();
}
inline void StreamSwitchNDef::clear_target_value() {
  target_value_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StreamSwitchNDef::_internal_target_value(int index) const {
  return target_value_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StreamSwitchNDef::target_value(int index) const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchNDef.target_value)
  return _internal_target_value(index);
}
inline void StreamSwitchNDef::set_target_value(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  target_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchNDef.target_value)
}
inline void StreamSwitchNDef::_internal_add_target_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  target_value_.Add(value);
}
inline void StreamSwitchNDef::add_target_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_target_value(value);
  // @@protoc_insertion_point(field_add:domi.StreamSwitchNDef.target_value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
StreamSwitchNDef::_internal_target_value() const {
  return target_value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
StreamSwitchNDef::target_value() const {
  // @@protoc_insertion_point(field_list:domi.StreamSwitchNDef.target_value)
  return _internal_target_value();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
StreamSwitchNDef::_internal_mutable_target_value() {
  return &target_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
StreamSwitchNDef::mutable_target_value() {
  // @@protoc_insertion_point(field_mutable_list:domi.StreamSwitchNDef.target_value)
  return _internal_mutable_target_value();
}

// repeated uint32 true_stream_id = 4;
inline int StreamSwitchNDef::_internal_true_stream_id_size() const {
  return true_stream_id_.size();
}
inline int StreamSwitchNDef::true_stream_id_size() const {
  return _internal_true_stream_id_size();
}
inline void StreamSwitchNDef::clear_true_stream_id() {
  true_stream_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::_internal_true_stream_id(int index) const {
  return true_stream_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::true_stream_id(int index) const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchNDef.true_stream_id)
  return _internal_true_stream_id(index);
}
inline void StreamSwitchNDef::set_true_stream_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  true_stream_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchNDef.true_stream_id)
}
inline void StreamSwitchNDef::_internal_add_true_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  true_stream_id_.Add(value);
}
inline void StreamSwitchNDef::add_true_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_true_stream_id(value);
  // @@protoc_insertion_point(field_add:domi.StreamSwitchNDef.true_stream_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
StreamSwitchNDef::_internal_true_stream_id() const {
  return true_stream_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
StreamSwitchNDef::true_stream_id() const {
  // @@protoc_insertion_point(field_list:domi.StreamSwitchNDef.true_stream_id)
  return _internal_true_stream_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
StreamSwitchNDef::_internal_mutable_true_stream_id() {
  return &true_stream_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
StreamSwitchNDef::mutable_true_stream_id() {
  // @@protoc_insertion_point(field_mutable_list:domi.StreamSwitchNDef.true_stream_id)
  return _internal_mutable_true_stream_id();
}

// uint32 element_size = 5;
inline void StreamSwitchNDef::clear_element_size() {
  element_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::_internal_element_size() const {
  return element_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::element_size() const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchNDef.element_size)
  return _internal_element_size();
}
inline void StreamSwitchNDef::_internal_set_element_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  element_size_ = value;
}
inline void StreamSwitchNDef::set_element_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_element_size(value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchNDef.element_size)
}

// uint32 data_type = 6;
inline void StreamSwitchNDef::clear_data_type() {
  data_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::_internal_data_type() const {
  return data_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StreamSwitchNDef::data_type() const {
  // @@protoc_insertion_point(field_get:domi.StreamSwitchNDef.data_type)
  return _internal_data_type();
}
inline void StreamSwitchNDef::_internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_type_ = value;
}
inline void StreamSwitchNDef::set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_type(value);
  // @@protoc_insertion_point(field_set:domi.StreamSwitchNDef.data_type)
}

// -------------------------------------------------------------------

// LabelSetDef

// uint32 op_index = 1;
inline void LabelSetDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSetDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSetDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.LabelSetDef.op_index)
  return _internal_op_index();
}
inline void LabelSetDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void LabelSetDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.LabelSetDef.op_index)
}

// uint32 label_id = 2;
inline void LabelSetDef::clear_label_id() {
  label_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSetDef::_internal_label_id() const {
  return label_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSetDef::label_id() const {
  // @@protoc_insertion_point(field_get:domi.LabelSetDef.label_id)
  return _internal_label_id();
}
inline void LabelSetDef::_internal_set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  label_id_ = value;
}
inline void LabelSetDef::set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_label_id(value);
  // @@protoc_insertion_point(field_set:domi.LabelSetDef.label_id)
}

// uint32 model_id = 3;
inline void LabelSetDef::clear_model_id() {
  model_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSetDef::_internal_model_id() const {
  return model_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSetDef::model_id() const {
  // @@protoc_insertion_point(field_get:domi.LabelSetDef.model_id)
  return _internal_model_id();
}
inline void LabelSetDef::_internal_set_model_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  model_id_ = value;
}
inline void LabelSetDef::set_model_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:domi.LabelSetDef.model_id)
}

// -------------------------------------------------------------------

// LabelGotoExDef

// uint32 op_index = 1;
inline void LabelGotoExDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelGotoExDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelGotoExDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.LabelGotoExDef.op_index)
  return _internal_op_index();
}
inline void LabelGotoExDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void LabelGotoExDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.LabelGotoExDef.op_index)
}

// uint32 label_id = 2;
inline void LabelGotoExDef::clear_label_id() {
  label_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelGotoExDef::_internal_label_id() const {
  return label_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelGotoExDef::label_id() const {
  // @@protoc_insertion_point(field_get:domi.LabelGotoExDef.label_id)
  return _internal_label_id();
}
inline void LabelGotoExDef::_internal_set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  label_id_ = value;
}
inline void LabelGotoExDef::set_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_label_id(value);
  // @@protoc_insertion_point(field_set:domi.LabelGotoExDef.label_id)
}

// uint32 model_id = 3;
inline void LabelGotoExDef::clear_model_id() {
  model_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelGotoExDef::_internal_model_id() const {
  return model_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelGotoExDef::model_id() const {
  // @@protoc_insertion_point(field_get:domi.LabelGotoExDef.model_id)
  return _internal_model_id();
}
inline void LabelGotoExDef::_internal_set_model_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  model_id_ = value;
}
inline void LabelGotoExDef::set_model_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:domi.LabelGotoExDef.model_id)
}

// -------------------------------------------------------------------

// LabelSwitchByIndexDef

// uint32 op_index = 1;
inline void LabelSwitchByIndexDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSwitchByIndexDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSwitchByIndexDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.LabelSwitchByIndexDef.op_index)
  return _internal_op_index();
}
inline void LabelSwitchByIndexDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void LabelSwitchByIndexDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.LabelSwitchByIndexDef.op_index)
}

// uint32 label_max = 2;
inline void LabelSwitchByIndexDef::clear_label_max() {
  label_max_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSwitchByIndexDef::_internal_label_max() const {
  return label_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LabelSwitchByIndexDef::label_max() const {
  // @@protoc_insertion_point(field_get:domi.LabelSwitchByIndexDef.label_max)
  return _internal_label_max();
}
inline void LabelSwitchByIndexDef::_internal_set_label_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  label_max_ = value;
}
inline void LabelSwitchByIndexDef::set_label_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_label_max(value);
  // @@protoc_insertion_point(field_set:domi.LabelSwitchByIndexDef.label_max)
}

// -------------------------------------------------------------------

// FftsTaskDef

// uint32 op_index = 1;
inline void FftsTaskDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsTaskDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsTaskDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.FftsTaskDef.op_index)
  return _internal_op_index();
}
inline void FftsTaskDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void FftsTaskDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.FftsTaskDef.op_index)
}

// uint32 ffts_type = 2;
inline void FftsTaskDef::clear_ffts_type() {
  ffts_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsTaskDef::_internal_ffts_type() const {
  return ffts_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsTaskDef::ffts_type() const {
  // @@protoc_insertion_point(field_get:domi.FftsTaskDef.ffts_type)
  return _internal_ffts_type();
}
inline void FftsTaskDef::_internal_set_ffts_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ffts_type_ = value;
}
inline void FftsTaskDef::set_ffts_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ffts_type(value);
  // @@protoc_insertion_point(field_set:domi.FftsTaskDef.ffts_type)
}

// uint32 addr_size = 3;
inline void FftsTaskDef::clear_addr_size() {
  addr_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsTaskDef::_internal_addr_size() const {
  return addr_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsTaskDef::addr_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsTaskDef.addr_size)
  return _internal_addr_size();
}
inline void FftsTaskDef::_internal_set_addr_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  addr_size_ = value;
}
inline void FftsTaskDef::set_addr_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_addr_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsTaskDef.addr_size)
}

// .domi.FftsDescInfoDef ffts_desc = 4;
inline bool FftsTaskDef::_internal_has_ffts_desc() const {
  return this != internal_default_instance() && ffts_desc_ != nullptr;
}
inline bool FftsTaskDef::has_ffts_desc() const {
  return _internal_has_ffts_desc();
}
inline void FftsTaskDef::clear_ffts_desc() {
  if (GetArena() == nullptr && ffts_desc_ != nullptr) {
    delete ffts_desc_;
  }
  ffts_desc_ = nullptr;
}
inline const ::domi::FftsDescInfoDef& FftsTaskDef::_internal_ffts_desc() const {
  const ::domi::FftsDescInfoDef* p = ffts_desc_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsDescInfoDef*>(
      &::domi::_FftsDescInfoDef_default_instance_);
}
inline const ::domi::FftsDescInfoDef& FftsTaskDef::ffts_desc() const {
  // @@protoc_insertion_point(field_get:domi.FftsTaskDef.ffts_desc)
  return _internal_ffts_desc();
}
inline void FftsTaskDef::unsafe_arena_set_allocated_ffts_desc(
    ::domi::FftsDescInfoDef* ffts_desc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ffts_desc_);
  }
  ffts_desc_ = ffts_desc;
  if (ffts_desc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsTaskDef.ffts_desc)
}
inline ::domi::FftsDescInfoDef* FftsTaskDef::release_ffts_desc() {
  
  ::domi::FftsDescInfoDef* temp = ffts_desc_;
  ffts_desc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsDescInfoDef* FftsTaskDef::unsafe_arena_release_ffts_desc() {
  // @@protoc_insertion_point(field_release:domi.FftsTaskDef.ffts_desc)
  
  ::domi::FftsDescInfoDef* temp = ffts_desc_;
  ffts_desc_ = nullptr;
  return temp;
}
inline ::domi::FftsDescInfoDef* FftsTaskDef::_internal_mutable_ffts_desc() {
  
  if (ffts_desc_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsDescInfoDef>(GetArena());
    ffts_desc_ = p;
  }
  return ffts_desc_;
}
inline ::domi::FftsDescInfoDef* FftsTaskDef::mutable_ffts_desc() {
  // @@protoc_insertion_point(field_mutable:domi.FftsTaskDef.ffts_desc)
  return _internal_mutable_ffts_desc();
}
inline void FftsTaskDef::set_allocated_ffts_desc(::domi::FftsDescInfoDef* ffts_desc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete ffts_desc_;
  }
  if (ffts_desc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ffts_desc);
    if (message_arena != submessage_arena) {
      ffts_desc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ffts_desc, submessage_arena);
    }
    
  } else {
    
  }
  ffts_desc_ = ffts_desc;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsTaskDef.ffts_desc)
}

// repeated .domi.FftsSubTaskDef sub_task = 5;
inline int FftsTaskDef::_internal_sub_task_size() const {
  return sub_task_.size();
}
inline int FftsTaskDef::sub_task_size() const {
  return _internal_sub_task_size();
}
inline void FftsTaskDef::clear_sub_task() {
  sub_task_.Clear();
}
inline ::domi::FftsSubTaskDef* FftsTaskDef::mutable_sub_task(int index) {
  // @@protoc_insertion_point(field_mutable:domi.FftsTaskDef.sub_task)
  return sub_task_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsSubTaskDef >*
FftsTaskDef::mutable_sub_task() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsTaskDef.sub_task)
  return &sub_task_;
}
inline const ::domi::FftsSubTaskDef& FftsTaskDef::_internal_sub_task(int index) const {
  return sub_task_.Get(index);
}
inline const ::domi::FftsSubTaskDef& FftsTaskDef::sub_task(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsTaskDef.sub_task)
  return _internal_sub_task(index);
}
inline ::domi::FftsSubTaskDef* FftsTaskDef::_internal_add_sub_task() {
  return sub_task_.Add();
}
inline ::domi::FftsSubTaskDef* FftsTaskDef::add_sub_task() {
  // @@protoc_insertion_point(field_add:domi.FftsTaskDef.sub_task)
  return _internal_add_sub_task();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsSubTaskDef >&
FftsTaskDef::sub_task() const {
  // @@protoc_insertion_point(field_list:domi.FftsTaskDef.sub_task)
  return sub_task_;
}

// repeated .domi.TicketCacheDef ticket_cache = 6;
inline int FftsTaskDef::_internal_ticket_cache_size() const {
  return ticket_cache_.size();
}
inline int FftsTaskDef::ticket_cache_size() const {
  return _internal_ticket_cache_size();
}
inline void FftsTaskDef::clear_ticket_cache() {
  ticket_cache_.Clear();
}
inline ::domi::TicketCacheDef* FftsTaskDef::mutable_ticket_cache(int index) {
  // @@protoc_insertion_point(field_mutable:domi.FftsTaskDef.ticket_cache)
  return ticket_cache_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TicketCacheDef >*
FftsTaskDef::mutable_ticket_cache() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsTaskDef.ticket_cache)
  return &ticket_cache_;
}
inline const ::domi::TicketCacheDef& FftsTaskDef::_internal_ticket_cache(int index) const {
  return ticket_cache_.Get(index);
}
inline const ::domi::TicketCacheDef& FftsTaskDef::ticket_cache(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsTaskDef.ticket_cache)
  return _internal_ticket_cache(index);
}
inline ::domi::TicketCacheDef* FftsTaskDef::_internal_add_ticket_cache() {
  return ticket_cache_.Add();
}
inline ::domi::TicketCacheDef* FftsTaskDef::add_ticket_cache() {
  // @@protoc_insertion_point(field_add:domi.FftsTaskDef.ticket_cache)
  return _internal_add_ticket_cache();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::TicketCacheDef >&
FftsTaskDef::ticket_cache() const {
  // @@protoc_insertion_point(field_list:domi.FftsTaskDef.ticket_cache)
  return ticket_cache_;
}

// -------------------------------------------------------------------

// FftsDescInfoDef

// uint32 tm = 1;
inline void FftsDescInfoDef::clear_tm() {
  tm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_tm() const {
  return tm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::tm() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.tm)
  return _internal_tm();
}
inline void FftsDescInfoDef::_internal_set_tm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tm_ = value;
}
inline void FftsDescInfoDef::set_tm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tm(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.tm)
}

// uint32 di = 2;
inline void FftsDescInfoDef::clear_di() {
  di_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_di() const {
  return di_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::di() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.di)
  return _internal_di();
}
inline void FftsDescInfoDef::_internal_set_di(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  di_ = value;
}
inline void FftsDescInfoDef::set_di(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_di(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.di)
}

// uint32 dw = 3;
inline void FftsDescInfoDef::clear_dw() {
  dw_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_dw() const {
  return dw_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::dw() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.dw)
  return _internal_dw();
}
inline void FftsDescInfoDef::_internal_set_dw(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dw_ = value;
}
inline void FftsDescInfoDef::set_dw(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dw(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.dw)
}

// uint32 df = 4;
inline void FftsDescInfoDef::clear_df() {
  df_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_df() const {
  return df_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::df() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.df)
  return _internal_df();
}
inline void FftsDescInfoDef::_internal_set_df(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  df_ = value;
}
inline void FftsDescInfoDef::set_df(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_df(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.df)
}

// uint32 data_split_unit = 5;
inline void FftsDescInfoDef::clear_data_split_unit() {
  data_split_unit_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_data_split_unit() const {
  return data_split_unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::data_split_unit() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.data_split_unit)
  return _internal_data_split_unit();
}
inline void FftsDescInfoDef::_internal_set_data_split_unit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_split_unit_ = value;
}
inline void FftsDescInfoDef::set_data_split_unit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_split_unit(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.data_split_unit)
}

// uint32 prefetch_ost_num = 6;
inline void FftsDescInfoDef::clear_prefetch_ost_num() {
  prefetch_ost_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_prefetch_ost_num() const {
  return prefetch_ost_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::prefetch_ost_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.prefetch_ost_num)
  return _internal_prefetch_ost_num();
}
inline void FftsDescInfoDef::_internal_set_prefetch_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_ost_num_ = value;
}
inline void FftsDescInfoDef::set_prefetch_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_ost_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.prefetch_ost_num)
}

// uint32 cache_maintain_ost_num = 7;
inline void FftsDescInfoDef::clear_cache_maintain_ost_num() {
  cache_maintain_ost_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_cache_maintain_ost_num() const {
  return cache_maintain_ost_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::cache_maintain_ost_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.cache_maintain_ost_num)
  return _internal_cache_maintain_ost_num();
}
inline void FftsDescInfoDef::_internal_set_cache_maintain_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cache_maintain_ost_num_ = value;
}
inline void FftsDescInfoDef::set_cache_maintain_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cache_maintain_ost_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.cache_maintain_ost_num)
}

// uint32 aic_prefetch_upper = 8;
inline void FftsDescInfoDef::clear_aic_prefetch_upper() {
  aic_prefetch_upper_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_aic_prefetch_upper() const {
  return aic_prefetch_upper_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::aic_prefetch_upper() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.aic_prefetch_upper)
  return _internal_aic_prefetch_upper();
}
inline void FftsDescInfoDef::_internal_set_aic_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aic_prefetch_upper_ = value;
}
inline void FftsDescInfoDef::set_aic_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aic_prefetch_upper(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.aic_prefetch_upper)
}

// uint32 aic_prefetch_lower = 9;
inline void FftsDescInfoDef::clear_aic_prefetch_lower() {
  aic_prefetch_lower_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_aic_prefetch_lower() const {
  return aic_prefetch_lower_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::aic_prefetch_lower() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.aic_prefetch_lower)
  return _internal_aic_prefetch_lower();
}
inline void FftsDescInfoDef::_internal_set_aic_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aic_prefetch_lower_ = value;
}
inline void FftsDescInfoDef::set_aic_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aic_prefetch_lower(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.aic_prefetch_lower)
}

// uint32 aiv_prefetch_upper = 10;
inline void FftsDescInfoDef::clear_aiv_prefetch_upper() {
  aiv_prefetch_upper_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_aiv_prefetch_upper() const {
  return aiv_prefetch_upper_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::aiv_prefetch_upper() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.aiv_prefetch_upper)
  return _internal_aiv_prefetch_upper();
}
inline void FftsDescInfoDef::_internal_set_aiv_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aiv_prefetch_upper_ = value;
}
inline void FftsDescInfoDef::set_aiv_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aiv_prefetch_upper(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.aiv_prefetch_upper)
}

// uint32 aiv_prefetch_lower = 11;
inline void FftsDescInfoDef::clear_aiv_prefetch_lower() {
  aiv_prefetch_lower_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::_internal_aiv_prefetch_lower() const {
  return aiv_prefetch_lower_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsDescInfoDef::aiv_prefetch_lower() const {
  // @@protoc_insertion_point(field_get:domi.FftsDescInfoDef.aiv_prefetch_lower)
  return _internal_aiv_prefetch_lower();
}
inline void FftsDescInfoDef::_internal_set_aiv_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aiv_prefetch_lower_ = value;
}
inline void FftsDescInfoDef::set_aiv_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aiv_prefetch_lower(value);
  // @@protoc_insertion_point(field_set:domi.FftsDescInfoDef.aiv_prefetch_lower)
}

// -------------------------------------------------------------------

// FftsSubTaskDef

// uint32 sub_task_type = 1;
inline void FftsSubTaskDef::clear_sub_task_type() {
  sub_task_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::_internal_sub_task_type() const {
  return sub_task_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::sub_task_type() const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.sub_task_type)
  return _internal_sub_task_type();
}
inline void FftsSubTaskDef::_internal_set_sub_task_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sub_task_type_ = value;
}
inline void FftsSubTaskDef::set_sub_task_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sub_task_type(value);
  // @@protoc_insertion_point(field_set:domi.FftsSubTaskDef.sub_task_type)
}

// uint32 thread_dim = 2;
inline void FftsSubTaskDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsSubTaskDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsSubTaskDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsSubTaskDef.thread_dim)
}

// uint32 dst_tick_cache_vld_bitmap = 3;
inline void FftsSubTaskDef::clear_dst_tick_cache_vld_bitmap() {
  dst_tick_cache_vld_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::_internal_dst_tick_cache_vld_bitmap() const {
  return dst_tick_cache_vld_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::dst_tick_cache_vld_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.dst_tick_cache_vld_bitmap)
  return _internal_dst_tick_cache_vld_bitmap();
}
inline void FftsSubTaskDef::_internal_set_dst_tick_cache_vld_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dst_tick_cache_vld_bitmap_ = value;
}
inline void FftsSubTaskDef::set_dst_tick_cache_vld_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dst_tick_cache_vld_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.FftsSubTaskDef.dst_tick_cache_vld_bitmap)
}

// uint32 src_tick_cache_vld_bitmap = 4;
inline void FftsSubTaskDef::clear_src_tick_cache_vld_bitmap() {
  src_tick_cache_vld_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::_internal_src_tick_cache_vld_bitmap() const {
  return src_tick_cache_vld_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::src_tick_cache_vld_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.src_tick_cache_vld_bitmap)
  return _internal_src_tick_cache_vld_bitmap();
}
inline void FftsSubTaskDef::_internal_set_src_tick_cache_vld_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  src_tick_cache_vld_bitmap_ = value;
}
inline void FftsSubTaskDef::set_src_tick_cache_vld_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_src_tick_cache_vld_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.FftsSubTaskDef.src_tick_cache_vld_bitmap)
}

// uint32 src_data_out_of_subgraph_bitmap = 5;
inline void FftsSubTaskDef::clear_src_data_out_of_subgraph_bitmap() {
  src_data_out_of_subgraph_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::_internal_src_data_out_of_subgraph_bitmap() const {
  return src_data_out_of_subgraph_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::src_data_out_of_subgraph_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.src_data_out_of_subgraph_bitmap)
  return _internal_src_data_out_of_subgraph_bitmap();
}
inline void FftsSubTaskDef::_internal_set_src_data_out_of_subgraph_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  src_data_out_of_subgraph_bitmap_ = value;
}
inline void FftsSubTaskDef::set_src_data_out_of_subgraph_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_src_data_out_of_subgraph_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.FftsSubTaskDef.src_data_out_of_subgraph_bitmap)
}

// repeated uint32 dst_tick_cache_id = 6;
inline int FftsSubTaskDef::_internal_dst_tick_cache_id_size() const {
  return dst_tick_cache_id_.size();
}
inline int FftsSubTaskDef::dst_tick_cache_id_size() const {
  return _internal_dst_tick_cache_id_size();
}
inline void FftsSubTaskDef::clear_dst_tick_cache_id() {
  dst_tick_cache_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::_internal_dst_tick_cache_id(int index) const {
  return dst_tick_cache_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::dst_tick_cache_id(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.dst_tick_cache_id)
  return _internal_dst_tick_cache_id(index);
}
inline void FftsSubTaskDef::set_dst_tick_cache_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  dst_tick_cache_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsSubTaskDef.dst_tick_cache_id)
}
inline void FftsSubTaskDef::_internal_add_dst_tick_cache_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  dst_tick_cache_id_.Add(value);
}
inline void FftsSubTaskDef::add_dst_tick_cache_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_dst_tick_cache_id(value);
  // @@protoc_insertion_point(field_add:domi.FftsSubTaskDef.dst_tick_cache_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsSubTaskDef::_internal_dst_tick_cache_id() const {
  return dst_tick_cache_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsSubTaskDef::dst_tick_cache_id() const {
  // @@protoc_insertion_point(field_list:domi.FftsSubTaskDef.dst_tick_cache_id)
  return _internal_dst_tick_cache_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsSubTaskDef::_internal_mutable_dst_tick_cache_id() {
  return &dst_tick_cache_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsSubTaskDef::mutable_dst_tick_cache_id() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsSubTaskDef.dst_tick_cache_id)
  return _internal_mutable_dst_tick_cache_id();
}

// repeated uint32 src_tick_cache_id = 7;
inline int FftsSubTaskDef::_internal_src_tick_cache_id_size() const {
  return src_tick_cache_id_.size();
}
inline int FftsSubTaskDef::src_tick_cache_id_size() const {
  return _internal_src_tick_cache_id_size();
}
inline void FftsSubTaskDef::clear_src_tick_cache_id() {
  src_tick_cache_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::_internal_src_tick_cache_id(int index) const {
  return src_tick_cache_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsSubTaskDef::src_tick_cache_id(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.src_tick_cache_id)
  return _internal_src_tick_cache_id(index);
}
inline void FftsSubTaskDef::set_src_tick_cache_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  src_tick_cache_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsSubTaskDef.src_tick_cache_id)
}
inline void FftsSubTaskDef::_internal_add_src_tick_cache_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  src_tick_cache_id_.Add(value);
}
inline void FftsSubTaskDef::add_src_tick_cache_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_src_tick_cache_id(value);
  // @@protoc_insertion_point(field_add:domi.FftsSubTaskDef.src_tick_cache_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsSubTaskDef::_internal_src_tick_cache_id() const {
  return src_tick_cache_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsSubTaskDef::src_tick_cache_id() const {
  // @@protoc_insertion_point(field_list:domi.FftsSubTaskDef.src_tick_cache_id)
  return _internal_src_tick_cache_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsSubTaskDef::_internal_mutable_src_tick_cache_id() {
  return &src_tick_cache_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsSubTaskDef::mutable_src_tick_cache_id() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsSubTaskDef.src_tick_cache_id)
  return _internal_mutable_src_tick_cache_id();
}

// .domi.AutoThreadAicAivDef auto_thread_aic_aiv = 8;
inline bool FftsSubTaskDef::_internal_has_auto_thread_aic_aiv() const {
  return this != internal_default_instance() && auto_thread_aic_aiv_ != nullptr;
}
inline bool FftsSubTaskDef::has_auto_thread_aic_aiv() const {
  return _internal_has_auto_thread_aic_aiv();
}
inline void FftsSubTaskDef::clear_auto_thread_aic_aiv() {
  if (GetArena() == nullptr && auto_thread_aic_aiv_ != nullptr) {
    delete auto_thread_aic_aiv_;
  }
  auto_thread_aic_aiv_ = nullptr;
}
inline const ::domi::AutoThreadAicAivDef& FftsSubTaskDef::_internal_auto_thread_aic_aiv() const {
  const ::domi::AutoThreadAicAivDef* p = auto_thread_aic_aiv_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::AutoThreadAicAivDef*>(
      &::domi::_AutoThreadAicAivDef_default_instance_);
}
inline const ::domi::AutoThreadAicAivDef& FftsSubTaskDef::auto_thread_aic_aiv() const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.auto_thread_aic_aiv)
  return _internal_auto_thread_aic_aiv();
}
inline void FftsSubTaskDef::unsafe_arena_set_allocated_auto_thread_aic_aiv(
    ::domi::AutoThreadAicAivDef* auto_thread_aic_aiv) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auto_thread_aic_aiv_);
  }
  auto_thread_aic_aiv_ = auto_thread_aic_aiv;
  if (auto_thread_aic_aiv) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsSubTaskDef.auto_thread_aic_aiv)
}
inline ::domi::AutoThreadAicAivDef* FftsSubTaskDef::release_auto_thread_aic_aiv() {
  
  ::domi::AutoThreadAicAivDef* temp = auto_thread_aic_aiv_;
  auto_thread_aic_aiv_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::AutoThreadAicAivDef* FftsSubTaskDef::unsafe_arena_release_auto_thread_aic_aiv() {
  // @@protoc_insertion_point(field_release:domi.FftsSubTaskDef.auto_thread_aic_aiv)
  
  ::domi::AutoThreadAicAivDef* temp = auto_thread_aic_aiv_;
  auto_thread_aic_aiv_ = nullptr;
  return temp;
}
inline ::domi::AutoThreadAicAivDef* FftsSubTaskDef::_internal_mutable_auto_thread_aic_aiv() {
  
  if (auto_thread_aic_aiv_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::AutoThreadAicAivDef>(GetArena());
    auto_thread_aic_aiv_ = p;
  }
  return auto_thread_aic_aiv_;
}
inline ::domi::AutoThreadAicAivDef* FftsSubTaskDef::mutable_auto_thread_aic_aiv() {
  // @@protoc_insertion_point(field_mutable:domi.FftsSubTaskDef.auto_thread_aic_aiv)
  return _internal_mutable_auto_thread_aic_aiv();
}
inline void FftsSubTaskDef::set_allocated_auto_thread_aic_aiv(::domi::AutoThreadAicAivDef* auto_thread_aic_aiv) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete auto_thread_aic_aiv_;
  }
  if (auto_thread_aic_aiv) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(auto_thread_aic_aiv);
    if (message_arena != submessage_arena) {
      auto_thread_aic_aiv = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auto_thread_aic_aiv, submessage_arena);
    }
    
  } else {
    
  }
  auto_thread_aic_aiv_ = auto_thread_aic_aiv;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsSubTaskDef.auto_thread_aic_aiv)
}

// .domi.ManualThreadAicAivDef manual_thread_aic_aiv = 9;
inline bool FftsSubTaskDef::_internal_has_manual_thread_aic_aiv() const {
  return this != internal_default_instance() && manual_thread_aic_aiv_ != nullptr;
}
inline bool FftsSubTaskDef::has_manual_thread_aic_aiv() const {
  return _internal_has_manual_thread_aic_aiv();
}
inline void FftsSubTaskDef::clear_manual_thread_aic_aiv() {
  if (GetArena() == nullptr && manual_thread_aic_aiv_ != nullptr) {
    delete manual_thread_aic_aiv_;
  }
  manual_thread_aic_aiv_ = nullptr;
}
inline const ::domi::ManualThreadAicAivDef& FftsSubTaskDef::_internal_manual_thread_aic_aiv() const {
  const ::domi::ManualThreadAicAivDef* p = manual_thread_aic_aiv_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::ManualThreadAicAivDef*>(
      &::domi::_ManualThreadAicAivDef_default_instance_);
}
inline const ::domi::ManualThreadAicAivDef& FftsSubTaskDef::manual_thread_aic_aiv() const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.manual_thread_aic_aiv)
  return _internal_manual_thread_aic_aiv();
}
inline void FftsSubTaskDef::unsafe_arena_set_allocated_manual_thread_aic_aiv(
    ::domi::ManualThreadAicAivDef* manual_thread_aic_aiv) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(manual_thread_aic_aiv_);
  }
  manual_thread_aic_aiv_ = manual_thread_aic_aiv;
  if (manual_thread_aic_aiv) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsSubTaskDef.manual_thread_aic_aiv)
}
inline ::domi::ManualThreadAicAivDef* FftsSubTaskDef::release_manual_thread_aic_aiv() {
  
  ::domi::ManualThreadAicAivDef* temp = manual_thread_aic_aiv_;
  manual_thread_aic_aiv_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::ManualThreadAicAivDef* FftsSubTaskDef::unsafe_arena_release_manual_thread_aic_aiv() {
  // @@protoc_insertion_point(field_release:domi.FftsSubTaskDef.manual_thread_aic_aiv)
  
  ::domi::ManualThreadAicAivDef* temp = manual_thread_aic_aiv_;
  manual_thread_aic_aiv_ = nullptr;
  return temp;
}
inline ::domi::ManualThreadAicAivDef* FftsSubTaskDef::_internal_mutable_manual_thread_aic_aiv() {
  
  if (manual_thread_aic_aiv_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::ManualThreadAicAivDef>(GetArena());
    manual_thread_aic_aiv_ = p;
  }
  return manual_thread_aic_aiv_;
}
inline ::domi::ManualThreadAicAivDef* FftsSubTaskDef::mutable_manual_thread_aic_aiv() {
  // @@protoc_insertion_point(field_mutable:domi.FftsSubTaskDef.manual_thread_aic_aiv)
  return _internal_mutable_manual_thread_aic_aiv();
}
inline void FftsSubTaskDef::set_allocated_manual_thread_aic_aiv(::domi::ManualThreadAicAivDef* manual_thread_aic_aiv) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete manual_thread_aic_aiv_;
  }
  if (manual_thread_aic_aiv) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(manual_thread_aic_aiv);
    if (message_arena != submessage_arena) {
      manual_thread_aic_aiv = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, manual_thread_aic_aiv, submessage_arena);
    }
    
  } else {
    
  }
  manual_thread_aic_aiv_ = manual_thread_aic_aiv;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsSubTaskDef.manual_thread_aic_aiv)
}

// .domi.ManualThreadNopDef manual_thread_nop = 10;
inline bool FftsSubTaskDef::_internal_has_manual_thread_nop() const {
  return this != internal_default_instance() && manual_thread_nop_ != nullptr;
}
inline bool FftsSubTaskDef::has_manual_thread_nop() const {
  return _internal_has_manual_thread_nop();
}
inline void FftsSubTaskDef::clear_manual_thread_nop() {
  if (GetArena() == nullptr && manual_thread_nop_ != nullptr) {
    delete manual_thread_nop_;
  }
  manual_thread_nop_ = nullptr;
}
inline const ::domi::ManualThreadNopDef& FftsSubTaskDef::_internal_manual_thread_nop() const {
  const ::domi::ManualThreadNopDef* p = manual_thread_nop_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::ManualThreadNopDef*>(
      &::domi::_ManualThreadNopDef_default_instance_);
}
inline const ::domi::ManualThreadNopDef& FftsSubTaskDef::manual_thread_nop() const {
  // @@protoc_insertion_point(field_get:domi.FftsSubTaskDef.manual_thread_nop)
  return _internal_manual_thread_nop();
}
inline void FftsSubTaskDef::unsafe_arena_set_allocated_manual_thread_nop(
    ::domi::ManualThreadNopDef* manual_thread_nop) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(manual_thread_nop_);
  }
  manual_thread_nop_ = manual_thread_nop;
  if (manual_thread_nop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsSubTaskDef.manual_thread_nop)
}
inline ::domi::ManualThreadNopDef* FftsSubTaskDef::release_manual_thread_nop() {
  
  ::domi::ManualThreadNopDef* temp = manual_thread_nop_;
  manual_thread_nop_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::ManualThreadNopDef* FftsSubTaskDef::unsafe_arena_release_manual_thread_nop() {
  // @@protoc_insertion_point(field_release:domi.FftsSubTaskDef.manual_thread_nop)
  
  ::domi::ManualThreadNopDef* temp = manual_thread_nop_;
  manual_thread_nop_ = nullptr;
  return temp;
}
inline ::domi::ManualThreadNopDef* FftsSubTaskDef::_internal_mutable_manual_thread_nop() {
  
  if (manual_thread_nop_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::ManualThreadNopDef>(GetArena());
    manual_thread_nop_ = p;
  }
  return manual_thread_nop_;
}
inline ::domi::ManualThreadNopDef* FftsSubTaskDef::mutable_manual_thread_nop() {
  // @@protoc_insertion_point(field_mutable:domi.FftsSubTaskDef.manual_thread_nop)
  return _internal_mutable_manual_thread_nop();
}
inline void FftsSubTaskDef::set_allocated_manual_thread_nop(::domi::ManualThreadNopDef* manual_thread_nop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete manual_thread_nop_;
  }
  if (manual_thread_nop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(manual_thread_nop);
    if (message_arena != submessage_arena) {
      manual_thread_nop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, manual_thread_nop, submessage_arena);
    }
    
  } else {
    
  }
  manual_thread_nop_ = manual_thread_nop;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsSubTaskDef.manual_thread_nop)
}

// -------------------------------------------------------------------

// TicketCacheDef

// uint32 cache_option = 1;
inline void TicketCacheDef::clear_cache_option() {
  cache_option_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TicketCacheDef::_internal_cache_option() const {
  return cache_option_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TicketCacheDef::cache_option() const {
  // @@protoc_insertion_point(field_get:domi.TicketCacheDef.cache_option)
  return _internal_cache_option();
}
inline void TicketCacheDef::_internal_set_cache_option(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cache_option_ = value;
}
inline void TicketCacheDef::set_cache_option(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cache_option(value);
  // @@protoc_insertion_point(field_set:domi.TicketCacheDef.cache_option)
}

// uint32 ticket_cache_window = 2;
inline void TicketCacheDef::clear_ticket_cache_window() {
  ticket_cache_window_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TicketCacheDef::_internal_ticket_cache_window() const {
  return ticket_cache_window_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TicketCacheDef::ticket_cache_window() const {
  // @@protoc_insertion_point(field_get:domi.TicketCacheDef.ticket_cache_window)
  return _internal_ticket_cache_window();
}
inline void TicketCacheDef::_internal_set_ticket_cache_window(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ticket_cache_window_ = value;
}
inline void TicketCacheDef::set_ticket_cache_window(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ticket_cache_window(value);
  // @@protoc_insertion_point(field_set:domi.TicketCacheDef.ticket_cache_window)
}

// .domi.AutoThreadCacheDef auto_thread_cache = 3;
inline bool TicketCacheDef::_internal_has_auto_thread_cache() const {
  return this != internal_default_instance() && auto_thread_cache_ != nullptr;
}
inline bool TicketCacheDef::has_auto_thread_cache() const {
  return _internal_has_auto_thread_cache();
}
inline void TicketCacheDef::clear_auto_thread_cache() {
  if (GetArena() == nullptr && auto_thread_cache_ != nullptr) {
    delete auto_thread_cache_;
  }
  auto_thread_cache_ = nullptr;
}
inline const ::domi::AutoThreadCacheDef& TicketCacheDef::_internal_auto_thread_cache() const {
  const ::domi::AutoThreadCacheDef* p = auto_thread_cache_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::AutoThreadCacheDef*>(
      &::domi::_AutoThreadCacheDef_default_instance_);
}
inline const ::domi::AutoThreadCacheDef& TicketCacheDef::auto_thread_cache() const {
  // @@protoc_insertion_point(field_get:domi.TicketCacheDef.auto_thread_cache)
  return _internal_auto_thread_cache();
}
inline void TicketCacheDef::unsafe_arena_set_allocated_auto_thread_cache(
    ::domi::AutoThreadCacheDef* auto_thread_cache) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auto_thread_cache_);
  }
  auto_thread_cache_ = auto_thread_cache;
  if (auto_thread_cache) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TicketCacheDef.auto_thread_cache)
}
inline ::domi::AutoThreadCacheDef* TicketCacheDef::release_auto_thread_cache() {
  
  ::domi::AutoThreadCacheDef* temp = auto_thread_cache_;
  auto_thread_cache_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::AutoThreadCacheDef* TicketCacheDef::unsafe_arena_release_auto_thread_cache() {
  // @@protoc_insertion_point(field_release:domi.TicketCacheDef.auto_thread_cache)
  
  ::domi::AutoThreadCacheDef* temp = auto_thread_cache_;
  auto_thread_cache_ = nullptr;
  return temp;
}
inline ::domi::AutoThreadCacheDef* TicketCacheDef::_internal_mutable_auto_thread_cache() {
  
  if (auto_thread_cache_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::AutoThreadCacheDef>(GetArena());
    auto_thread_cache_ = p;
  }
  return auto_thread_cache_;
}
inline ::domi::AutoThreadCacheDef* TicketCacheDef::mutable_auto_thread_cache() {
  // @@protoc_insertion_point(field_mutable:domi.TicketCacheDef.auto_thread_cache)
  return _internal_mutable_auto_thread_cache();
}
inline void TicketCacheDef::set_allocated_auto_thread_cache(::domi::AutoThreadCacheDef* auto_thread_cache) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete auto_thread_cache_;
  }
  if (auto_thread_cache) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(auto_thread_cache);
    if (message_arena != submessage_arena) {
      auto_thread_cache = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auto_thread_cache, submessage_arena);
    }
    
  } else {
    
  }
  auto_thread_cache_ = auto_thread_cache;
  // @@protoc_insertion_point(field_set_allocated:domi.TicketCacheDef.auto_thread_cache)
}

// .domi.ManualThreadCacheDef manual_thread_cache = 4;
inline bool TicketCacheDef::_internal_has_manual_thread_cache() const {
  return this != internal_default_instance() && manual_thread_cache_ != nullptr;
}
inline bool TicketCacheDef::has_manual_thread_cache() const {
  return _internal_has_manual_thread_cache();
}
inline void TicketCacheDef::clear_manual_thread_cache() {
  if (GetArena() == nullptr && manual_thread_cache_ != nullptr) {
    delete manual_thread_cache_;
  }
  manual_thread_cache_ = nullptr;
}
inline const ::domi::ManualThreadCacheDef& TicketCacheDef::_internal_manual_thread_cache() const {
  const ::domi::ManualThreadCacheDef* p = manual_thread_cache_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::ManualThreadCacheDef*>(
      &::domi::_ManualThreadCacheDef_default_instance_);
}
inline const ::domi::ManualThreadCacheDef& TicketCacheDef::manual_thread_cache() const {
  // @@protoc_insertion_point(field_get:domi.TicketCacheDef.manual_thread_cache)
  return _internal_manual_thread_cache();
}
inline void TicketCacheDef::unsafe_arena_set_allocated_manual_thread_cache(
    ::domi::ManualThreadCacheDef* manual_thread_cache) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(manual_thread_cache_);
  }
  manual_thread_cache_ = manual_thread_cache;
  if (manual_thread_cache) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.TicketCacheDef.manual_thread_cache)
}
inline ::domi::ManualThreadCacheDef* TicketCacheDef::release_manual_thread_cache() {
  
  ::domi::ManualThreadCacheDef* temp = manual_thread_cache_;
  manual_thread_cache_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::ManualThreadCacheDef* TicketCacheDef::unsafe_arena_release_manual_thread_cache() {
  // @@protoc_insertion_point(field_release:domi.TicketCacheDef.manual_thread_cache)
  
  ::domi::ManualThreadCacheDef* temp = manual_thread_cache_;
  manual_thread_cache_ = nullptr;
  return temp;
}
inline ::domi::ManualThreadCacheDef* TicketCacheDef::_internal_mutable_manual_thread_cache() {
  
  if (manual_thread_cache_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::ManualThreadCacheDef>(GetArena());
    manual_thread_cache_ = p;
  }
  return manual_thread_cache_;
}
inline ::domi::ManualThreadCacheDef* TicketCacheDef::mutable_manual_thread_cache() {
  // @@protoc_insertion_point(field_mutable:domi.TicketCacheDef.manual_thread_cache)
  return _internal_mutable_manual_thread_cache();
}
inline void TicketCacheDef::set_allocated_manual_thread_cache(::domi::ManualThreadCacheDef* manual_thread_cache) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete manual_thread_cache_;
  }
  if (manual_thread_cache) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(manual_thread_cache);
    if (message_arena != submessage_arena) {
      manual_thread_cache = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, manual_thread_cache, submessage_arena);
    }
    
  } else {
    
  }
  manual_thread_cache_ = manual_thread_cache;
  // @@protoc_insertion_point(field_set_allocated:domi.TicketCacheDef.manual_thread_cache)
}

// -------------------------------------------------------------------

// AutoThreadAicAivDef

// repeated uint64 task_addr = 1;
inline int AutoThreadAicAivDef::_internal_task_addr_size() const {
  return task_addr_.size();
}
inline int AutoThreadAicAivDef::task_addr_size() const {
  return _internal_task_addr_size();
}
inline void AutoThreadAicAivDef::clear_task_addr() {
  task_addr_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AutoThreadAicAivDef::_internal_task_addr(int index) const {
  return task_addr_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AutoThreadAicAivDef::task_addr(int index) const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.task_addr)
  return _internal_task_addr(index);
}
inline void AutoThreadAicAivDef::set_task_addr(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.task_addr)
}
inline void AutoThreadAicAivDef::_internal_add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_.Add(value);
}
inline void AutoThreadAicAivDef::add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_task_addr(value);
  // @@protoc_insertion_point(field_add:domi.AutoThreadAicAivDef.task_addr)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
AutoThreadAicAivDef::_internal_task_addr() const {
  return task_addr_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
AutoThreadAicAivDef::task_addr() const {
  // @@protoc_insertion_point(field_list:domi.AutoThreadAicAivDef.task_addr)
  return _internal_task_addr();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
AutoThreadAicAivDef::_internal_mutable_task_addr() {
  return &task_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
AutoThreadAicAivDef::mutable_task_addr() {
  // @@protoc_insertion_point(field_mutable_list:domi.AutoThreadAicAivDef.task_addr)
  return _internal_mutable_task_addr();
}

// repeated uint64 task_addr_offset = 2;
inline int AutoThreadAicAivDef::_internal_task_addr_offset_size() const {
  return task_addr_offset_.size();
}
inline int AutoThreadAicAivDef::task_addr_offset_size() const {
  return _internal_task_addr_offset_size();
}
inline void AutoThreadAicAivDef::clear_task_addr_offset() {
  task_addr_offset_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AutoThreadAicAivDef::_internal_task_addr_offset(int index) const {
  return task_addr_offset_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AutoThreadAicAivDef::task_addr_offset(int index) const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.task_addr_offset)
  return _internal_task_addr_offset(index);
}
inline void AutoThreadAicAivDef::set_task_addr_offset(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.task_addr_offset)
}
inline void AutoThreadAicAivDef::_internal_add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_offset_.Add(value);
}
inline void AutoThreadAicAivDef::add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_task_addr_offset(value);
  // @@protoc_insertion_point(field_add:domi.AutoThreadAicAivDef.task_addr_offset)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
AutoThreadAicAivDef::_internal_task_addr_offset() const {
  return task_addr_offset_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
AutoThreadAicAivDef::task_addr_offset() const {
  // @@protoc_insertion_point(field_list:domi.AutoThreadAicAivDef.task_addr_offset)
  return _internal_task_addr_offset();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
AutoThreadAicAivDef::_internal_mutable_task_addr_offset() {
  return &task_addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
AutoThreadAicAivDef::mutable_task_addr_offset() {
  // @@protoc_insertion_point(field_mutable_list:domi.AutoThreadAicAivDef.task_addr_offset)
  return _internal_mutable_task_addr_offset();
}

// uint32 task_param_offset = 3;
inline void AutoThreadAicAivDef::clear_task_param_offset() {
  task_param_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::_internal_task_param_offset() const {
  return task_param_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::task_param_offset() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.task_param_offset)
  return _internal_task_param_offset();
}
inline void AutoThreadAicAivDef::_internal_set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  task_param_offset_ = value;
}
inline void AutoThreadAicAivDef::set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_task_param_offset(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.task_param_offset)
}

// uint32 sat_mode = 4;
inline void AutoThreadAicAivDef::clear_sat_mode() {
  sat_mode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::_internal_sat_mode() const {
  return sat_mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::sat_mode() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.sat_mode)
  return _internal_sat_mode();
}
inline void AutoThreadAicAivDef::_internal_set_sat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sat_mode_ = value;
}
inline void AutoThreadAicAivDef::set_sat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sat_mode(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.sat_mode)
}

// uint32 schedule_mode = 5;
inline void AutoThreadAicAivDef::clear_schedule_mode() {
  schedule_mode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::_internal_schedule_mode() const {
  return schedule_mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::schedule_mode() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.schedule_mode)
  return _internal_schedule_mode();
}
inline void AutoThreadAicAivDef::_internal_set_schedule_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  schedule_mode_ = value;
}
inline void AutoThreadAicAivDef::set_schedule_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_schedule_mode(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.schedule_mode)
}

// uint32 cache_prefetch_cnt = 6;
inline void AutoThreadAicAivDef::clear_cache_prefetch_cnt() {
  cache_prefetch_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::_internal_cache_prefetch_cnt() const {
  return cache_prefetch_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::cache_prefetch_cnt() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.cache_prefetch_cnt)
  return _internal_cache_prefetch_cnt();
}
inline void AutoThreadAicAivDef::_internal_set_cache_prefetch_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cache_prefetch_cnt_ = value;
}
inline void AutoThreadAicAivDef::set_cache_prefetch_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cache_prefetch_cnt(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.cache_prefetch_cnt)
}

// uint32 prefetch_enable_bitmap = 7;
inline void AutoThreadAicAivDef::clear_prefetch_enable_bitmap() {
  prefetch_enable_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::_internal_prefetch_enable_bitmap() const {
  return prefetch_enable_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::prefetch_enable_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.prefetch_enable_bitmap)
  return _internal_prefetch_enable_bitmap();
}
inline void AutoThreadAicAivDef::_internal_set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_enable_bitmap_ = value;
}
inline void AutoThreadAicAivDef::set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_enable_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.prefetch_enable_bitmap)
}

// uint32 prefetch_once_bitmap = 8;
inline void AutoThreadAicAivDef::clear_prefetch_once_bitmap() {
  prefetch_once_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::_internal_prefetch_once_bitmap() const {
  return prefetch_once_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::prefetch_once_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.prefetch_once_bitmap)
  return _internal_prefetch_once_bitmap();
}
inline void AutoThreadAicAivDef::_internal_set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_once_bitmap_ = value;
}
inline void AutoThreadAicAivDef::set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_once_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.prefetch_once_bitmap)
}

// uint32 tail_blk_dim = 9;
inline void AutoThreadAicAivDef::clear_tail_blk_dim() {
  tail_blk_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::_internal_tail_blk_dim() const {
  return tail_blk_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::tail_blk_dim() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.tail_blk_dim)
  return _internal_tail_blk_dim();
}
inline void AutoThreadAicAivDef::_internal_set_tail_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_blk_dim_ = value;
}
inline void AutoThreadAicAivDef::set_tail_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_blk_dim(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.tail_blk_dim)
}

// uint32 non_tail_blk_dim = 10;
inline void AutoThreadAicAivDef::clear_non_tail_blk_dim() {
  non_tail_blk_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::_internal_non_tail_blk_dim() const {
  return non_tail_blk_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::non_tail_blk_dim() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.non_tail_blk_dim)
  return _internal_non_tail_blk_dim();
}
inline void AutoThreadAicAivDef::_internal_set_non_tail_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_blk_dim_ = value;
}
inline void AutoThreadAicAivDef::set_non_tail_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_blk_dim(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.non_tail_blk_dim)
}

// string non_tail_task_func_stub = 11;
inline void AutoThreadAicAivDef::clear_non_tail_task_func_stub() {
  non_tail_task_func_stub_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AutoThreadAicAivDef::non_tail_task_func_stub() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.non_tail_task_func_stub)
  return _internal_non_tail_task_func_stub();
}
inline void AutoThreadAicAivDef::set_non_tail_task_func_stub(const std::string& value) {
  _internal_set_non_tail_task_func_stub(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.non_tail_task_func_stub)
}
inline std::string* AutoThreadAicAivDef::mutable_non_tail_task_func_stub() {
  // @@protoc_insertion_point(field_mutable:domi.AutoThreadAicAivDef.non_tail_task_func_stub)
  return _internal_mutable_non_tail_task_func_stub();
}
inline const std::string& AutoThreadAicAivDef::_internal_non_tail_task_func_stub() const {
  return non_tail_task_func_stub_.Get();
}
inline void AutoThreadAicAivDef::_internal_set_non_tail_task_func_stub(const std::string& value) {
  
  non_tail_task_func_stub_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AutoThreadAicAivDef::set_non_tail_task_func_stub(std::string&& value) {
  
  non_tail_task_func_stub_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.AutoThreadAicAivDef.non_tail_task_func_stub)
}
inline void AutoThreadAicAivDef::set_non_tail_task_func_stub(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  non_tail_task_func_stub_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.AutoThreadAicAivDef.non_tail_task_func_stub)
}
inline void AutoThreadAicAivDef::set_non_tail_task_func_stub(const char* value,
    size_t size) {
  
  non_tail_task_func_stub_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.AutoThreadAicAivDef.non_tail_task_func_stub)
}
inline std::string* AutoThreadAicAivDef::_internal_mutable_non_tail_task_func_stub() {
  
  return non_tail_task_func_stub_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AutoThreadAicAivDef::release_non_tail_task_func_stub() {
  // @@protoc_insertion_point(field_release:domi.AutoThreadAicAivDef.non_tail_task_func_stub)
  return non_tail_task_func_stub_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AutoThreadAicAivDef::set_allocated_non_tail_task_func_stub(std::string* non_tail_task_func_stub) {
  if (non_tail_task_func_stub != nullptr) {
    
  } else {
    
  }
  non_tail_task_func_stub_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), non_tail_task_func_stub,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.AutoThreadAicAivDef.non_tail_task_func_stub)
}

// string tail_task_func_stub = 12;
inline void AutoThreadAicAivDef::clear_tail_task_func_stub() {
  tail_task_func_stub_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AutoThreadAicAivDef::tail_task_func_stub() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.tail_task_func_stub)
  return _internal_tail_task_func_stub();
}
inline void AutoThreadAicAivDef::set_tail_task_func_stub(const std::string& value) {
  _internal_set_tail_task_func_stub(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.tail_task_func_stub)
}
inline std::string* AutoThreadAicAivDef::mutable_tail_task_func_stub() {
  // @@protoc_insertion_point(field_mutable:domi.AutoThreadAicAivDef.tail_task_func_stub)
  return _internal_mutable_tail_task_func_stub();
}
inline const std::string& AutoThreadAicAivDef::_internal_tail_task_func_stub() const {
  return tail_task_func_stub_.Get();
}
inline void AutoThreadAicAivDef::_internal_set_tail_task_func_stub(const std::string& value) {
  
  tail_task_func_stub_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AutoThreadAicAivDef::set_tail_task_func_stub(std::string&& value) {
  
  tail_task_func_stub_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.AutoThreadAicAivDef.tail_task_func_stub)
}
inline void AutoThreadAicAivDef::set_tail_task_func_stub(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tail_task_func_stub_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.AutoThreadAicAivDef.tail_task_func_stub)
}
inline void AutoThreadAicAivDef::set_tail_task_func_stub(const char* value,
    size_t size) {
  
  tail_task_func_stub_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.AutoThreadAicAivDef.tail_task_func_stub)
}
inline std::string* AutoThreadAicAivDef::_internal_mutable_tail_task_func_stub() {
  
  return tail_task_func_stub_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AutoThreadAicAivDef::release_tail_task_func_stub() {
  // @@protoc_insertion_point(field_release:domi.AutoThreadAicAivDef.tail_task_func_stub)
  return tail_task_func_stub_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AutoThreadAicAivDef::set_allocated_tail_task_func_stub(std::string* tail_task_func_stub) {
  if (tail_task_func_stub != nullptr) {
    
  } else {
    
  }
  tail_task_func_stub_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tail_task_func_stub,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.AutoThreadAicAivDef.tail_task_func_stub)
}

// repeated .domi.AutoThreadPrefetchDef src_prefetch = 13;
inline int AutoThreadAicAivDef::_internal_src_prefetch_size() const {
  return src_prefetch_.size();
}
inline int AutoThreadAicAivDef::src_prefetch_size() const {
  return _internal_src_prefetch_size();
}
inline void AutoThreadAicAivDef::clear_src_prefetch() {
  src_prefetch_.Clear();
}
inline ::domi::AutoThreadPrefetchDef* AutoThreadAicAivDef::mutable_src_prefetch(int index) {
  // @@protoc_insertion_point(field_mutable:domi.AutoThreadAicAivDef.src_prefetch)
  return src_prefetch_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AutoThreadPrefetchDef >*
AutoThreadAicAivDef::mutable_src_prefetch() {
  // @@protoc_insertion_point(field_mutable_list:domi.AutoThreadAicAivDef.src_prefetch)
  return &src_prefetch_;
}
inline const ::domi::AutoThreadPrefetchDef& AutoThreadAicAivDef::_internal_src_prefetch(int index) const {
  return src_prefetch_.Get(index);
}
inline const ::domi::AutoThreadPrefetchDef& AutoThreadAicAivDef::src_prefetch(int index) const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.src_prefetch)
  return _internal_src_prefetch(index);
}
inline ::domi::AutoThreadPrefetchDef* AutoThreadAicAivDef::_internal_add_src_prefetch() {
  return src_prefetch_.Add();
}
inline ::domi::AutoThreadPrefetchDef* AutoThreadAicAivDef::add_src_prefetch() {
  // @@protoc_insertion_point(field_add:domi.AutoThreadAicAivDef.src_prefetch)
  return _internal_add_src_prefetch();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AutoThreadPrefetchDef >&
AutoThreadAicAivDef::src_prefetch() const {
  // @@protoc_insertion_point(field_list:domi.AutoThreadAicAivDef.src_prefetch)
  return src_prefetch_;
}

// uint32 input_output_count = 14;
inline void AutoThreadAicAivDef::clear_input_output_count() {
  input_output_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::_internal_input_output_count() const {
  return input_output_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadAicAivDef::input_output_count() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadAicAivDef.input_output_count)
  return _internal_input_output_count();
}
inline void AutoThreadAicAivDef::_internal_set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input_output_count_ = value;
}
inline void AutoThreadAicAivDef::set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input_output_count(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadAicAivDef.input_output_count)
}

// -------------------------------------------------------------------

// AutoThreadCacheDef

// uint64 data_addr = 1;
inline void AutoThreadCacheDef::clear_data_addr() {
  data_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AutoThreadCacheDef::_internal_data_addr() const {
  return data_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AutoThreadCacheDef::data_addr() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadCacheDef.data_addr)
  return _internal_data_addr();
}
inline void AutoThreadCacheDef::_internal_set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  data_addr_ = value;
}
inline void AutoThreadCacheDef::set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_data_addr(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadCacheDef.data_addr)
}

// uint32 data_addr_offset = 2;
inline void AutoThreadCacheDef::clear_data_addr_offset() {
  data_addr_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadCacheDef::_internal_data_addr_offset() const {
  return data_addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadCacheDef::data_addr_offset() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadCacheDef.data_addr_offset)
  return _internal_data_addr_offset();
}
inline void AutoThreadCacheDef::_internal_set_data_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_addr_offset_ = value;
}
inline void AutoThreadCacheDef::set_data_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_addr_offset(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadCacheDef.data_addr_offset)
}

// uint32 non_tail_data_len = 3;
inline void AutoThreadCacheDef::clear_non_tail_data_len() {
  non_tail_data_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadCacheDef::_internal_non_tail_data_len() const {
  return non_tail_data_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadCacheDef::non_tail_data_len() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadCacheDef.non_tail_data_len)
  return _internal_non_tail_data_len();
}
inline void AutoThreadCacheDef::_internal_set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_data_len_ = value;
}
inline void AutoThreadCacheDef::set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_data_len(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadCacheDef.non_tail_data_len)
}

// uint32 tail_data_len = 4;
inline void AutoThreadCacheDef::clear_tail_data_len() {
  tail_data_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadCacheDef::_internal_tail_data_len() const {
  return tail_data_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadCacheDef::tail_data_len() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadCacheDef.tail_data_len)
  return _internal_tail_data_len();
}
inline void AutoThreadCacheDef::_internal_set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_data_len_ = value;
}
inline void AutoThreadCacheDef::set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_data_len(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadCacheDef.tail_data_len)
}

// uint32 ticket_cache_ref_cnt = 5;
inline void AutoThreadCacheDef::clear_ticket_cache_ref_cnt() {
  ticket_cache_ref_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadCacheDef::_internal_ticket_cache_ref_cnt() const {
  return ticket_cache_ref_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadCacheDef::ticket_cache_ref_cnt() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadCacheDef.ticket_cache_ref_cnt)
  return _internal_ticket_cache_ref_cnt();
}
inline void AutoThreadCacheDef::_internal_set_ticket_cache_ref_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ticket_cache_ref_cnt_ = value;
}
inline void AutoThreadCacheDef::set_ticket_cache_ref_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ticket_cache_ref_cnt(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadCacheDef.ticket_cache_ref_cnt)
}

// -------------------------------------------------------------------

// AutoThreadPrefetchDef

// uint64 data_addr = 1;
inline void AutoThreadPrefetchDef::clear_data_addr() {
  data_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AutoThreadPrefetchDef::_internal_data_addr() const {
  return data_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AutoThreadPrefetchDef::data_addr() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadPrefetchDef.data_addr)
  return _internal_data_addr();
}
inline void AutoThreadPrefetchDef::_internal_set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  data_addr_ = value;
}
inline void AutoThreadPrefetchDef::set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_data_addr(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadPrefetchDef.data_addr)
}

// uint32 data_addr_offset = 2;
inline void AutoThreadPrefetchDef::clear_data_addr_offset() {
  data_addr_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadPrefetchDef::_internal_data_addr_offset() const {
  return data_addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadPrefetchDef::data_addr_offset() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadPrefetchDef.data_addr_offset)
  return _internal_data_addr_offset();
}
inline void AutoThreadPrefetchDef::_internal_set_data_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_addr_offset_ = value;
}
inline void AutoThreadPrefetchDef::set_data_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_addr_offset(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadPrefetchDef.data_addr_offset)
}

// uint32 non_tail_data_len = 3;
inline void AutoThreadPrefetchDef::clear_non_tail_data_len() {
  non_tail_data_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadPrefetchDef::_internal_non_tail_data_len() const {
  return non_tail_data_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadPrefetchDef::non_tail_data_len() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadPrefetchDef.non_tail_data_len)
  return _internal_non_tail_data_len();
}
inline void AutoThreadPrefetchDef::_internal_set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_data_len_ = value;
}
inline void AutoThreadPrefetchDef::set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_data_len(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadPrefetchDef.non_tail_data_len)
}

// uint32 tail_data_len = 4;
inline void AutoThreadPrefetchDef::clear_tail_data_len() {
  tail_data_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadPrefetchDef::_internal_tail_data_len() const {
  return tail_data_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutoThreadPrefetchDef::tail_data_len() const {
  // @@protoc_insertion_point(field_get:domi.AutoThreadPrefetchDef.tail_data_len)
  return _internal_tail_data_len();
}
inline void AutoThreadPrefetchDef::_internal_set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_data_len_ = value;
}
inline void AutoThreadPrefetchDef::set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_data_len(value);
  // @@protoc_insertion_point(field_set:domi.AutoThreadPrefetchDef.tail_data_len)
}

// -------------------------------------------------------------------

// ManualThreadAicAivDef

// repeated uint64 task_addr = 1;
inline int ManualThreadAicAivDef::_internal_task_addr_size() const {
  return task_addr_.size();
}
inline int ManualThreadAicAivDef::task_addr_size() const {
  return _internal_task_addr_size();
}
inline void ManualThreadAicAivDef::clear_task_addr() {
  task_addr_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ManualThreadAicAivDef::_internal_task_addr(int index) const {
  return task_addr_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ManualThreadAicAivDef::task_addr(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.task_addr)
  return _internal_task_addr(index);
}
inline void ManualThreadAicAivDef::set_task_addr(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.task_addr)
}
inline void ManualThreadAicAivDef::_internal_add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_.Add(value);
}
inline void ManualThreadAicAivDef::add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_task_addr(value);
  // @@protoc_insertion_point(field_add:domi.ManualThreadAicAivDef.task_addr)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ManualThreadAicAivDef::_internal_task_addr() const {
  return task_addr_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ManualThreadAicAivDef::task_addr() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadAicAivDef.task_addr)
  return _internal_task_addr();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ManualThreadAicAivDef::_internal_mutable_task_addr() {
  return &task_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ManualThreadAicAivDef::mutable_task_addr() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadAicAivDef.task_addr)
  return _internal_mutable_task_addr();
}

// repeated uint64 task_addr_offset = 2;
inline int ManualThreadAicAivDef::_internal_task_addr_offset_size() const {
  return task_addr_offset_.size();
}
inline int ManualThreadAicAivDef::task_addr_offset_size() const {
  return _internal_task_addr_offset_size();
}
inline void ManualThreadAicAivDef::clear_task_addr_offset() {
  task_addr_offset_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ManualThreadAicAivDef::_internal_task_addr_offset(int index) const {
  return task_addr_offset_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ManualThreadAicAivDef::task_addr_offset(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.task_addr_offset)
  return _internal_task_addr_offset(index);
}
inline void ManualThreadAicAivDef::set_task_addr_offset(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.task_addr_offset)
}
inline void ManualThreadAicAivDef::_internal_add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_offset_.Add(value);
}
inline void ManualThreadAicAivDef::add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_task_addr_offset(value);
  // @@protoc_insertion_point(field_add:domi.ManualThreadAicAivDef.task_addr_offset)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ManualThreadAicAivDef::_internal_task_addr_offset() const {
  return task_addr_offset_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ManualThreadAicAivDef::task_addr_offset() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadAicAivDef.task_addr_offset)
  return _internal_task_addr_offset();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ManualThreadAicAivDef::_internal_mutable_task_addr_offset() {
  return &task_addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ManualThreadAicAivDef::mutable_task_addr_offset() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadAicAivDef.task_addr_offset)
  return _internal_mutable_task_addr_offset();
}

// uint32 task_param_offset = 3;
inline void ManualThreadAicAivDef::clear_task_param_offset() {
  task_param_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_task_param_offset() const {
  return task_param_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::task_param_offset() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.task_param_offset)
  return _internal_task_param_offset();
}
inline void ManualThreadAicAivDef::_internal_set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  task_param_offset_ = value;
}
inline void ManualThreadAicAivDef::set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_task_param_offset(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.task_param_offset)
}

// uint32 sat_mode = 4;
inline void ManualThreadAicAivDef::clear_sat_mode() {
  sat_mode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_sat_mode() const {
  return sat_mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::sat_mode() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.sat_mode)
  return _internal_sat_mode();
}
inline void ManualThreadAicAivDef::_internal_set_sat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sat_mode_ = value;
}
inline void ManualThreadAicAivDef::set_sat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sat_mode(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.sat_mode)
}

// uint32 schedule_mode = 5;
inline void ManualThreadAicAivDef::clear_schedule_mode() {
  schedule_mode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_schedule_mode() const {
  return schedule_mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::schedule_mode() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.schedule_mode)
  return _internal_schedule_mode();
}
inline void ManualThreadAicAivDef::_internal_set_schedule_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  schedule_mode_ = value;
}
inline void ManualThreadAicAivDef::set_schedule_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_schedule_mode(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.schedule_mode)
}

// uint32 cache_prefetch_cnt = 6;
inline void ManualThreadAicAivDef::clear_cache_prefetch_cnt() {
  cache_prefetch_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_cache_prefetch_cnt() const {
  return cache_prefetch_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::cache_prefetch_cnt() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.cache_prefetch_cnt)
  return _internal_cache_prefetch_cnt();
}
inline void ManualThreadAicAivDef::_internal_set_cache_prefetch_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cache_prefetch_cnt_ = value;
}
inline void ManualThreadAicAivDef::set_cache_prefetch_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cache_prefetch_cnt(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.cache_prefetch_cnt)
}

// uint32 prefetch_enable_bitmap = 7;
inline void ManualThreadAicAivDef::clear_prefetch_enable_bitmap() {
  prefetch_enable_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_prefetch_enable_bitmap() const {
  return prefetch_enable_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::prefetch_enable_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.prefetch_enable_bitmap)
  return _internal_prefetch_enable_bitmap();
}
inline void ManualThreadAicAivDef::_internal_set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_enable_bitmap_ = value;
}
inline void ManualThreadAicAivDef::set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_enable_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.prefetch_enable_bitmap)
}

// uint32 prefetch_once_bitmap = 8;
inline void ManualThreadAicAivDef::clear_prefetch_once_bitmap() {
  prefetch_once_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_prefetch_once_bitmap() const {
  return prefetch_once_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::prefetch_once_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.prefetch_once_bitmap)
  return _internal_prefetch_once_bitmap();
}
inline void ManualThreadAicAivDef::_internal_set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_once_bitmap_ = value;
}
inline void ManualThreadAicAivDef::set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_once_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.prefetch_once_bitmap)
}

// uint32 prefetch_once_dmu_num = 9;
inline void ManualThreadAicAivDef::clear_prefetch_once_dmu_num() {
  prefetch_once_dmu_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_prefetch_once_dmu_num() const {
  return prefetch_once_dmu_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::prefetch_once_dmu_num() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.prefetch_once_dmu_num)
  return _internal_prefetch_once_dmu_num();
}
inline void ManualThreadAicAivDef::_internal_set_prefetch_once_dmu_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_once_dmu_num_ = value;
}
inline void ManualThreadAicAivDef::set_prefetch_once_dmu_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_once_dmu_num(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.prefetch_once_dmu_num)
}

// repeated uint32 thread_prefetch_dmu_idx = 10;
inline int ManualThreadAicAivDef::_internal_thread_prefetch_dmu_idx_size() const {
  return thread_prefetch_dmu_idx_.size();
}
inline int ManualThreadAicAivDef::thread_prefetch_dmu_idx_size() const {
  return _internal_thread_prefetch_dmu_idx_size();
}
inline void ManualThreadAicAivDef::clear_thread_prefetch_dmu_idx() {
  thread_prefetch_dmu_idx_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_thread_prefetch_dmu_idx(int index) const {
  return thread_prefetch_dmu_idx_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::thread_prefetch_dmu_idx(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.thread_prefetch_dmu_idx)
  return _internal_thread_prefetch_dmu_idx(index);
}
inline void ManualThreadAicAivDef::set_thread_prefetch_dmu_idx(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  thread_prefetch_dmu_idx_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.thread_prefetch_dmu_idx)
}
inline void ManualThreadAicAivDef::_internal_add_thread_prefetch_dmu_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  thread_prefetch_dmu_idx_.Add(value);
}
inline void ManualThreadAicAivDef::add_thread_prefetch_dmu_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_thread_prefetch_dmu_idx(value);
  // @@protoc_insertion_point(field_add:domi.ManualThreadAicAivDef.thread_prefetch_dmu_idx)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadAicAivDef::_internal_thread_prefetch_dmu_idx() const {
  return thread_prefetch_dmu_idx_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadAicAivDef::thread_prefetch_dmu_idx() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadAicAivDef.thread_prefetch_dmu_idx)
  return _internal_thread_prefetch_dmu_idx();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadAicAivDef::_internal_mutable_thread_prefetch_dmu_idx() {
  return &thread_prefetch_dmu_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadAicAivDef::mutable_thread_prefetch_dmu_idx() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadAicAivDef.thread_prefetch_dmu_idx)
  return _internal_mutable_thread_prefetch_dmu_idx();
}

// repeated uint32 thread_blk_dim = 11;
inline int ManualThreadAicAivDef::_internal_thread_blk_dim_size() const {
  return thread_blk_dim_.size();
}
inline int ManualThreadAicAivDef::thread_blk_dim_size() const {
  return _internal_thread_blk_dim_size();
}
inline void ManualThreadAicAivDef::clear_thread_blk_dim() {
  thread_blk_dim_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_thread_blk_dim(int index) const {
  return thread_blk_dim_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::thread_blk_dim(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.thread_blk_dim)
  return _internal_thread_blk_dim(index);
}
inline void ManualThreadAicAivDef::set_thread_blk_dim(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  thread_blk_dim_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.thread_blk_dim)
}
inline void ManualThreadAicAivDef::_internal_add_thread_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  thread_blk_dim_.Add(value);
}
inline void ManualThreadAicAivDef::add_thread_blk_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_thread_blk_dim(value);
  // @@protoc_insertion_point(field_add:domi.ManualThreadAicAivDef.thread_blk_dim)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadAicAivDef::_internal_thread_blk_dim() const {
  return thread_blk_dim_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadAicAivDef::thread_blk_dim() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadAicAivDef.thread_blk_dim)
  return _internal_thread_blk_dim();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadAicAivDef::_internal_mutable_thread_blk_dim() {
  return &thread_blk_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadAicAivDef::mutable_thread_blk_dim() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadAicAivDef.thread_blk_dim)
  return _internal_mutable_thread_blk_dim();
}

// repeated string thread_task_func_stub = 12;
inline int ManualThreadAicAivDef::_internal_thread_task_func_stub_size() const {
  return thread_task_func_stub_.size();
}
inline int ManualThreadAicAivDef::thread_task_func_stub_size() const {
  return _internal_thread_task_func_stub_size();
}
inline void ManualThreadAicAivDef::clear_thread_task_func_stub() {
  thread_task_func_stub_.Clear();
}
inline std::string* ManualThreadAicAivDef::add_thread_task_func_stub() {
  // @@protoc_insertion_point(field_add_mutable:domi.ManualThreadAicAivDef.thread_task_func_stub)
  return _internal_add_thread_task_func_stub();
}
inline const std::string& ManualThreadAicAivDef::_internal_thread_task_func_stub(int index) const {
  return thread_task_func_stub_.Get(index);
}
inline const std::string& ManualThreadAicAivDef::thread_task_func_stub(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.thread_task_func_stub)
  return _internal_thread_task_func_stub(index);
}
inline std::string* ManualThreadAicAivDef::mutable_thread_task_func_stub(int index) {
  // @@protoc_insertion_point(field_mutable:domi.ManualThreadAicAivDef.thread_task_func_stub)
  return thread_task_func_stub_.Mutable(index);
}
inline void ManualThreadAicAivDef::set_thread_task_func_stub(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.thread_task_func_stub)
  thread_task_func_stub_.Mutable(index)->assign(value);
}
inline void ManualThreadAicAivDef::set_thread_task_func_stub(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.thread_task_func_stub)
  thread_task_func_stub_.Mutable(index)->assign(std::move(value));
}
inline void ManualThreadAicAivDef::set_thread_task_func_stub(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  thread_task_func_stub_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:domi.ManualThreadAicAivDef.thread_task_func_stub)
}
inline void ManualThreadAicAivDef::set_thread_task_func_stub(int index, const char* value, size_t size) {
  thread_task_func_stub_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:domi.ManualThreadAicAivDef.thread_task_func_stub)
}
inline std::string* ManualThreadAicAivDef::_internal_add_thread_task_func_stub() {
  return thread_task_func_stub_.Add();
}
inline void ManualThreadAicAivDef::add_thread_task_func_stub(const std::string& value) {
  thread_task_func_stub_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:domi.ManualThreadAicAivDef.thread_task_func_stub)
}
inline void ManualThreadAicAivDef::add_thread_task_func_stub(std::string&& value) {
  thread_task_func_stub_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:domi.ManualThreadAicAivDef.thread_task_func_stub)
}
inline void ManualThreadAicAivDef::add_thread_task_func_stub(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  thread_task_func_stub_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:domi.ManualThreadAicAivDef.thread_task_func_stub)
}
inline void ManualThreadAicAivDef::add_thread_task_func_stub(const char* value, size_t size) {
  thread_task_func_stub_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:domi.ManualThreadAicAivDef.thread_task_func_stub)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ManualThreadAicAivDef::thread_task_func_stub() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadAicAivDef.thread_task_func_stub)
  return thread_task_func_stub_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ManualThreadAicAivDef::mutable_thread_task_func_stub() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadAicAivDef.thread_task_func_stub)
  return &thread_task_func_stub_;
}

// repeated .domi.ManualThreadDmuDef prefetch_list = 13;
inline int ManualThreadAicAivDef::_internal_prefetch_list_size() const {
  return prefetch_list_.size();
}
inline int ManualThreadAicAivDef::prefetch_list_size() const {
  return _internal_prefetch_list_size();
}
inline void ManualThreadAicAivDef::clear_prefetch_list() {
  prefetch_list_.Clear();
}
inline ::domi::ManualThreadDmuDef* ManualThreadAicAivDef::mutable_prefetch_list(int index) {
  // @@protoc_insertion_point(field_mutable:domi.ManualThreadAicAivDef.prefetch_list)
  return prefetch_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef >*
ManualThreadAicAivDef::mutable_prefetch_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadAicAivDef.prefetch_list)
  return &prefetch_list_;
}
inline const ::domi::ManualThreadDmuDef& ManualThreadAicAivDef::_internal_prefetch_list(int index) const {
  return prefetch_list_.Get(index);
}
inline const ::domi::ManualThreadDmuDef& ManualThreadAicAivDef::prefetch_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.prefetch_list)
  return _internal_prefetch_list(index);
}
inline ::domi::ManualThreadDmuDef* ManualThreadAicAivDef::_internal_add_prefetch_list() {
  return prefetch_list_.Add();
}
inline ::domi::ManualThreadDmuDef* ManualThreadAicAivDef::add_prefetch_list() {
  // @@protoc_insertion_point(field_add:domi.ManualThreadAicAivDef.prefetch_list)
  return _internal_add_prefetch_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef >&
ManualThreadAicAivDef::prefetch_list() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadAicAivDef.prefetch_list)
  return prefetch_list_;
}

// repeated .domi.ManualThreadDependencyDef src_dep_tbl = 14;
inline int ManualThreadAicAivDef::_internal_src_dep_tbl_size() const {
  return src_dep_tbl_.size();
}
inline int ManualThreadAicAivDef::src_dep_tbl_size() const {
  return _internal_src_dep_tbl_size();
}
inline void ManualThreadAicAivDef::clear_src_dep_tbl() {
  src_dep_tbl_.Clear();
}
inline ::domi::ManualThreadDependencyDef* ManualThreadAicAivDef::mutable_src_dep_tbl(int index) {
  // @@protoc_insertion_point(field_mutable:domi.ManualThreadAicAivDef.src_dep_tbl)
  return src_dep_tbl_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef >*
ManualThreadAicAivDef::mutable_src_dep_tbl() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadAicAivDef.src_dep_tbl)
  return &src_dep_tbl_;
}
inline const ::domi::ManualThreadDependencyDef& ManualThreadAicAivDef::_internal_src_dep_tbl(int index) const {
  return src_dep_tbl_.Get(index);
}
inline const ::domi::ManualThreadDependencyDef& ManualThreadAicAivDef::src_dep_tbl(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.src_dep_tbl)
  return _internal_src_dep_tbl(index);
}
inline ::domi::ManualThreadDependencyDef* ManualThreadAicAivDef::_internal_add_src_dep_tbl() {
  return src_dep_tbl_.Add();
}
inline ::domi::ManualThreadDependencyDef* ManualThreadAicAivDef::add_src_dep_tbl() {
  // @@protoc_insertion_point(field_add:domi.ManualThreadAicAivDef.src_dep_tbl)
  return _internal_add_src_dep_tbl();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef >&
ManualThreadAicAivDef::src_dep_tbl() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadAicAivDef.src_dep_tbl)
  return src_dep_tbl_;
}

// uint32 input_output_count = 15;
inline void ManualThreadAicAivDef::clear_input_output_count() {
  input_output_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::_internal_input_output_count() const {
  return input_output_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadAicAivDef::input_output_count() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadAicAivDef.input_output_count)
  return _internal_input_output_count();
}
inline void ManualThreadAicAivDef::_internal_set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input_output_count_ = value;
}
inline void ManualThreadAicAivDef::set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input_output_count(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadAicAivDef.input_output_count)
}

// -------------------------------------------------------------------

// ManualThreadNopDef

// repeated .domi.ManualThreadDependencyDef src_dep_tbl = 1;
inline int ManualThreadNopDef::_internal_src_dep_tbl_size() const {
  return src_dep_tbl_.size();
}
inline int ManualThreadNopDef::src_dep_tbl_size() const {
  return _internal_src_dep_tbl_size();
}
inline void ManualThreadNopDef::clear_src_dep_tbl() {
  src_dep_tbl_.Clear();
}
inline ::domi::ManualThreadDependencyDef* ManualThreadNopDef::mutable_src_dep_tbl(int index) {
  // @@protoc_insertion_point(field_mutable:domi.ManualThreadNopDef.src_dep_tbl)
  return src_dep_tbl_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef >*
ManualThreadNopDef::mutable_src_dep_tbl() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadNopDef.src_dep_tbl)
  return &src_dep_tbl_;
}
inline const ::domi::ManualThreadDependencyDef& ManualThreadNopDef::_internal_src_dep_tbl(int index) const {
  return src_dep_tbl_.Get(index);
}
inline const ::domi::ManualThreadDependencyDef& ManualThreadNopDef::src_dep_tbl(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadNopDef.src_dep_tbl)
  return _internal_src_dep_tbl(index);
}
inline ::domi::ManualThreadDependencyDef* ManualThreadNopDef::_internal_add_src_dep_tbl() {
  return src_dep_tbl_.Add();
}
inline ::domi::ManualThreadDependencyDef* ManualThreadNopDef::add_src_dep_tbl() {
  // @@protoc_insertion_point(field_add:domi.ManualThreadNopDef.src_dep_tbl)
  return _internal_add_src_dep_tbl();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDependencyDef >&
ManualThreadNopDef::src_dep_tbl() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadNopDef.src_dep_tbl)
  return src_dep_tbl_;
}

// -------------------------------------------------------------------

// ManualThreadCacheDef

// repeated .domi.ManualThreadDmuDef dmu_list = 1;
inline int ManualThreadCacheDef::_internal_dmu_list_size() const {
  return dmu_list_.size();
}
inline int ManualThreadCacheDef::dmu_list_size() const {
  return _internal_dmu_list_size();
}
inline void ManualThreadCacheDef::clear_dmu_list() {
  dmu_list_.Clear();
}
inline ::domi::ManualThreadDmuDef* ManualThreadCacheDef::mutable_dmu_list(int index) {
  // @@protoc_insertion_point(field_mutable:domi.ManualThreadCacheDef.dmu_list)
  return dmu_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef >*
ManualThreadCacheDef::mutable_dmu_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadCacheDef.dmu_list)
  return &dmu_list_;
}
inline const ::domi::ManualThreadDmuDef& ManualThreadCacheDef::_internal_dmu_list(int index) const {
  return dmu_list_.Get(index);
}
inline const ::domi::ManualThreadDmuDef& ManualThreadCacheDef::dmu_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadCacheDef.dmu_list)
  return _internal_dmu_list(index);
}
inline ::domi::ManualThreadDmuDef* ManualThreadCacheDef::_internal_add_dmu_list() {
  return dmu_list_.Add();
}
inline ::domi::ManualThreadDmuDef* ManualThreadCacheDef::add_dmu_list() {
  // @@protoc_insertion_point(field_add:domi.ManualThreadCacheDef.dmu_list)
  return _internal_add_dmu_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::ManualThreadDmuDef >&
ManualThreadCacheDef::dmu_list() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadCacheDef.dmu_list)
  return dmu_list_;
}

// repeated uint32 slice_dmu_idx = 2;
inline int ManualThreadCacheDef::_internal_slice_dmu_idx_size() const {
  return slice_dmu_idx_.size();
}
inline int ManualThreadCacheDef::slice_dmu_idx_size() const {
  return _internal_slice_dmu_idx_size();
}
inline void ManualThreadCacheDef::clear_slice_dmu_idx() {
  slice_dmu_idx_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadCacheDef::_internal_slice_dmu_idx(int index) const {
  return slice_dmu_idx_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadCacheDef::slice_dmu_idx(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadCacheDef.slice_dmu_idx)
  return _internal_slice_dmu_idx(index);
}
inline void ManualThreadCacheDef::set_slice_dmu_idx(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  slice_dmu_idx_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadCacheDef.slice_dmu_idx)
}
inline void ManualThreadCacheDef::_internal_add_slice_dmu_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  slice_dmu_idx_.Add(value);
}
inline void ManualThreadCacheDef::add_slice_dmu_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_slice_dmu_idx(value);
  // @@protoc_insertion_point(field_add:domi.ManualThreadCacheDef.slice_dmu_idx)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadCacheDef::_internal_slice_dmu_idx() const {
  return slice_dmu_idx_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadCacheDef::slice_dmu_idx() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadCacheDef.slice_dmu_idx)
  return _internal_slice_dmu_idx();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadCacheDef::_internal_mutable_slice_dmu_idx() {
  return &slice_dmu_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadCacheDef::mutable_slice_dmu_idx() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadCacheDef.slice_dmu_idx)
  return _internal_mutable_slice_dmu_idx();
}

// repeated uint32 ticket_cache_ref_cnt_tbl = 3;
inline int ManualThreadCacheDef::_internal_ticket_cache_ref_cnt_tbl_size() const {
  return ticket_cache_ref_cnt_tbl_.size();
}
inline int ManualThreadCacheDef::ticket_cache_ref_cnt_tbl_size() const {
  return _internal_ticket_cache_ref_cnt_tbl_size();
}
inline void ManualThreadCacheDef::clear_ticket_cache_ref_cnt_tbl() {
  ticket_cache_ref_cnt_tbl_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadCacheDef::_internal_ticket_cache_ref_cnt_tbl(int index) const {
  return ticket_cache_ref_cnt_tbl_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadCacheDef::ticket_cache_ref_cnt_tbl(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadCacheDef.ticket_cache_ref_cnt_tbl)
  return _internal_ticket_cache_ref_cnt_tbl(index);
}
inline void ManualThreadCacheDef::set_ticket_cache_ref_cnt_tbl(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  ticket_cache_ref_cnt_tbl_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadCacheDef.ticket_cache_ref_cnt_tbl)
}
inline void ManualThreadCacheDef::_internal_add_ticket_cache_ref_cnt_tbl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  ticket_cache_ref_cnt_tbl_.Add(value);
}
inline void ManualThreadCacheDef::add_ticket_cache_ref_cnt_tbl(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_ticket_cache_ref_cnt_tbl(value);
  // @@protoc_insertion_point(field_add:domi.ManualThreadCacheDef.ticket_cache_ref_cnt_tbl)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadCacheDef::_internal_ticket_cache_ref_cnt_tbl() const {
  return ticket_cache_ref_cnt_tbl_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadCacheDef::ticket_cache_ref_cnt_tbl() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadCacheDef.ticket_cache_ref_cnt_tbl)
  return _internal_ticket_cache_ref_cnt_tbl();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadCacheDef::_internal_mutable_ticket_cache_ref_cnt_tbl() {
  return &ticket_cache_ref_cnt_tbl_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadCacheDef::mutable_ticket_cache_ref_cnt_tbl() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadCacheDef.ticket_cache_ref_cnt_tbl)
  return _internal_mutable_ticket_cache_ref_cnt_tbl();
}

// -------------------------------------------------------------------

// ManualThreadDmuDef

// uint64 data_addr = 1;
inline void ManualThreadDmuDef::clear_data_addr() {
  data_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ManualThreadDmuDef::_internal_data_addr() const {
  return data_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ManualThreadDmuDef::data_addr() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadDmuDef.data_addr)
  return _internal_data_addr();
}
inline void ManualThreadDmuDef::_internal_set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  data_addr_ = value;
}
inline void ManualThreadDmuDef::set_data_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_data_addr(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadDmuDef.data_addr)
}

// uint32 num_outer = 2;
inline void ManualThreadDmuDef::clear_num_outer() {
  num_outer_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::_internal_num_outer() const {
  return num_outer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::num_outer() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadDmuDef.num_outer)
  return _internal_num_outer();
}
inline void ManualThreadDmuDef::_internal_set_num_outer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  num_outer_ = value;
}
inline void ManualThreadDmuDef::set_num_outer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_outer(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadDmuDef.num_outer)
}

// uint32 num_inner = 3;
inline void ManualThreadDmuDef::clear_num_inner() {
  num_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::_internal_num_inner() const {
  return num_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::num_inner() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadDmuDef.num_inner)
  return _internal_num_inner();
}
inline void ManualThreadDmuDef::_internal_set_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  num_inner_ = value;
}
inline void ManualThreadDmuDef::set_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_inner(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadDmuDef.num_inner)
}

// uint32 stride_outer = 4;
inline void ManualThreadDmuDef::clear_stride_outer() {
  stride_outer_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::_internal_stride_outer() const {
  return stride_outer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::stride_outer() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadDmuDef.stride_outer)
  return _internal_stride_outer();
}
inline void ManualThreadDmuDef::_internal_set_stride_outer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  stride_outer_ = value;
}
inline void ManualThreadDmuDef::set_stride_outer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stride_outer(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadDmuDef.stride_outer)
}

// uint32 len_inner = 5;
inline void ManualThreadDmuDef::clear_len_inner() {
  len_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::_internal_len_inner() const {
  return len_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::len_inner() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadDmuDef.len_inner)
  return _internal_len_inner();
}
inline void ManualThreadDmuDef::_internal_set_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  len_inner_ = value;
}
inline void ManualThreadDmuDef::set_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_len_inner(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadDmuDef.len_inner)
}

// uint32 stride_inner = 6;
inline void ManualThreadDmuDef::clear_stride_inner() {
  stride_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::_internal_stride_inner() const {
  return stride_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDmuDef::stride_inner() const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadDmuDef.stride_inner)
  return _internal_stride_inner();
}
inline void ManualThreadDmuDef::_internal_set_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  stride_inner_ = value;
}
inline void ManualThreadDmuDef::set_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stride_inner(value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadDmuDef.stride_inner)
}

// -------------------------------------------------------------------

// ManualThreadDependencyDef

// repeated uint32 dependency = 1;
inline int ManualThreadDependencyDef::_internal_dependency_size() const {
  return dependency_.size();
}
inline int ManualThreadDependencyDef::dependency_size() const {
  return _internal_dependency_size();
}
inline void ManualThreadDependencyDef::clear_dependency() {
  dependency_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDependencyDef::_internal_dependency(int index) const {
  return dependency_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ManualThreadDependencyDef::dependency(int index) const {
  // @@protoc_insertion_point(field_get:domi.ManualThreadDependencyDef.dependency)
  return _internal_dependency(index);
}
inline void ManualThreadDependencyDef::set_dependency(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  dependency_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.ManualThreadDependencyDef.dependency)
}
inline void ManualThreadDependencyDef::_internal_add_dependency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  dependency_.Add(value);
}
inline void ManualThreadDependencyDef::add_dependency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_dependency(value);
  // @@protoc_insertion_point(field_add:domi.ManualThreadDependencyDef.dependency)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadDependencyDef::_internal_dependency() const {
  return dependency_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ManualThreadDependencyDef::dependency() const {
  // @@protoc_insertion_point(field_list:domi.ManualThreadDependencyDef.dependency)
  return _internal_dependency();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadDependencyDef::_internal_mutable_dependency() {
  return &dependency_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ManualThreadDependencyDef::mutable_dependency() {
  // @@protoc_insertion_point(field_mutable_list:domi.ManualThreadDependencyDef.dependency)
  return _internal_mutable_dependency();
}

// -------------------------------------------------------------------

// DSATaskDef

// uint32 op_index = 1;
inline void DSATaskDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.op_index)
  return _internal_op_index();
}
inline void DSATaskDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void DSATaskDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.op_index)
}

// uint32 start = 2;
inline void DSATaskDef::clear_start() {
  start_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_start() const {
  return start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::start() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.start)
  return _internal_start();
}
inline void DSATaskDef::_internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_ = value;
}
inline void DSATaskDef::set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.start)
}

// uint32 sqe_type = 3;
inline void DSATaskDef::clear_sqe_type() {
  sqe_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_sqe_type() const {
  return sqe_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::sqe_type() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.sqe_type)
  return _internal_sqe_type();
}
inline void DSATaskDef::_internal_set_sqe_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sqe_type_ = value;
}
inline void DSATaskDef::set_sqe_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sqe_type(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.sqe_type)
}

// uint32 distribution_type = 4;
inline void DSATaskDef::clear_distribution_type() {
  distribution_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_distribution_type() const {
  return distribution_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::distribution_type() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.distribution_type)
  return _internal_distribution_type();
}
inline void DSATaskDef::_internal_set_distribution_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  distribution_type_ = value;
}
inline void DSATaskDef::set_distribution_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_distribution_type(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.distribution_type)
}

// uint32 data_type = 5;
inline void DSATaskDef::clear_data_type() {
  data_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_data_type() const {
  return data_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::data_type() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.data_type)
  return _internal_data_type();
}
inline void DSATaskDef::_internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_type_ = value;
}
inline void DSATaskDef::set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_type(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.data_type)
}

// uint32 alg_type = 6;
inline void DSATaskDef::clear_alg_type() {
  alg_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_alg_type() const {
  return alg_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::alg_type() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.alg_type)
  return _internal_alg_type();
}
inline void DSATaskDef::_internal_set_alg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  alg_type_ = value;
}
inline void DSATaskDef::set_alg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_alg_type(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.alg_type)
}

// uint32 input_vld = 7;
inline void DSATaskDef::clear_input_vld() {
  input_vld_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_input_vld() const {
  return input_vld_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::input_vld() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.input_vld)
  return _internal_input_vld();
}
inline void DSATaskDef::_internal_set_input_vld(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input_vld_ = value;
}
inline void DSATaskDef::set_input_vld(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input_vld(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.input_vld)
}

// uint32 input_value_addr_flag = 8;
inline void DSATaskDef::clear_input_value_addr_flag() {
  input_value_addr_flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_input_value_addr_flag() const {
  return input_value_addr_flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::input_value_addr_flag() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.input_value_addr_flag)
  return _internal_input_value_addr_flag();
}
inline void DSATaskDef::_internal_set_input_value_addr_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input_value_addr_flag_ = value;
}
inline void DSATaskDef::set_input_value_addr_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input_value_addr_flag(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.input_value_addr_flag)
}

// uint32 input1_value_or_ptr = 9;
inline void DSATaskDef::clear_input1_value_or_ptr() {
  input1_value_or_ptr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_input1_value_or_ptr() const {
  return input1_value_or_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::input1_value_or_ptr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.input1_value_or_ptr)
  return _internal_input1_value_or_ptr();
}
inline void DSATaskDef::_internal_set_input1_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input1_value_or_ptr_ = value;
}
inline void DSATaskDef::set_input1_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input1_value_or_ptr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.input1_value_or_ptr)
}

// uint32 input2_value_or_ptr = 10;
inline void DSATaskDef::clear_input2_value_or_ptr() {
  input2_value_or_ptr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_input2_value_or_ptr() const {
  return input2_value_or_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::input2_value_or_ptr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.input2_value_or_ptr)
  return _internal_input2_value_or_ptr();
}
inline void DSATaskDef::_internal_set_input2_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input2_value_or_ptr_ = value;
}
inline void DSATaskDef::set_input2_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input2_value_or_ptr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.input2_value_or_ptr)
}

// uint32 seed_value_or_ptr = 11;
inline void DSATaskDef::clear_seed_value_or_ptr() {
  seed_value_or_ptr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_seed_value_or_ptr() const {
  return seed_value_or_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::seed_value_or_ptr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.seed_value_or_ptr)
  return _internal_seed_value_or_ptr();
}
inline void DSATaskDef::_internal_set_seed_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  seed_value_or_ptr_ = value;
}
inline void DSATaskDef::set_seed_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seed_value_or_ptr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.seed_value_or_ptr)
}

// uint32 random_count_value_or_ptr = 12;
inline void DSATaskDef::clear_random_count_value_or_ptr() {
  random_count_value_or_ptr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::_internal_random_count_value_or_ptr() const {
  return random_count_value_or_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DSATaskDef::random_count_value_or_ptr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.random_count_value_or_ptr)
  return _internal_random_count_value_or_ptr();
}
inline void DSATaskDef::_internal_set_random_count_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  random_count_value_or_ptr_ = value;
}
inline void DSATaskDef::set_random_count_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_random_count_value_or_ptr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskDef.random_count_value_or_ptr)
}

// .domi.DSATaskArgsDef args = 13;
inline bool DSATaskDef::_internal_has_args() const {
  return this != internal_default_instance() && args_ != nullptr;
}
inline bool DSATaskDef::has_args() const {
  return _internal_has_args();
}
inline void DSATaskDef::clear_args() {
  if (GetArena() == nullptr && args_ != nullptr) {
    delete args_;
  }
  args_ = nullptr;
}
inline const ::domi::DSATaskArgsDef& DSATaskDef::_internal_args() const {
  const ::domi::DSATaskArgsDef* p = args_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::DSATaskArgsDef*>(
      &::domi::_DSATaskArgsDef_default_instance_);
}
inline const ::domi::DSATaskArgsDef& DSATaskDef::args() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskDef.args)
  return _internal_args();
}
inline void DSATaskDef::unsafe_arena_set_allocated_args(
    ::domi::DSATaskArgsDef* args) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(args_);
  }
  args_ = args;
  if (args) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.DSATaskDef.args)
}
inline ::domi::DSATaskArgsDef* DSATaskDef::release_args() {
  
  ::domi::DSATaskArgsDef* temp = args_;
  args_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::DSATaskArgsDef* DSATaskDef::unsafe_arena_release_args() {
  // @@protoc_insertion_point(field_release:domi.DSATaskDef.args)
  
  ::domi::DSATaskArgsDef* temp = args_;
  args_ = nullptr;
  return temp;
}
inline ::domi::DSATaskArgsDef* DSATaskDef::_internal_mutable_args() {
  
  if (args_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::DSATaskArgsDef>(GetArena());
    args_ = p;
  }
  return args_;
}
inline ::domi::DSATaskArgsDef* DSATaskDef::mutable_args() {
  // @@protoc_insertion_point(field_mutable:domi.DSATaskDef.args)
  return _internal_mutable_args();
}
inline void DSATaskDef::set_allocated_args(::domi::DSATaskArgsDef* args) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete args_;
  }
  if (args) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(args);
    if (message_arena != submessage_arena) {
      args = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, args, submessage_arena);
    }
    
  } else {
    
  }
  args_ = args;
  // @@protoc_insertion_point(field_set_allocated:domi.DSATaskDef.args)
}

// -------------------------------------------------------------------

// DSATaskArgsDef

// uint64 output_addr = 1;
inline void DSATaskArgsDef::clear_output_addr() {
  output_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DSATaskArgsDef::_internal_output_addr() const {
  return output_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DSATaskArgsDef::output_addr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskArgsDef.output_addr)
  return _internal_output_addr();
}
inline void DSATaskArgsDef::_internal_set_output_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  output_addr_ = value;
}
inline void DSATaskArgsDef::set_output_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_output_addr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskArgsDef.output_addr)
}

// uint64 workspace_philox_count_addr = 2;
inline void DSATaskArgsDef::clear_workspace_philox_count_addr() {
  workspace_philox_count_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DSATaskArgsDef::_internal_workspace_philox_count_addr() const {
  return workspace_philox_count_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DSATaskArgsDef::workspace_philox_count_addr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskArgsDef.workspace_philox_count_addr)
  return _internal_workspace_philox_count_addr();
}
inline void DSATaskArgsDef::_internal_set_workspace_philox_count_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  workspace_philox_count_addr_ = value;
}
inline void DSATaskArgsDef::set_workspace_philox_count_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_workspace_philox_count_addr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskArgsDef.workspace_philox_count_addr)
}

// uint64 workspace_input_addr = 3;
inline void DSATaskArgsDef::clear_workspace_input_addr() {
  workspace_input_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DSATaskArgsDef::_internal_workspace_input_addr() const {
  return workspace_input_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DSATaskArgsDef::workspace_input_addr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskArgsDef.workspace_input_addr)
  return _internal_workspace_input_addr();
}
inline void DSATaskArgsDef::_internal_set_workspace_input_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  workspace_input_addr_ = value;
}
inline void DSATaskArgsDef::set_workspace_input_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_workspace_input_addr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskArgsDef.workspace_input_addr)
}

// bytes seed_value_or_addr = 4;
inline void DSATaskArgsDef::clear_seed_value_or_addr() {
  seed_value_or_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DSATaskArgsDef::seed_value_or_addr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskArgsDef.seed_value_or_addr)
  return _internal_seed_value_or_addr();
}
inline void DSATaskArgsDef::set_seed_value_or_addr(const std::string& value) {
  _internal_set_seed_value_or_addr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskArgsDef.seed_value_or_addr)
}
inline std::string* DSATaskArgsDef::mutable_seed_value_or_addr() {
  // @@protoc_insertion_point(field_mutable:domi.DSATaskArgsDef.seed_value_or_addr)
  return _internal_mutable_seed_value_or_addr();
}
inline const std::string& DSATaskArgsDef::_internal_seed_value_or_addr() const {
  return seed_value_or_addr_.Get();
}
inline void DSATaskArgsDef::_internal_set_seed_value_or_addr(const std::string& value) {
  
  seed_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DSATaskArgsDef::set_seed_value_or_addr(std::string&& value) {
  
  seed_value_or_addr_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.DSATaskArgsDef.seed_value_or_addr)
}
inline void DSATaskArgsDef::set_seed_value_or_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  seed_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.DSATaskArgsDef.seed_value_or_addr)
}
inline void DSATaskArgsDef::set_seed_value_or_addr(const void* value,
    size_t size) {
  
  seed_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.DSATaskArgsDef.seed_value_or_addr)
}
inline std::string* DSATaskArgsDef::_internal_mutable_seed_value_or_addr() {
  
  return seed_value_or_addr_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DSATaskArgsDef::release_seed_value_or_addr() {
  // @@protoc_insertion_point(field_release:domi.DSATaskArgsDef.seed_value_or_addr)
  return seed_value_or_addr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DSATaskArgsDef::set_allocated_seed_value_or_addr(std::string* seed_value_or_addr) {
  if (seed_value_or_addr != nullptr) {
    
  } else {
    
  }
  seed_value_or_addr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), seed_value_or_addr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.DSATaskArgsDef.seed_value_or_addr)
}

// bytes random_count_value_or_addr = 5;
inline void DSATaskArgsDef::clear_random_count_value_or_addr() {
  random_count_value_or_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DSATaskArgsDef::random_count_value_or_addr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskArgsDef.random_count_value_or_addr)
  return _internal_random_count_value_or_addr();
}
inline void DSATaskArgsDef::set_random_count_value_or_addr(const std::string& value) {
  _internal_set_random_count_value_or_addr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskArgsDef.random_count_value_or_addr)
}
inline std::string* DSATaskArgsDef::mutable_random_count_value_or_addr() {
  // @@protoc_insertion_point(field_mutable:domi.DSATaskArgsDef.random_count_value_or_addr)
  return _internal_mutable_random_count_value_or_addr();
}
inline const std::string& DSATaskArgsDef::_internal_random_count_value_or_addr() const {
  return random_count_value_or_addr_.Get();
}
inline void DSATaskArgsDef::_internal_set_random_count_value_or_addr(const std::string& value) {
  
  random_count_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DSATaskArgsDef::set_random_count_value_or_addr(std::string&& value) {
  
  random_count_value_or_addr_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.DSATaskArgsDef.random_count_value_or_addr)
}
inline void DSATaskArgsDef::set_random_count_value_or_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  random_count_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.DSATaskArgsDef.random_count_value_or_addr)
}
inline void DSATaskArgsDef::set_random_count_value_or_addr(const void* value,
    size_t size) {
  
  random_count_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.DSATaskArgsDef.random_count_value_or_addr)
}
inline std::string* DSATaskArgsDef::_internal_mutable_random_count_value_or_addr() {
  
  return random_count_value_or_addr_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DSATaskArgsDef::release_random_count_value_or_addr() {
  // @@protoc_insertion_point(field_release:domi.DSATaskArgsDef.random_count_value_or_addr)
  return random_count_value_or_addr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DSATaskArgsDef::set_allocated_random_count_value_or_addr(std::string* random_count_value_or_addr) {
  if (random_count_value_or_addr != nullptr) {
    
  } else {
    
  }
  random_count_value_or_addr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), random_count_value_or_addr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.DSATaskArgsDef.random_count_value_or_addr)
}

// bytes input1_value_or_addr = 6;
inline void DSATaskArgsDef::clear_input1_value_or_addr() {
  input1_value_or_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DSATaskArgsDef::input1_value_or_addr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskArgsDef.input1_value_or_addr)
  return _internal_input1_value_or_addr();
}
inline void DSATaskArgsDef::set_input1_value_or_addr(const std::string& value) {
  _internal_set_input1_value_or_addr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskArgsDef.input1_value_or_addr)
}
inline std::string* DSATaskArgsDef::mutable_input1_value_or_addr() {
  // @@protoc_insertion_point(field_mutable:domi.DSATaskArgsDef.input1_value_or_addr)
  return _internal_mutable_input1_value_or_addr();
}
inline const std::string& DSATaskArgsDef::_internal_input1_value_or_addr() const {
  return input1_value_or_addr_.Get();
}
inline void DSATaskArgsDef::_internal_set_input1_value_or_addr(const std::string& value) {
  
  input1_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DSATaskArgsDef::set_input1_value_or_addr(std::string&& value) {
  
  input1_value_or_addr_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.DSATaskArgsDef.input1_value_or_addr)
}
inline void DSATaskArgsDef::set_input1_value_or_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  input1_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.DSATaskArgsDef.input1_value_or_addr)
}
inline void DSATaskArgsDef::set_input1_value_or_addr(const void* value,
    size_t size) {
  
  input1_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.DSATaskArgsDef.input1_value_or_addr)
}
inline std::string* DSATaskArgsDef::_internal_mutable_input1_value_or_addr() {
  
  return input1_value_or_addr_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DSATaskArgsDef::release_input1_value_or_addr() {
  // @@protoc_insertion_point(field_release:domi.DSATaskArgsDef.input1_value_or_addr)
  return input1_value_or_addr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DSATaskArgsDef::set_allocated_input1_value_or_addr(std::string* input1_value_or_addr) {
  if (input1_value_or_addr != nullptr) {
    
  } else {
    
  }
  input1_value_or_addr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), input1_value_or_addr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.DSATaskArgsDef.input1_value_or_addr)
}

// bytes input2_value_or_addr = 7;
inline void DSATaskArgsDef::clear_input2_value_or_addr() {
  input2_value_or_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DSATaskArgsDef::input2_value_or_addr() const {
  // @@protoc_insertion_point(field_get:domi.DSATaskArgsDef.input2_value_or_addr)
  return _internal_input2_value_or_addr();
}
inline void DSATaskArgsDef::set_input2_value_or_addr(const std::string& value) {
  _internal_set_input2_value_or_addr(value);
  // @@protoc_insertion_point(field_set:domi.DSATaskArgsDef.input2_value_or_addr)
}
inline std::string* DSATaskArgsDef::mutable_input2_value_or_addr() {
  // @@protoc_insertion_point(field_mutable:domi.DSATaskArgsDef.input2_value_or_addr)
  return _internal_mutable_input2_value_or_addr();
}
inline const std::string& DSATaskArgsDef::_internal_input2_value_or_addr() const {
  return input2_value_or_addr_.Get();
}
inline void DSATaskArgsDef::_internal_set_input2_value_or_addr(const std::string& value) {
  
  input2_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DSATaskArgsDef::set_input2_value_or_addr(std::string&& value) {
  
  input2_value_or_addr_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.DSATaskArgsDef.input2_value_or_addr)
}
inline void DSATaskArgsDef::set_input2_value_or_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  input2_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.DSATaskArgsDef.input2_value_or_addr)
}
inline void DSATaskArgsDef::set_input2_value_or_addr(const void* value,
    size_t size) {
  
  input2_value_or_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.DSATaskArgsDef.input2_value_or_addr)
}
inline std::string* DSATaskArgsDef::_internal_mutable_input2_value_or_addr() {
  
  return input2_value_or_addr_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DSATaskArgsDef::release_input2_value_or_addr() {
  // @@protoc_insertion_point(field_release:domi.DSATaskArgsDef.input2_value_or_addr)
  return input2_value_or_addr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DSATaskArgsDef::set_allocated_input2_value_or_addr(std::string* input2_value_or_addr) {
  if (input2_value_or_addr != nullptr) {
    
  } else {
    
  }
  input2_value_or_addr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), input2_value_or_addr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.DSATaskArgsDef.input2_value_or_addr)
}

// -------------------------------------------------------------------

// FftsPlusTaskDef

// uint32 op_index = 1;
inline void FftsPlusTaskDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusTaskDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusTaskDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusTaskDef.op_index)
  return _internal_op_index();
}
inline void FftsPlusTaskDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void FftsPlusTaskDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusTaskDef.op_index)
}

// uint32 addr_size = 2;
inline void FftsPlusTaskDef::clear_addr_size() {
  addr_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusTaskDef::_internal_addr_size() const {
  return addr_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusTaskDef::addr_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusTaskDef.addr_size)
  return _internal_addr_size();
}
inline void FftsPlusTaskDef::_internal_set_addr_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  addr_size_ = value;
}
inline void FftsPlusTaskDef::set_addr_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_addr_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusTaskDef.addr_size)
}

// .domi.FftsPlusSqeDef ffts_plus_sqe = 3;
inline bool FftsPlusTaskDef::_internal_has_ffts_plus_sqe() const {
  return this != internal_default_instance() && ffts_plus_sqe_ != nullptr;
}
inline bool FftsPlusTaskDef::has_ffts_plus_sqe() const {
  return _internal_has_ffts_plus_sqe();
}
inline void FftsPlusTaskDef::clear_ffts_plus_sqe() {
  if (GetArena() == nullptr && ffts_plus_sqe_ != nullptr) {
    delete ffts_plus_sqe_;
  }
  ffts_plus_sqe_ = nullptr;
}
inline const ::domi::FftsPlusSqeDef& FftsPlusTaskDef::_internal_ffts_plus_sqe() const {
  const ::domi::FftsPlusSqeDef* p = ffts_plus_sqe_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusSqeDef*>(
      &::domi::_FftsPlusSqeDef_default_instance_);
}
inline const ::domi::FftsPlusSqeDef& FftsPlusTaskDef::ffts_plus_sqe() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusTaskDef.ffts_plus_sqe)
  return _internal_ffts_plus_sqe();
}
inline void FftsPlusTaskDef::unsafe_arena_set_allocated_ffts_plus_sqe(
    ::domi::FftsPlusSqeDef* ffts_plus_sqe) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ffts_plus_sqe_);
  }
  ffts_plus_sqe_ = ffts_plus_sqe;
  if (ffts_plus_sqe) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusTaskDef.ffts_plus_sqe)
}
inline ::domi::FftsPlusSqeDef* FftsPlusTaskDef::release_ffts_plus_sqe() {
  
  ::domi::FftsPlusSqeDef* temp = ffts_plus_sqe_;
  ffts_plus_sqe_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusSqeDef* FftsPlusTaskDef::unsafe_arena_release_ffts_plus_sqe() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusTaskDef.ffts_plus_sqe)
  
  ::domi::FftsPlusSqeDef* temp = ffts_plus_sqe_;
  ffts_plus_sqe_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusSqeDef* FftsPlusTaskDef::_internal_mutable_ffts_plus_sqe() {
  
  if (ffts_plus_sqe_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusSqeDef>(GetArena());
    ffts_plus_sqe_ = p;
  }
  return ffts_plus_sqe_;
}
inline ::domi::FftsPlusSqeDef* FftsPlusTaskDef::mutable_ffts_plus_sqe() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusTaskDef.ffts_plus_sqe)
  return _internal_mutable_ffts_plus_sqe();
}
inline void FftsPlusTaskDef::set_allocated_ffts_plus_sqe(::domi::FftsPlusSqeDef* ffts_plus_sqe) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete ffts_plus_sqe_;
  }
  if (ffts_plus_sqe) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ffts_plus_sqe);
    if (message_arena != submessage_arena) {
      ffts_plus_sqe = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ffts_plus_sqe, submessage_arena);
    }
    
  } else {
    
  }
  ffts_plus_sqe_ = ffts_plus_sqe;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusTaskDef.ffts_plus_sqe)
}

// repeated .domi.FftsPlusCtxDef ffts_plus_ctx = 4;
inline int FftsPlusTaskDef::_internal_ffts_plus_ctx_size() const {
  return ffts_plus_ctx_.size();
}
inline int FftsPlusTaskDef::ffts_plus_ctx_size() const {
  return _internal_ffts_plus_ctx_size();
}
inline void FftsPlusTaskDef::clear_ffts_plus_ctx() {
  ffts_plus_ctx_.Clear();
}
inline ::domi::FftsPlusCtxDef* FftsPlusTaskDef::mutable_ffts_plus_ctx(int index) {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusTaskDef.ffts_plus_ctx)
  return ffts_plus_ctx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsPlusCtxDef >*
FftsPlusTaskDef::mutable_ffts_plus_ctx() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusTaskDef.ffts_plus_ctx)
  return &ffts_plus_ctx_;
}
inline const ::domi::FftsPlusCtxDef& FftsPlusTaskDef::_internal_ffts_plus_ctx(int index) const {
  return ffts_plus_ctx_.Get(index);
}
inline const ::domi::FftsPlusCtxDef& FftsPlusTaskDef::ffts_plus_ctx(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusTaskDef.ffts_plus_ctx)
  return _internal_ffts_plus_ctx(index);
}
inline ::domi::FftsPlusCtxDef* FftsPlusTaskDef::_internal_add_ffts_plus_ctx() {
  return ffts_plus_ctx_.Add();
}
inline ::domi::FftsPlusCtxDef* FftsPlusTaskDef::add_ffts_plus_ctx() {
  // @@protoc_insertion_point(field_add:domi.FftsPlusTaskDef.ffts_plus_ctx)
  return _internal_add_ffts_plus_ctx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::FftsPlusCtxDef >&
FftsPlusTaskDef::ffts_plus_ctx() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusTaskDef.ffts_plus_ctx)
  return ffts_plus_ctx_;
}

// repeated .domi.AdditionalDataDef additional_data = 5;
inline int FftsPlusTaskDef::_internal_additional_data_size() const {
  return additional_data_.size();
}
inline int FftsPlusTaskDef::additional_data_size() const {
  return _internal_additional_data_size();
}
inline void FftsPlusTaskDef::clear_additional_data() {
  additional_data_.Clear();
}
inline ::domi::AdditionalDataDef* FftsPlusTaskDef::mutable_additional_data(int index) {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusTaskDef.additional_data)
  return additional_data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AdditionalDataDef >*
FftsPlusTaskDef::mutable_additional_data() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusTaskDef.additional_data)
  return &additional_data_;
}
inline const ::domi::AdditionalDataDef& FftsPlusTaskDef::_internal_additional_data(int index) const {
  return additional_data_.Get(index);
}
inline const ::domi::AdditionalDataDef& FftsPlusTaskDef::additional_data(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusTaskDef.additional_data)
  return _internal_additional_data(index);
}
inline ::domi::AdditionalDataDef* FftsPlusTaskDef::_internal_add_additional_data() {
  return additional_data_.Add();
}
inline ::domi::AdditionalDataDef* FftsPlusTaskDef::add_additional_data() {
  // @@protoc_insertion_point(field_add:domi.FftsPlusTaskDef.additional_data)
  return _internal_add_additional_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::AdditionalDataDef >&
FftsPlusTaskDef::additional_data() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusTaskDef.additional_data)
  return additional_data_;
}

// -------------------------------------------------------------------

// AdditionalDataDef

// uint32 data_type = 1;
inline void AdditionalDataDef::clear_data_type() {
  data_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AdditionalDataDef::_internal_data_type() const {
  return data_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AdditionalDataDef::data_type() const {
  // @@protoc_insertion_point(field_get:domi.AdditionalDataDef.data_type)
  return _internal_data_type();
}
inline void AdditionalDataDef::_internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_type_ = value;
}
inline void AdditionalDataDef::set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_type(value);
  // @@protoc_insertion_point(field_set:domi.AdditionalDataDef.data_type)
}

// repeated uint32 context_id = 2;
inline int AdditionalDataDef::_internal_context_id_size() const {
  return context_id_.size();
}
inline int AdditionalDataDef::context_id_size() const {
  return _internal_context_id_size();
}
inline void AdditionalDataDef::clear_context_id() {
  context_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AdditionalDataDef::_internal_context_id(int index) const {
  return context_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AdditionalDataDef::context_id(int index) const {
  // @@protoc_insertion_point(field_get:domi.AdditionalDataDef.context_id)
  return _internal_context_id(index);
}
inline void AdditionalDataDef::set_context_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  context_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.AdditionalDataDef.context_id)
}
inline void AdditionalDataDef::_internal_add_context_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  context_id_.Add(value);
}
inline void AdditionalDataDef::add_context_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_context_id(value);
  // @@protoc_insertion_point(field_add:domi.AdditionalDataDef.context_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
AdditionalDataDef::_internal_context_id() const {
  return context_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
AdditionalDataDef::context_id() const {
  // @@protoc_insertion_point(field_list:domi.AdditionalDataDef.context_id)
  return _internal_context_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
AdditionalDataDef::_internal_mutable_context_id() {
  return &context_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
AdditionalDataDef::mutable_context_id() {
  // @@protoc_insertion_point(field_mutable_list:domi.AdditionalDataDef.context_id)
  return _internal_mutable_context_id();
}

// -------------------------------------------------------------------

// FftsPlusSqeDef

// .domi.StarsSqeHeaderDef sqe_header = 1;
inline bool FftsPlusSqeDef::_internal_has_sqe_header() const {
  return this != internal_default_instance() && sqe_header_ != nullptr;
}
inline bool FftsPlusSqeDef::has_sqe_header() const {
  return _internal_has_sqe_header();
}
inline void FftsPlusSqeDef::clear_sqe_header() {
  if (GetArena() == nullptr && sqe_header_ != nullptr) {
    delete sqe_header_;
  }
  sqe_header_ = nullptr;
}
inline const ::domi::StarsSqeHeaderDef& FftsPlusSqeDef::_internal_sqe_header() const {
  const ::domi::StarsSqeHeaderDef* p = sqe_header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::StarsSqeHeaderDef*>(
      &::domi::_StarsSqeHeaderDef_default_instance_);
}
inline const ::domi::StarsSqeHeaderDef& FftsPlusSqeDef::sqe_header() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.sqe_header)
  return _internal_sqe_header();
}
inline void FftsPlusSqeDef::unsafe_arena_set_allocated_sqe_header(
    ::domi::StarsSqeHeaderDef* sqe_header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sqe_header_);
  }
  sqe_header_ = sqe_header;
  if (sqe_header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusSqeDef.sqe_header)
}
inline ::domi::StarsSqeHeaderDef* FftsPlusSqeDef::release_sqe_header() {
  
  ::domi::StarsSqeHeaderDef* temp = sqe_header_;
  sqe_header_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::StarsSqeHeaderDef* FftsPlusSqeDef::unsafe_arena_release_sqe_header() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusSqeDef.sqe_header)
  
  ::domi::StarsSqeHeaderDef* temp = sqe_header_;
  sqe_header_ = nullptr;
  return temp;
}
inline ::domi::StarsSqeHeaderDef* FftsPlusSqeDef::_internal_mutable_sqe_header() {
  
  if (sqe_header_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::StarsSqeHeaderDef>(GetArena());
    sqe_header_ = p;
  }
  return sqe_header_;
}
inline ::domi::StarsSqeHeaderDef* FftsPlusSqeDef::mutable_sqe_header() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusSqeDef.sqe_header)
  return _internal_mutable_sqe_header();
}
inline void FftsPlusSqeDef::set_allocated_sqe_header(::domi::StarsSqeHeaderDef* sqe_header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sqe_header_;
  }
  if (sqe_header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sqe_header);
    if (message_arena != submessage_arena) {
      sqe_header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sqe_header, submessage_arena);
    }
    
  } else {
    
  }
  sqe_header_ = sqe_header;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusSqeDef.sqe_header)
}

// uint32 wrr_ratio = 2;
inline void FftsPlusSqeDef::clear_wrr_ratio() {
  wrr_ratio_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_wrr_ratio() const {
  return wrr_ratio_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::wrr_ratio() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.wrr_ratio)
  return _internal_wrr_ratio();
}
inline void FftsPlusSqeDef::_internal_set_wrr_ratio(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wrr_ratio_ = value;
}
inline void FftsPlusSqeDef::set_wrr_ratio(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_wrr_ratio(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.wrr_ratio)
}

// uint32 sqe_index = 3;
inline void FftsPlusSqeDef::clear_sqe_index() {
  sqe_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_sqe_index() const {
  return sqe_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::sqe_index() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.sqe_index)
  return _internal_sqe_index();
}
inline void FftsPlusSqeDef::_internal_set_sqe_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sqe_index_ = value;
}
inline void FftsPlusSqeDef::set_sqe_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sqe_index(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.sqe_index)
}

// uint32 total_context_num = 4;
inline void FftsPlusSqeDef::clear_total_context_num() {
  total_context_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_total_context_num() const {
  return total_context_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::total_context_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.total_context_num)
  return _internal_total_context_num();
}
inline void FftsPlusSqeDef::_internal_set_total_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  total_context_num_ = value;
}
inline void FftsPlusSqeDef::set_total_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_context_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.total_context_num)
}

// uint32 ready_context_num = 5;
inline void FftsPlusSqeDef::clear_ready_context_num() {
  ready_context_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_ready_context_num() const {
  return ready_context_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::ready_context_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.ready_context_num)
  return _internal_ready_context_num();
}
inline void FftsPlusSqeDef::_internal_set_ready_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ready_context_num_ = value;
}
inline void FftsPlusSqeDef::set_ready_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ready_context_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.ready_context_num)
}

// uint32 preload_context_num = 6;
inline void FftsPlusSqeDef::clear_preload_context_num() {
  preload_context_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_preload_context_num() const {
  return preload_context_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::preload_context_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.preload_context_num)
  return _internal_preload_context_num();
}
inline void FftsPlusSqeDef::_internal_set_preload_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  preload_context_num_ = value;
}
inline void FftsPlusSqeDef::set_preload_context_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preload_context_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.preload_context_num)
}

// uint32 prefetch_ost_num = 7;
inline void FftsPlusSqeDef::clear_prefetch_ost_num() {
  prefetch_ost_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_prefetch_ost_num() const {
  return prefetch_ost_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::prefetch_ost_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.prefetch_ost_num)
  return _internal_prefetch_ost_num();
}
inline void FftsPlusSqeDef::_internal_set_prefetch_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_ost_num_ = value;
}
inline void FftsPlusSqeDef::set_prefetch_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_ost_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.prefetch_ost_num)
}

// uint32 cmaint_ost_num = 8;
inline void FftsPlusSqeDef::clear_cmaint_ost_num() {
  cmaint_ost_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_cmaint_ost_num() const {
  return cmaint_ost_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::cmaint_ost_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.cmaint_ost_num)
  return _internal_cmaint_ost_num();
}
inline void FftsPlusSqeDef::_internal_set_cmaint_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cmaint_ost_num_ = value;
}
inline void FftsPlusSqeDef::set_cmaint_ost_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmaint_ost_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.cmaint_ost_num)
}

// uint32 aic_prefetch_lower = 9;
inline void FftsPlusSqeDef::clear_aic_prefetch_lower() {
  aic_prefetch_lower_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_aic_prefetch_lower() const {
  return aic_prefetch_lower_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::aic_prefetch_lower() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.aic_prefetch_lower)
  return _internal_aic_prefetch_lower();
}
inline void FftsPlusSqeDef::_internal_set_aic_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aic_prefetch_lower_ = value;
}
inline void FftsPlusSqeDef::set_aic_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aic_prefetch_lower(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.aic_prefetch_lower)
}

// uint32 aic_prefetch_upper = 10;
inline void FftsPlusSqeDef::clear_aic_prefetch_upper() {
  aic_prefetch_upper_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_aic_prefetch_upper() const {
  return aic_prefetch_upper_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::aic_prefetch_upper() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.aic_prefetch_upper)
  return _internal_aic_prefetch_upper();
}
inline void FftsPlusSqeDef::_internal_set_aic_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aic_prefetch_upper_ = value;
}
inline void FftsPlusSqeDef::set_aic_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aic_prefetch_upper(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.aic_prefetch_upper)
}

// uint32 aiv_prefetch_lower = 11;
inline void FftsPlusSqeDef::clear_aiv_prefetch_lower() {
  aiv_prefetch_lower_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_aiv_prefetch_lower() const {
  return aiv_prefetch_lower_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::aiv_prefetch_lower() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.aiv_prefetch_lower)
  return _internal_aiv_prefetch_lower();
}
inline void FftsPlusSqeDef::_internal_set_aiv_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aiv_prefetch_lower_ = value;
}
inline void FftsPlusSqeDef::set_aiv_prefetch_lower(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aiv_prefetch_lower(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.aiv_prefetch_lower)
}

// uint32 aiv_prefetch_upper = 12;
inline void FftsPlusSqeDef::clear_aiv_prefetch_upper() {
  aiv_prefetch_upper_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_aiv_prefetch_upper() const {
  return aiv_prefetch_upper_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::aiv_prefetch_upper() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.aiv_prefetch_upper)
  return _internal_aiv_prefetch_upper();
}
inline void FftsPlusSqeDef::_internal_set_aiv_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aiv_prefetch_upper_ = value;
}
inline void FftsPlusSqeDef::set_aiv_prefetch_upper(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aiv_prefetch_upper(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.aiv_prefetch_upper)
}

// uint32 data_split_unit = 13;
inline void FftsPlusSqeDef::clear_data_split_unit() {
  data_split_unit_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::_internal_data_split_unit() const {
  return data_split_unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSqeDef::data_split_unit() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSqeDef.data_split_unit)
  return _internal_data_split_unit();
}
inline void FftsPlusSqeDef::_internal_set_data_split_unit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_split_unit_ = value;
}
inline void FftsPlusSqeDef::set_data_split_unit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_split_unit(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSqeDef.data_split_unit)
}

// -------------------------------------------------------------------

// StarsSqeHeaderDef

// uint32 l1_lock = 1;
inline void StarsSqeHeaderDef::clear_l1_lock() {
  l1_lock_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StarsSqeHeaderDef::_internal_l1_lock() const {
  return l1_lock_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StarsSqeHeaderDef::l1_lock() const {
  // @@protoc_insertion_point(field_get:domi.StarsSqeHeaderDef.l1_lock)
  return _internal_l1_lock();
}
inline void StarsSqeHeaderDef::_internal_set_l1_lock(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  l1_lock_ = value;
}
inline void StarsSqeHeaderDef::set_l1_lock(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_l1_lock(value);
  // @@protoc_insertion_point(field_set:domi.StarsSqeHeaderDef.l1_lock)
}

// uint32 l1_unlock = 2;
inline void StarsSqeHeaderDef::clear_l1_unlock() {
  l1_unlock_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StarsSqeHeaderDef::_internal_l1_unlock() const {
  return l1_unlock_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StarsSqeHeaderDef::l1_unlock() const {
  // @@protoc_insertion_point(field_get:domi.StarsSqeHeaderDef.l1_unlock)
  return _internal_l1_unlock();
}
inline void StarsSqeHeaderDef::_internal_set_l1_unlock(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  l1_unlock_ = value;
}
inline void StarsSqeHeaderDef::set_l1_unlock(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_l1_unlock(value);
  // @@protoc_insertion_point(field_set:domi.StarsSqeHeaderDef.l1_unlock)
}

// uint32 block_dim = 3;
inline void StarsSqeHeaderDef::clear_block_dim() {
  block_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StarsSqeHeaderDef::_internal_block_dim() const {
  return block_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StarsSqeHeaderDef::block_dim() const {
  // @@protoc_insertion_point(field_get:domi.StarsSqeHeaderDef.block_dim)
  return _internal_block_dim();
}
inline void StarsSqeHeaderDef::_internal_set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  block_dim_ = value;
}
inline void StarsSqeHeaderDef::set_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block_dim(value);
  // @@protoc_insertion_point(field_set:domi.StarsSqeHeaderDef.block_dim)
}

// -------------------------------------------------------------------

// FftsPlusCtxDef

// uint32 op_index = 1;
inline void FftsPlusCtxDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCtxDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCtxDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.op_index)
  return _internal_op_index();
}
inline void FftsPlusCtxDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void FftsPlusCtxDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCtxDef.op_index)
}

// string uniq_ctx_name = 2;
inline void FftsPlusCtxDef::clear_uniq_ctx_name() {
  uniq_ctx_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& FftsPlusCtxDef::uniq_ctx_name() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.uniq_ctx_name)
  return _internal_uniq_ctx_name();
}
inline void FftsPlusCtxDef::set_uniq_ctx_name(const std::string& value) {
  _internal_set_uniq_ctx_name(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCtxDef.uniq_ctx_name)
}
inline std::string* FftsPlusCtxDef::mutable_uniq_ctx_name() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.uniq_ctx_name)
  return _internal_mutable_uniq_ctx_name();
}
inline const std::string& FftsPlusCtxDef::_internal_uniq_ctx_name() const {
  return uniq_ctx_name_.Get();
}
inline void FftsPlusCtxDef::_internal_set_uniq_ctx_name(const std::string& value) {
  
  uniq_ctx_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void FftsPlusCtxDef::set_uniq_ctx_name(std::string&& value) {
  
  uniq_ctx_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.FftsPlusCtxDef.uniq_ctx_name)
}
inline void FftsPlusCtxDef::set_uniq_ctx_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  uniq_ctx_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.FftsPlusCtxDef.uniq_ctx_name)
}
inline void FftsPlusCtxDef::set_uniq_ctx_name(const char* value,
    size_t size) {
  
  uniq_ctx_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.FftsPlusCtxDef.uniq_ctx_name)
}
inline std::string* FftsPlusCtxDef::_internal_mutable_uniq_ctx_name() {
  
  return uniq_ctx_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* FftsPlusCtxDef::release_uniq_ctx_name() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.uniq_ctx_name)
  return uniq_ctx_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void FftsPlusCtxDef::set_allocated_uniq_ctx_name(std::string* uniq_ctx_name) {
  if (uniq_ctx_name != nullptr) {
    
  } else {
    
  }
  uniq_ctx_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), uniq_ctx_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.uniq_ctx_name)
}

// uint32 context_type = 3;
inline void FftsPlusCtxDef::clear_context_type() {
  context_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCtxDef::_internal_context_type() const {
  return context_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCtxDef::context_type() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.context_type)
  return _internal_context_type();
}
inline void FftsPlusCtxDef::_internal_set_context_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  context_type_ = value;
}
inline void FftsPlusCtxDef::set_context_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_context_type(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCtxDef.context_type)
}

// uint32 context_id = 4;
inline void FftsPlusCtxDef::clear_context_id() {
  context_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCtxDef::_internal_context_id() const {
  return context_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCtxDef::context_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.context_id)
  return _internal_context_id();
}
inline void FftsPlusCtxDef::_internal_set_context_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  context_id_ = value;
}
inline void FftsPlusCtxDef::set_context_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCtxDef.context_id)
}

// .domi.FftsPlusCtxDef.OpType op_type = 5;
inline void FftsPlusCtxDef::clear_op_type() {
  op_type_ = 0;
}
inline ::domi::FftsPlusCtxDef_OpType FftsPlusCtxDef::_internal_op_type() const {
  return static_cast< ::domi::FftsPlusCtxDef_OpType >(op_type_);
}
inline ::domi::FftsPlusCtxDef_OpType FftsPlusCtxDef::op_type() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.op_type)
  return _internal_op_type();
}
inline void FftsPlusCtxDef::_internal_set_op_type(::domi::FftsPlusCtxDef_OpType value) {
  
  op_type_ = value;
}
inline void FftsPlusCtxDef::set_op_type(::domi::FftsPlusCtxDef_OpType value) {
  _internal_set_op_type(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCtxDef.op_type)
}

// .domi.FftsPlusAicAivCtxDef aic_aiv_ctx = 6;
inline bool FftsPlusCtxDef::_internal_has_aic_aiv_ctx() const {
  return this != internal_default_instance() && aic_aiv_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_aic_aiv_ctx() const {
  return _internal_has_aic_aiv_ctx();
}
inline void FftsPlusCtxDef::clear_aic_aiv_ctx() {
  if (GetArena() == nullptr && aic_aiv_ctx_ != nullptr) {
    delete aic_aiv_ctx_;
  }
  aic_aiv_ctx_ = nullptr;
}
inline const ::domi::FftsPlusAicAivCtxDef& FftsPlusCtxDef::_internal_aic_aiv_ctx() const {
  const ::domi::FftsPlusAicAivCtxDef* p = aic_aiv_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusAicAivCtxDef*>(
      &::domi::_FftsPlusAicAivCtxDef_default_instance_);
}
inline const ::domi::FftsPlusAicAivCtxDef& FftsPlusCtxDef::aic_aiv_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.aic_aiv_ctx)
  return _internal_aic_aiv_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_aic_aiv_ctx(
    ::domi::FftsPlusAicAivCtxDef* aic_aiv_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(aic_aiv_ctx_);
  }
  aic_aiv_ctx_ = aic_aiv_ctx;
  if (aic_aiv_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.aic_aiv_ctx)
}
inline ::domi::FftsPlusAicAivCtxDef* FftsPlusCtxDef::release_aic_aiv_ctx() {
  
  ::domi::FftsPlusAicAivCtxDef* temp = aic_aiv_ctx_;
  aic_aiv_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusAicAivCtxDef* FftsPlusCtxDef::unsafe_arena_release_aic_aiv_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.aic_aiv_ctx)
  
  ::domi::FftsPlusAicAivCtxDef* temp = aic_aiv_ctx_;
  aic_aiv_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusAicAivCtxDef* FftsPlusCtxDef::_internal_mutable_aic_aiv_ctx() {
  
  if (aic_aiv_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusAicAivCtxDef>(GetArena());
    aic_aiv_ctx_ = p;
  }
  return aic_aiv_ctx_;
}
inline ::domi::FftsPlusAicAivCtxDef* FftsPlusCtxDef::mutable_aic_aiv_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.aic_aiv_ctx)
  return _internal_mutable_aic_aiv_ctx();
}
inline void FftsPlusCtxDef::set_allocated_aic_aiv_ctx(::domi::FftsPlusAicAivCtxDef* aic_aiv_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete aic_aiv_ctx_;
  }
  if (aic_aiv_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(aic_aiv_ctx);
    if (message_arena != submessage_arena) {
      aic_aiv_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aic_aiv_ctx, submessage_arena);
    }
    
  } else {
    
  }
  aic_aiv_ctx_ = aic_aiv_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.aic_aiv_ctx)
}

// .domi.FftsPlusMixAicAivCtxDef mix_aic_aiv_ctx = 7;
inline bool FftsPlusCtxDef::_internal_has_mix_aic_aiv_ctx() const {
  return this != internal_default_instance() && mix_aic_aiv_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_mix_aic_aiv_ctx() const {
  return _internal_has_mix_aic_aiv_ctx();
}
inline void FftsPlusCtxDef::clear_mix_aic_aiv_ctx() {
  if (GetArena() == nullptr && mix_aic_aiv_ctx_ != nullptr) {
    delete mix_aic_aiv_ctx_;
  }
  mix_aic_aiv_ctx_ = nullptr;
}
inline const ::domi::FftsPlusMixAicAivCtxDef& FftsPlusCtxDef::_internal_mix_aic_aiv_ctx() const {
  const ::domi::FftsPlusMixAicAivCtxDef* p = mix_aic_aiv_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusMixAicAivCtxDef*>(
      &::domi::_FftsPlusMixAicAivCtxDef_default_instance_);
}
inline const ::domi::FftsPlusMixAicAivCtxDef& FftsPlusCtxDef::mix_aic_aiv_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.mix_aic_aiv_ctx)
  return _internal_mix_aic_aiv_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_mix_aic_aiv_ctx(
    ::domi::FftsPlusMixAicAivCtxDef* mix_aic_aiv_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mix_aic_aiv_ctx_);
  }
  mix_aic_aiv_ctx_ = mix_aic_aiv_ctx;
  if (mix_aic_aiv_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.mix_aic_aiv_ctx)
}
inline ::domi::FftsPlusMixAicAivCtxDef* FftsPlusCtxDef::release_mix_aic_aiv_ctx() {
  
  ::domi::FftsPlusMixAicAivCtxDef* temp = mix_aic_aiv_ctx_;
  mix_aic_aiv_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusMixAicAivCtxDef* FftsPlusCtxDef::unsafe_arena_release_mix_aic_aiv_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.mix_aic_aiv_ctx)
  
  ::domi::FftsPlusMixAicAivCtxDef* temp = mix_aic_aiv_ctx_;
  mix_aic_aiv_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusMixAicAivCtxDef* FftsPlusCtxDef::_internal_mutable_mix_aic_aiv_ctx() {
  
  if (mix_aic_aiv_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusMixAicAivCtxDef>(GetArena());
    mix_aic_aiv_ctx_ = p;
  }
  return mix_aic_aiv_ctx_;
}
inline ::domi::FftsPlusMixAicAivCtxDef* FftsPlusCtxDef::mutable_mix_aic_aiv_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.mix_aic_aiv_ctx)
  return _internal_mutable_mix_aic_aiv_ctx();
}
inline void FftsPlusCtxDef::set_allocated_mix_aic_aiv_ctx(::domi::FftsPlusMixAicAivCtxDef* mix_aic_aiv_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete mix_aic_aiv_ctx_;
  }
  if (mix_aic_aiv_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(mix_aic_aiv_ctx);
    if (message_arena != submessage_arena) {
      mix_aic_aiv_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mix_aic_aiv_ctx, submessage_arena);
    }
    
  } else {
    
  }
  mix_aic_aiv_ctx_ = mix_aic_aiv_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.mix_aic_aiv_ctx)
}

// .domi.FftsPlusSdmaCtxDef sdma_ctx = 8;
inline bool FftsPlusCtxDef::_internal_has_sdma_ctx() const {
  return this != internal_default_instance() && sdma_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_sdma_ctx() const {
  return _internal_has_sdma_ctx();
}
inline void FftsPlusCtxDef::clear_sdma_ctx() {
  if (GetArena() == nullptr && sdma_ctx_ != nullptr) {
    delete sdma_ctx_;
  }
  sdma_ctx_ = nullptr;
}
inline const ::domi::FftsPlusSdmaCtxDef& FftsPlusCtxDef::_internal_sdma_ctx() const {
  const ::domi::FftsPlusSdmaCtxDef* p = sdma_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusSdmaCtxDef*>(
      &::domi::_FftsPlusSdmaCtxDef_default_instance_);
}
inline const ::domi::FftsPlusSdmaCtxDef& FftsPlusCtxDef::sdma_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.sdma_ctx)
  return _internal_sdma_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_sdma_ctx(
    ::domi::FftsPlusSdmaCtxDef* sdma_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sdma_ctx_);
  }
  sdma_ctx_ = sdma_ctx;
  if (sdma_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.sdma_ctx)
}
inline ::domi::FftsPlusSdmaCtxDef* FftsPlusCtxDef::release_sdma_ctx() {
  
  ::domi::FftsPlusSdmaCtxDef* temp = sdma_ctx_;
  sdma_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusSdmaCtxDef* FftsPlusCtxDef::unsafe_arena_release_sdma_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.sdma_ctx)
  
  ::domi::FftsPlusSdmaCtxDef* temp = sdma_ctx_;
  sdma_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusSdmaCtxDef* FftsPlusCtxDef::_internal_mutable_sdma_ctx() {
  
  if (sdma_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusSdmaCtxDef>(GetArena());
    sdma_ctx_ = p;
  }
  return sdma_ctx_;
}
inline ::domi::FftsPlusSdmaCtxDef* FftsPlusCtxDef::mutable_sdma_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.sdma_ctx)
  return _internal_mutable_sdma_ctx();
}
inline void FftsPlusCtxDef::set_allocated_sdma_ctx(::domi::FftsPlusSdmaCtxDef* sdma_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sdma_ctx_;
  }
  if (sdma_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sdma_ctx);
    if (message_arena != submessage_arena) {
      sdma_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sdma_ctx, submessage_arena);
    }
    
  } else {
    
  }
  sdma_ctx_ = sdma_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.sdma_ctx)
}

// .domi.FftsPlusNotifyCtxDef notify_ctx = 9;
inline bool FftsPlusCtxDef::_internal_has_notify_ctx() const {
  return this != internal_default_instance() && notify_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_notify_ctx() const {
  return _internal_has_notify_ctx();
}
inline void FftsPlusCtxDef::clear_notify_ctx() {
  if (GetArena() == nullptr && notify_ctx_ != nullptr) {
    delete notify_ctx_;
  }
  notify_ctx_ = nullptr;
}
inline const ::domi::FftsPlusNotifyCtxDef& FftsPlusCtxDef::_internal_notify_ctx() const {
  const ::domi::FftsPlusNotifyCtxDef* p = notify_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusNotifyCtxDef*>(
      &::domi::_FftsPlusNotifyCtxDef_default_instance_);
}
inline const ::domi::FftsPlusNotifyCtxDef& FftsPlusCtxDef::notify_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.notify_ctx)
  return _internal_notify_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_notify_ctx(
    ::domi::FftsPlusNotifyCtxDef* notify_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notify_ctx_);
  }
  notify_ctx_ = notify_ctx;
  if (notify_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.notify_ctx)
}
inline ::domi::FftsPlusNotifyCtxDef* FftsPlusCtxDef::release_notify_ctx() {
  
  ::domi::FftsPlusNotifyCtxDef* temp = notify_ctx_;
  notify_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusNotifyCtxDef* FftsPlusCtxDef::unsafe_arena_release_notify_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.notify_ctx)
  
  ::domi::FftsPlusNotifyCtxDef* temp = notify_ctx_;
  notify_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusNotifyCtxDef* FftsPlusCtxDef::_internal_mutable_notify_ctx() {
  
  if (notify_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusNotifyCtxDef>(GetArena());
    notify_ctx_ = p;
  }
  return notify_ctx_;
}
inline ::domi::FftsPlusNotifyCtxDef* FftsPlusCtxDef::mutable_notify_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.notify_ctx)
  return _internal_mutable_notify_ctx();
}
inline void FftsPlusCtxDef::set_allocated_notify_ctx(::domi::FftsPlusNotifyCtxDef* notify_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete notify_ctx_;
  }
  if (notify_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(notify_ctx);
    if (message_arena != submessage_arena) {
      notify_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notify_ctx, submessage_arena);
    }
    
  } else {
    
  }
  notify_ctx_ = notify_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.notify_ctx)
}

// .domi.FftsPlusWriteValueCtxDef write_value_ctx = 10;
inline bool FftsPlusCtxDef::_internal_has_write_value_ctx() const {
  return this != internal_default_instance() && write_value_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_write_value_ctx() const {
  return _internal_has_write_value_ctx();
}
inline void FftsPlusCtxDef::clear_write_value_ctx() {
  if (GetArena() == nullptr && write_value_ctx_ != nullptr) {
    delete write_value_ctx_;
  }
  write_value_ctx_ = nullptr;
}
inline const ::domi::FftsPlusWriteValueCtxDef& FftsPlusCtxDef::_internal_write_value_ctx() const {
  const ::domi::FftsPlusWriteValueCtxDef* p = write_value_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusWriteValueCtxDef*>(
      &::domi::_FftsPlusWriteValueCtxDef_default_instance_);
}
inline const ::domi::FftsPlusWriteValueCtxDef& FftsPlusCtxDef::write_value_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.write_value_ctx)
  return _internal_write_value_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_write_value_ctx(
    ::domi::FftsPlusWriteValueCtxDef* write_value_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(write_value_ctx_);
  }
  write_value_ctx_ = write_value_ctx;
  if (write_value_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.write_value_ctx)
}
inline ::domi::FftsPlusWriteValueCtxDef* FftsPlusCtxDef::release_write_value_ctx() {
  
  ::domi::FftsPlusWriteValueCtxDef* temp = write_value_ctx_;
  write_value_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusWriteValueCtxDef* FftsPlusCtxDef::unsafe_arena_release_write_value_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.write_value_ctx)
  
  ::domi::FftsPlusWriteValueCtxDef* temp = write_value_ctx_;
  write_value_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusWriteValueCtxDef* FftsPlusCtxDef::_internal_mutable_write_value_ctx() {
  
  if (write_value_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusWriteValueCtxDef>(GetArena());
    write_value_ctx_ = p;
  }
  return write_value_ctx_;
}
inline ::domi::FftsPlusWriteValueCtxDef* FftsPlusCtxDef::mutable_write_value_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.write_value_ctx)
  return _internal_mutable_write_value_ctx();
}
inline void FftsPlusCtxDef::set_allocated_write_value_ctx(::domi::FftsPlusWriteValueCtxDef* write_value_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete write_value_ctx_;
  }
  if (write_value_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(write_value_ctx);
    if (message_arena != submessage_arena) {
      write_value_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, write_value_ctx, submessage_arena);
    }
    
  } else {
    
  }
  write_value_ctx_ = write_value_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.write_value_ctx)
}

// .domi.FftsPlusAicpuCtxDef aicpu_ctx = 11;
inline bool FftsPlusCtxDef::_internal_has_aicpu_ctx() const {
  return this != internal_default_instance() && aicpu_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_aicpu_ctx() const {
  return _internal_has_aicpu_ctx();
}
inline void FftsPlusCtxDef::clear_aicpu_ctx() {
  if (GetArena() == nullptr && aicpu_ctx_ != nullptr) {
    delete aicpu_ctx_;
  }
  aicpu_ctx_ = nullptr;
}
inline const ::domi::FftsPlusAicpuCtxDef& FftsPlusCtxDef::_internal_aicpu_ctx() const {
  const ::domi::FftsPlusAicpuCtxDef* p = aicpu_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusAicpuCtxDef*>(
      &::domi::_FftsPlusAicpuCtxDef_default_instance_);
}
inline const ::domi::FftsPlusAicpuCtxDef& FftsPlusCtxDef::aicpu_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.aicpu_ctx)
  return _internal_aicpu_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_aicpu_ctx(
    ::domi::FftsPlusAicpuCtxDef* aicpu_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(aicpu_ctx_);
  }
  aicpu_ctx_ = aicpu_ctx;
  if (aicpu_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.aicpu_ctx)
}
inline ::domi::FftsPlusAicpuCtxDef* FftsPlusCtxDef::release_aicpu_ctx() {
  
  ::domi::FftsPlusAicpuCtxDef* temp = aicpu_ctx_;
  aicpu_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusAicpuCtxDef* FftsPlusCtxDef::unsafe_arena_release_aicpu_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.aicpu_ctx)
  
  ::domi::FftsPlusAicpuCtxDef* temp = aicpu_ctx_;
  aicpu_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusAicpuCtxDef* FftsPlusCtxDef::_internal_mutable_aicpu_ctx() {
  
  if (aicpu_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusAicpuCtxDef>(GetArena());
    aicpu_ctx_ = p;
  }
  return aicpu_ctx_;
}
inline ::domi::FftsPlusAicpuCtxDef* FftsPlusCtxDef::mutable_aicpu_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.aicpu_ctx)
  return _internal_mutable_aicpu_ctx();
}
inline void FftsPlusCtxDef::set_allocated_aicpu_ctx(::domi::FftsPlusAicpuCtxDef* aicpu_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete aicpu_ctx_;
  }
  if (aicpu_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(aicpu_ctx);
    if (message_arena != submessage_arena) {
      aicpu_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aicpu_ctx, submessage_arena);
    }
    
  } else {
    
  }
  aicpu_ctx_ = aicpu_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.aicpu_ctx)
}

// .domi.FftsPlusDataCtxDef data_ctx = 12;
inline bool FftsPlusCtxDef::_internal_has_data_ctx() const {
  return this != internal_default_instance() && data_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_data_ctx() const {
  return _internal_has_data_ctx();
}
inline void FftsPlusCtxDef::clear_data_ctx() {
  if (GetArena() == nullptr && data_ctx_ != nullptr) {
    delete data_ctx_;
  }
  data_ctx_ = nullptr;
}
inline const ::domi::FftsPlusDataCtxDef& FftsPlusCtxDef::_internal_data_ctx() const {
  const ::domi::FftsPlusDataCtxDef* p = data_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusDataCtxDef*>(
      &::domi::_FftsPlusDataCtxDef_default_instance_);
}
inline const ::domi::FftsPlusDataCtxDef& FftsPlusCtxDef::data_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.data_ctx)
  return _internal_data_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_data_ctx(
    ::domi::FftsPlusDataCtxDef* data_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_ctx_);
  }
  data_ctx_ = data_ctx;
  if (data_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.data_ctx)
}
inline ::domi::FftsPlusDataCtxDef* FftsPlusCtxDef::release_data_ctx() {
  
  ::domi::FftsPlusDataCtxDef* temp = data_ctx_;
  data_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusDataCtxDef* FftsPlusCtxDef::unsafe_arena_release_data_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.data_ctx)
  
  ::domi::FftsPlusDataCtxDef* temp = data_ctx_;
  data_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusDataCtxDef* FftsPlusCtxDef::_internal_mutable_data_ctx() {
  
  if (data_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusDataCtxDef>(GetArena());
    data_ctx_ = p;
  }
  return data_ctx_;
}
inline ::domi::FftsPlusDataCtxDef* FftsPlusCtxDef::mutable_data_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.data_ctx)
  return _internal_mutable_data_ctx();
}
inline void FftsPlusCtxDef::set_allocated_data_ctx(::domi::FftsPlusDataCtxDef* data_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete data_ctx_;
  }
  if (data_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(data_ctx);
    if (message_arena != submessage_arena) {
      data_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_ctx, submessage_arena);
    }
    
  } else {
    
  }
  data_ctx_ = data_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.data_ctx)
}

// .domi.FftsPlusAtStartCtxDef at_start_ctx = 13;
inline bool FftsPlusCtxDef::_internal_has_at_start_ctx() const {
  return this != internal_default_instance() && at_start_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_at_start_ctx() const {
  return _internal_has_at_start_ctx();
}
inline void FftsPlusCtxDef::clear_at_start_ctx() {
  if (GetArena() == nullptr && at_start_ctx_ != nullptr) {
    delete at_start_ctx_;
  }
  at_start_ctx_ = nullptr;
}
inline const ::domi::FftsPlusAtStartCtxDef& FftsPlusCtxDef::_internal_at_start_ctx() const {
  const ::domi::FftsPlusAtStartCtxDef* p = at_start_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusAtStartCtxDef*>(
      &::domi::_FftsPlusAtStartCtxDef_default_instance_);
}
inline const ::domi::FftsPlusAtStartCtxDef& FftsPlusCtxDef::at_start_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.at_start_ctx)
  return _internal_at_start_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_at_start_ctx(
    ::domi::FftsPlusAtStartCtxDef* at_start_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(at_start_ctx_);
  }
  at_start_ctx_ = at_start_ctx;
  if (at_start_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.at_start_ctx)
}
inline ::domi::FftsPlusAtStartCtxDef* FftsPlusCtxDef::release_at_start_ctx() {
  
  ::domi::FftsPlusAtStartCtxDef* temp = at_start_ctx_;
  at_start_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusAtStartCtxDef* FftsPlusCtxDef::unsafe_arena_release_at_start_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.at_start_ctx)
  
  ::domi::FftsPlusAtStartCtxDef* temp = at_start_ctx_;
  at_start_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusAtStartCtxDef* FftsPlusCtxDef::_internal_mutable_at_start_ctx() {
  
  if (at_start_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusAtStartCtxDef>(GetArena());
    at_start_ctx_ = p;
  }
  return at_start_ctx_;
}
inline ::domi::FftsPlusAtStartCtxDef* FftsPlusCtxDef::mutable_at_start_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.at_start_ctx)
  return _internal_mutable_at_start_ctx();
}
inline void FftsPlusCtxDef::set_allocated_at_start_ctx(::domi::FftsPlusAtStartCtxDef* at_start_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete at_start_ctx_;
  }
  if (at_start_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(at_start_ctx);
    if (message_arena != submessage_arena) {
      at_start_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, at_start_ctx, submessage_arena);
    }
    
  } else {
    
  }
  at_start_ctx_ = at_start_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.at_start_ctx)
}

// .domi.FftsPlusAtEndCtxDef at_end_ctx = 14;
inline bool FftsPlusCtxDef::_internal_has_at_end_ctx() const {
  return this != internal_default_instance() && at_end_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_at_end_ctx() const {
  return _internal_has_at_end_ctx();
}
inline void FftsPlusCtxDef::clear_at_end_ctx() {
  if (GetArena() == nullptr && at_end_ctx_ != nullptr) {
    delete at_end_ctx_;
  }
  at_end_ctx_ = nullptr;
}
inline const ::domi::FftsPlusAtEndCtxDef& FftsPlusCtxDef::_internal_at_end_ctx() const {
  const ::domi::FftsPlusAtEndCtxDef* p = at_end_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusAtEndCtxDef*>(
      &::domi::_FftsPlusAtEndCtxDef_default_instance_);
}
inline const ::domi::FftsPlusAtEndCtxDef& FftsPlusCtxDef::at_end_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.at_end_ctx)
  return _internal_at_end_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_at_end_ctx(
    ::domi::FftsPlusAtEndCtxDef* at_end_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(at_end_ctx_);
  }
  at_end_ctx_ = at_end_ctx;
  if (at_end_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.at_end_ctx)
}
inline ::domi::FftsPlusAtEndCtxDef* FftsPlusCtxDef::release_at_end_ctx() {
  
  ::domi::FftsPlusAtEndCtxDef* temp = at_end_ctx_;
  at_end_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusAtEndCtxDef* FftsPlusCtxDef::unsafe_arena_release_at_end_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.at_end_ctx)
  
  ::domi::FftsPlusAtEndCtxDef* temp = at_end_ctx_;
  at_end_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusAtEndCtxDef* FftsPlusCtxDef::_internal_mutable_at_end_ctx() {
  
  if (at_end_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusAtEndCtxDef>(GetArena());
    at_end_ctx_ = p;
  }
  return at_end_ctx_;
}
inline ::domi::FftsPlusAtEndCtxDef* FftsPlusCtxDef::mutable_at_end_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.at_end_ctx)
  return _internal_mutable_at_end_ctx();
}
inline void FftsPlusCtxDef::set_allocated_at_end_ctx(::domi::FftsPlusAtEndCtxDef* at_end_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete at_end_ctx_;
  }
  if (at_end_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(at_end_ctx);
    if (message_arena != submessage_arena) {
      at_end_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, at_end_ctx, submessage_arena);
    }
    
  } else {
    
  }
  at_end_ctx_ = at_end_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.at_end_ctx)
}

// .domi.FftsPlusLabelCtxDef label_ctx = 15;
inline bool FftsPlusCtxDef::_internal_has_label_ctx() const {
  return this != internal_default_instance() && label_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_label_ctx() const {
  return _internal_has_label_ctx();
}
inline void FftsPlusCtxDef::clear_label_ctx() {
  if (GetArena() == nullptr && label_ctx_ != nullptr) {
    delete label_ctx_;
  }
  label_ctx_ = nullptr;
}
inline const ::domi::FftsPlusLabelCtxDef& FftsPlusCtxDef::_internal_label_ctx() const {
  const ::domi::FftsPlusLabelCtxDef* p = label_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusLabelCtxDef*>(
      &::domi::_FftsPlusLabelCtxDef_default_instance_);
}
inline const ::domi::FftsPlusLabelCtxDef& FftsPlusCtxDef::label_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.label_ctx)
  return _internal_label_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_label_ctx(
    ::domi::FftsPlusLabelCtxDef* label_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(label_ctx_);
  }
  label_ctx_ = label_ctx;
  if (label_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.label_ctx)
}
inline ::domi::FftsPlusLabelCtxDef* FftsPlusCtxDef::release_label_ctx() {
  
  ::domi::FftsPlusLabelCtxDef* temp = label_ctx_;
  label_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusLabelCtxDef* FftsPlusCtxDef::unsafe_arena_release_label_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.label_ctx)
  
  ::domi::FftsPlusLabelCtxDef* temp = label_ctx_;
  label_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusLabelCtxDef* FftsPlusCtxDef::_internal_mutable_label_ctx() {
  
  if (label_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusLabelCtxDef>(GetArena());
    label_ctx_ = p;
  }
  return label_ctx_;
}
inline ::domi::FftsPlusLabelCtxDef* FftsPlusCtxDef::mutable_label_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.label_ctx)
  return _internal_mutable_label_ctx();
}
inline void FftsPlusCtxDef::set_allocated_label_ctx(::domi::FftsPlusLabelCtxDef* label_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete label_ctx_;
  }
  if (label_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(label_ctx);
    if (message_arena != submessage_arena) {
      label_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, label_ctx, submessage_arena);
    }
    
  } else {
    
  }
  label_ctx_ = label_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.label_ctx)
}

// .domi.FftsPlusCaseSwitchCtxDef case_switch_ctx = 16;
inline bool FftsPlusCtxDef::_internal_has_case_switch_ctx() const {
  return this != internal_default_instance() && case_switch_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_case_switch_ctx() const {
  return _internal_has_case_switch_ctx();
}
inline void FftsPlusCtxDef::clear_case_switch_ctx() {
  if (GetArena() == nullptr && case_switch_ctx_ != nullptr) {
    delete case_switch_ctx_;
  }
  case_switch_ctx_ = nullptr;
}
inline const ::domi::FftsPlusCaseSwitchCtxDef& FftsPlusCtxDef::_internal_case_switch_ctx() const {
  const ::domi::FftsPlusCaseSwitchCtxDef* p = case_switch_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusCaseSwitchCtxDef*>(
      &::domi::_FftsPlusCaseSwitchCtxDef_default_instance_);
}
inline const ::domi::FftsPlusCaseSwitchCtxDef& FftsPlusCtxDef::case_switch_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.case_switch_ctx)
  return _internal_case_switch_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_case_switch_ctx(
    ::domi::FftsPlusCaseSwitchCtxDef* case_switch_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(case_switch_ctx_);
  }
  case_switch_ctx_ = case_switch_ctx;
  if (case_switch_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.case_switch_ctx)
}
inline ::domi::FftsPlusCaseSwitchCtxDef* FftsPlusCtxDef::release_case_switch_ctx() {
  
  ::domi::FftsPlusCaseSwitchCtxDef* temp = case_switch_ctx_;
  case_switch_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusCaseSwitchCtxDef* FftsPlusCtxDef::unsafe_arena_release_case_switch_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.case_switch_ctx)
  
  ::domi::FftsPlusCaseSwitchCtxDef* temp = case_switch_ctx_;
  case_switch_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusCaseSwitchCtxDef* FftsPlusCtxDef::_internal_mutable_case_switch_ctx() {
  
  if (case_switch_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusCaseSwitchCtxDef>(GetArena());
    case_switch_ctx_ = p;
  }
  return case_switch_ctx_;
}
inline ::domi::FftsPlusCaseSwitchCtxDef* FftsPlusCtxDef::mutable_case_switch_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.case_switch_ctx)
  return _internal_mutable_case_switch_ctx();
}
inline void FftsPlusCtxDef::set_allocated_case_switch_ctx(::domi::FftsPlusCaseSwitchCtxDef* case_switch_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete case_switch_ctx_;
  }
  if (case_switch_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(case_switch_ctx);
    if (message_arena != submessage_arena) {
      case_switch_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, case_switch_ctx, submessage_arena);
    }
    
  } else {
    
  }
  case_switch_ctx_ = case_switch_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.case_switch_ctx)
}

// .domi.FftsPlusCaseDefaultCtxDef case_default_ctx = 17;
inline bool FftsPlusCtxDef::_internal_has_case_default_ctx() const {
  return this != internal_default_instance() && case_default_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_case_default_ctx() const {
  return _internal_has_case_default_ctx();
}
inline void FftsPlusCtxDef::clear_case_default_ctx() {
  if (GetArena() == nullptr && case_default_ctx_ != nullptr) {
    delete case_default_ctx_;
  }
  case_default_ctx_ = nullptr;
}
inline const ::domi::FftsPlusCaseDefaultCtxDef& FftsPlusCtxDef::_internal_case_default_ctx() const {
  const ::domi::FftsPlusCaseDefaultCtxDef* p = case_default_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusCaseDefaultCtxDef*>(
      &::domi::_FftsPlusCaseDefaultCtxDef_default_instance_);
}
inline const ::domi::FftsPlusCaseDefaultCtxDef& FftsPlusCtxDef::case_default_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.case_default_ctx)
  return _internal_case_default_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_case_default_ctx(
    ::domi::FftsPlusCaseDefaultCtxDef* case_default_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(case_default_ctx_);
  }
  case_default_ctx_ = case_default_ctx;
  if (case_default_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.case_default_ctx)
}
inline ::domi::FftsPlusCaseDefaultCtxDef* FftsPlusCtxDef::release_case_default_ctx() {
  
  ::domi::FftsPlusCaseDefaultCtxDef* temp = case_default_ctx_;
  case_default_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusCaseDefaultCtxDef* FftsPlusCtxDef::unsafe_arena_release_case_default_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.case_default_ctx)
  
  ::domi::FftsPlusCaseDefaultCtxDef* temp = case_default_ctx_;
  case_default_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusCaseDefaultCtxDef* FftsPlusCtxDef::_internal_mutable_case_default_ctx() {
  
  if (case_default_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusCaseDefaultCtxDef>(GetArena());
    case_default_ctx_ = p;
  }
  return case_default_ctx_;
}
inline ::domi::FftsPlusCaseDefaultCtxDef* FftsPlusCtxDef::mutable_case_default_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.case_default_ctx)
  return _internal_mutable_case_default_ctx();
}
inline void FftsPlusCtxDef::set_allocated_case_default_ctx(::domi::FftsPlusCaseDefaultCtxDef* case_default_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete case_default_ctx_;
  }
  if (case_default_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(case_default_ctx);
    if (message_arena != submessage_arena) {
      case_default_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, case_default_ctx, submessage_arena);
    }
    
  } else {
    
  }
  case_default_ctx_ = case_default_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.case_default_ctx)
}

// .domi.FftsPlusCondSwitchCtxDef cond_switch_ctx = 18;
inline bool FftsPlusCtxDef::_internal_has_cond_switch_ctx() const {
  return this != internal_default_instance() && cond_switch_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_cond_switch_ctx() const {
  return _internal_has_cond_switch_ctx();
}
inline void FftsPlusCtxDef::clear_cond_switch_ctx() {
  if (GetArena() == nullptr && cond_switch_ctx_ != nullptr) {
    delete cond_switch_ctx_;
  }
  cond_switch_ctx_ = nullptr;
}
inline const ::domi::FftsPlusCondSwitchCtxDef& FftsPlusCtxDef::_internal_cond_switch_ctx() const {
  const ::domi::FftsPlusCondSwitchCtxDef* p = cond_switch_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusCondSwitchCtxDef*>(
      &::domi::_FftsPlusCondSwitchCtxDef_default_instance_);
}
inline const ::domi::FftsPlusCondSwitchCtxDef& FftsPlusCtxDef::cond_switch_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.cond_switch_ctx)
  return _internal_cond_switch_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_cond_switch_ctx(
    ::domi::FftsPlusCondSwitchCtxDef* cond_switch_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cond_switch_ctx_);
  }
  cond_switch_ctx_ = cond_switch_ctx;
  if (cond_switch_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.cond_switch_ctx)
}
inline ::domi::FftsPlusCondSwitchCtxDef* FftsPlusCtxDef::release_cond_switch_ctx() {
  
  ::domi::FftsPlusCondSwitchCtxDef* temp = cond_switch_ctx_;
  cond_switch_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusCondSwitchCtxDef* FftsPlusCtxDef::unsafe_arena_release_cond_switch_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.cond_switch_ctx)
  
  ::domi::FftsPlusCondSwitchCtxDef* temp = cond_switch_ctx_;
  cond_switch_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusCondSwitchCtxDef* FftsPlusCtxDef::_internal_mutable_cond_switch_ctx() {
  
  if (cond_switch_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusCondSwitchCtxDef>(GetArena());
    cond_switch_ctx_ = p;
  }
  return cond_switch_ctx_;
}
inline ::domi::FftsPlusCondSwitchCtxDef* FftsPlusCtxDef::mutable_cond_switch_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.cond_switch_ctx)
  return _internal_mutable_cond_switch_ctx();
}
inline void FftsPlusCtxDef::set_allocated_cond_switch_ctx(::domi::FftsPlusCondSwitchCtxDef* cond_switch_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete cond_switch_ctx_;
  }
  if (cond_switch_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cond_switch_ctx);
    if (message_arena != submessage_arena) {
      cond_switch_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cond_switch_ctx, submessage_arena);
    }
    
  } else {
    
  }
  cond_switch_ctx_ = cond_switch_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.cond_switch_ctx)
}

// .domi.FftsPlusCachePersistCtxDef cache_persist_ctx = 19;
inline bool FftsPlusCtxDef::_internal_has_cache_persist_ctx() const {
  return this != internal_default_instance() && cache_persist_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_cache_persist_ctx() const {
  return _internal_has_cache_persist_ctx();
}
inline void FftsPlusCtxDef::clear_cache_persist_ctx() {
  if (GetArena() == nullptr && cache_persist_ctx_ != nullptr) {
    delete cache_persist_ctx_;
  }
  cache_persist_ctx_ = nullptr;
}
inline const ::domi::FftsPlusCachePersistCtxDef& FftsPlusCtxDef::_internal_cache_persist_ctx() const {
  const ::domi::FftsPlusCachePersistCtxDef* p = cache_persist_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusCachePersistCtxDef*>(
      &::domi::_FftsPlusCachePersistCtxDef_default_instance_);
}
inline const ::domi::FftsPlusCachePersistCtxDef& FftsPlusCtxDef::cache_persist_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.cache_persist_ctx)
  return _internal_cache_persist_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_cache_persist_ctx(
    ::domi::FftsPlusCachePersistCtxDef* cache_persist_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cache_persist_ctx_);
  }
  cache_persist_ctx_ = cache_persist_ctx;
  if (cache_persist_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.cache_persist_ctx)
}
inline ::domi::FftsPlusCachePersistCtxDef* FftsPlusCtxDef::release_cache_persist_ctx() {
  
  ::domi::FftsPlusCachePersistCtxDef* temp = cache_persist_ctx_;
  cache_persist_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusCachePersistCtxDef* FftsPlusCtxDef::unsafe_arena_release_cache_persist_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.cache_persist_ctx)
  
  ::domi::FftsPlusCachePersistCtxDef* temp = cache_persist_ctx_;
  cache_persist_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusCachePersistCtxDef* FftsPlusCtxDef::_internal_mutable_cache_persist_ctx() {
  
  if (cache_persist_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusCachePersistCtxDef>(GetArena());
    cache_persist_ctx_ = p;
  }
  return cache_persist_ctx_;
}
inline ::domi::FftsPlusCachePersistCtxDef* FftsPlusCtxDef::mutable_cache_persist_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.cache_persist_ctx)
  return _internal_mutable_cache_persist_ctx();
}
inline void FftsPlusCtxDef::set_allocated_cache_persist_ctx(::domi::FftsPlusCachePersistCtxDef* cache_persist_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete cache_persist_ctx_;
  }
  if (cache_persist_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cache_persist_ctx);
    if (message_arena != submessage_arena) {
      cache_persist_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cache_persist_ctx, submessage_arena);
    }
    
  } else {
    
  }
  cache_persist_ctx_ = cache_persist_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.cache_persist_ctx)
}

// .domi.FftsPlusDsaCtxDef dsa_ctx = 20;
inline bool FftsPlusCtxDef::_internal_has_dsa_ctx() const {
  return this != internal_default_instance() && dsa_ctx_ != nullptr;
}
inline bool FftsPlusCtxDef::has_dsa_ctx() const {
  return _internal_has_dsa_ctx();
}
inline void FftsPlusCtxDef::clear_dsa_ctx() {
  if (GetArena() == nullptr && dsa_ctx_ != nullptr) {
    delete dsa_ctx_;
  }
  dsa_ctx_ = nullptr;
}
inline const ::domi::FftsPlusDsaCtxDef& FftsPlusCtxDef::_internal_dsa_ctx() const {
  const ::domi::FftsPlusDsaCtxDef* p = dsa_ctx_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::FftsPlusDsaCtxDef*>(
      &::domi::_FftsPlusDsaCtxDef_default_instance_);
}
inline const ::domi::FftsPlusDsaCtxDef& FftsPlusCtxDef::dsa_ctx() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCtxDef.dsa_ctx)
  return _internal_dsa_ctx();
}
inline void FftsPlusCtxDef::unsafe_arena_set_allocated_dsa_ctx(
    ::domi::FftsPlusDsaCtxDef* dsa_ctx) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dsa_ctx_);
  }
  dsa_ctx_ = dsa_ctx;
  if (dsa_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusCtxDef.dsa_ctx)
}
inline ::domi::FftsPlusDsaCtxDef* FftsPlusCtxDef::release_dsa_ctx() {
  
  ::domi::FftsPlusDsaCtxDef* temp = dsa_ctx_;
  dsa_ctx_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::FftsPlusDsaCtxDef* FftsPlusCtxDef::unsafe_arena_release_dsa_ctx() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusCtxDef.dsa_ctx)
  
  ::domi::FftsPlusDsaCtxDef* temp = dsa_ctx_;
  dsa_ctx_ = nullptr;
  return temp;
}
inline ::domi::FftsPlusDsaCtxDef* FftsPlusCtxDef::_internal_mutable_dsa_ctx() {
  
  if (dsa_ctx_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::FftsPlusDsaCtxDef>(GetArena());
    dsa_ctx_ = p;
  }
  return dsa_ctx_;
}
inline ::domi::FftsPlusDsaCtxDef* FftsPlusCtxDef::mutable_dsa_ctx() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusCtxDef.dsa_ctx)
  return _internal_mutable_dsa_ctx();
}
inline void FftsPlusCtxDef::set_allocated_dsa_ctx(::domi::FftsPlusDsaCtxDef* dsa_ctx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dsa_ctx_;
  }
  if (dsa_ctx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dsa_ctx);
    if (message_arena != submessage_arena) {
      dsa_ctx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dsa_ctx, submessage_arena);
    }
    
  } else {
    
  }
  dsa_ctx_ = dsa_ctx;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusCtxDef.dsa_ctx)
}

// -------------------------------------------------------------------

// FftsPlusAicAivCtxDef

// uint32 successor_num = 1;
inline void FftsPlusAicAivCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusAicAivCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusAicAivCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusAicAivCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusAicAivCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusAicAivCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.aten)
}

// uint32 prefetch_config = 3;
inline void FftsPlusAicAivCtxDef::clear_prefetch_config() {
  prefetch_config_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_prefetch_config() const {
  return prefetch_config_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::prefetch_config() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.prefetch_config)
  return _internal_prefetch_config();
}
inline void FftsPlusAicAivCtxDef::_internal_set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_config_ = value;
}
inline void FftsPlusAicAivCtxDef::set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_config(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.prefetch_config)
}

// uint32 pred_cnt_init = 4;
inline void FftsPlusAicAivCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusAicAivCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusAicAivCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 5;
inline void FftsPlusAicAivCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusAicAivCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusAicAivCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 6;
inline int FftsPlusAicAivCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusAicAivCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusAicAivCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusAicAivCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.successor_list)
}
inline void FftsPlusAicAivCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusAicAivCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusAicAivCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAicAivCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAicAivCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusAicAivCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAicAivCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAicAivCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusAicAivCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 schem = 7;
inline void FftsPlusAicAivCtxDef::clear_schem() {
  schem_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_schem() const {
  return schem_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::schem() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.schem)
  return _internal_schem();
}
inline void FftsPlusAicAivCtxDef::_internal_set_schem(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  schem_ = value;
}
inline void FftsPlusAicAivCtxDef::set_schem(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_schem(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.schem)
}

// uint32 atm = 8;
inline void FftsPlusAicAivCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusAicAivCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusAicAivCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.atm)
}

// uint32 prefetch_enable_bitmap = 9;
inline void FftsPlusAicAivCtxDef::clear_prefetch_enable_bitmap() {
  prefetch_enable_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_prefetch_enable_bitmap() const {
  return prefetch_enable_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::prefetch_enable_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.prefetch_enable_bitmap)
  return _internal_prefetch_enable_bitmap();
}
inline void FftsPlusAicAivCtxDef::_internal_set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_enable_bitmap_ = value;
}
inline void FftsPlusAicAivCtxDef::set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_enable_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.prefetch_enable_bitmap)
}

// uint32 prefetch_once_bitmap = 10;
inline void FftsPlusAicAivCtxDef::clear_prefetch_once_bitmap() {
  prefetch_once_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_prefetch_once_bitmap() const {
  return prefetch_once_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::prefetch_once_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.prefetch_once_bitmap)
  return _internal_prefetch_once_bitmap();
}
inline void FftsPlusAicAivCtxDef::_internal_set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_once_bitmap_ = value;
}
inline void FftsPlusAicAivCtxDef::set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_once_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.prefetch_once_bitmap)
}

// uint32 pmg = 11;
inline void FftsPlusAicAivCtxDef::clear_pmg() {
  pmg_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_pmg() const {
  return pmg_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::pmg() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.pmg)
  return _internal_pmg();
}
inline void FftsPlusAicAivCtxDef::_internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pmg_ = value;
}
inline void FftsPlusAicAivCtxDef::set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pmg(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.pmg)
}

// uint32 ns = 12;
inline void FftsPlusAicAivCtxDef::clear_ns() {
  ns_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_ns() const {
  return ns_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::ns() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.ns)
  return _internal_ns();
}
inline void FftsPlusAicAivCtxDef::_internal_set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ns_ = value;
}
inline void FftsPlusAicAivCtxDef::set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ns(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.ns)
}

// uint32 part_id = 13;
inline void FftsPlusAicAivCtxDef::clear_part_id() {
  part_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_part_id() const {
  return part_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::part_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.part_id)
  return _internal_part_id();
}
inline void FftsPlusAicAivCtxDef::_internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  part_id_ = value;
}
inline void FftsPlusAicAivCtxDef::set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_part_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.part_id)
}

// uint32 qos = 14;
inline void FftsPlusAicAivCtxDef::clear_qos() {
  qos_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_qos() const {
  return qos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::qos() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.qos)
  return _internal_qos();
}
inline void FftsPlusAicAivCtxDef::_internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  qos_ = value;
}
inline void FftsPlusAicAivCtxDef::set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_qos(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.qos)
}

// uint32 thread_id = 15;
inline void FftsPlusAicAivCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusAicAivCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusAicAivCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.thread_id)
}

// uint32 thread_dim = 16;
inline void FftsPlusAicAivCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusAicAivCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusAicAivCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.thread_dim)
}

// uint32 non_tail_block_dim = 17;
inline void FftsPlusAicAivCtxDef::clear_non_tail_block_dim() {
  non_tail_block_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_non_tail_block_dim() const {
  return non_tail_block_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::non_tail_block_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.non_tail_block_dim)
  return _internal_non_tail_block_dim();
}
inline void FftsPlusAicAivCtxDef::_internal_set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_block_dim_ = value;
}
inline void FftsPlusAicAivCtxDef::set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_block_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.non_tail_block_dim)
}

// uint32 tail_block_dim = 18;
inline void FftsPlusAicAivCtxDef::clear_tail_block_dim() {
  tail_block_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_tail_block_dim() const {
  return tail_block_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::tail_block_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.tail_block_dim)
  return _internal_tail_block_dim();
}
inline void FftsPlusAicAivCtxDef::_internal_set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_block_dim_ = value;
}
inline void FftsPlusAicAivCtxDef::set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_block_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.tail_block_dim)
}

// uint32 task_param_ptr_offset = 19;
inline void FftsPlusAicAivCtxDef::clear_task_param_ptr_offset() {
  task_param_ptr_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_task_param_ptr_offset() const {
  return task_param_ptr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::task_param_ptr_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.task_param_ptr_offset)
  return _internal_task_param_ptr_offset();
}
inline void FftsPlusAicAivCtxDef::_internal_set_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  task_param_ptr_offset_ = value;
}
inline void FftsPlusAicAivCtxDef::set_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_task_param_ptr_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.task_param_ptr_offset)
}

// uint32 save_task_addr = 20;
inline void FftsPlusAicAivCtxDef::clear_save_task_addr() {
  save_task_addr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_save_task_addr() const {
  return save_task_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::save_task_addr() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.save_task_addr)
  return _internal_save_task_addr();
}
inline void FftsPlusAicAivCtxDef::_internal_set_save_task_addr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  save_task_addr_ = value;
}
inline void FftsPlusAicAivCtxDef::set_save_task_addr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_save_task_addr(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.save_task_addr)
}

// repeated uint64 task_addr = 21;
inline int FftsPlusAicAivCtxDef::_internal_task_addr_size() const {
  return task_addr_.size();
}
inline int FftsPlusAicAivCtxDef::task_addr_size() const {
  return _internal_task_addr_size();
}
inline void FftsPlusAicAivCtxDef::clear_task_addr() {
  task_addr_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusAicAivCtxDef::_internal_task_addr(int index) const {
  return task_addr_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusAicAivCtxDef::task_addr(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.task_addr)
  return _internal_task_addr(index);
}
inline void FftsPlusAicAivCtxDef::set_task_addr(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.task_addr)
}
inline void FftsPlusAicAivCtxDef::_internal_add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_.Add(value);
}
inline void FftsPlusAicAivCtxDef::add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_task_addr(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusAicAivCtxDef.task_addr)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
FftsPlusAicAivCtxDef::_internal_task_addr() const {
  return task_addr_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
FftsPlusAicAivCtxDef::task_addr() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusAicAivCtxDef.task_addr)
  return _internal_task_addr();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
FftsPlusAicAivCtxDef::_internal_mutable_task_addr() {
  return &task_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
FftsPlusAicAivCtxDef::mutable_task_addr() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusAicAivCtxDef.task_addr)
  return _internal_mutable_task_addr();
}

// repeated uint64 task_addr_offset = 22;
inline int FftsPlusAicAivCtxDef::_internal_task_addr_offset_size() const {
  return task_addr_offset_.size();
}
inline int FftsPlusAicAivCtxDef::task_addr_offset_size() const {
  return _internal_task_addr_offset_size();
}
inline void FftsPlusAicAivCtxDef::clear_task_addr_offset() {
  task_addr_offset_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusAicAivCtxDef::_internal_task_addr_offset(int index) const {
  return task_addr_offset_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusAicAivCtxDef::task_addr_offset(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.task_addr_offset)
  return _internal_task_addr_offset(index);
}
inline void FftsPlusAicAivCtxDef::set_task_addr_offset(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.task_addr_offset)
}
inline void FftsPlusAicAivCtxDef::_internal_add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_offset_.Add(value);
}
inline void FftsPlusAicAivCtxDef::add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_task_addr_offset(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusAicAivCtxDef.task_addr_offset)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
FftsPlusAicAivCtxDef::_internal_task_addr_offset() const {
  return task_addr_offset_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
FftsPlusAicAivCtxDef::task_addr_offset() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusAicAivCtxDef.task_addr_offset)
  return _internal_task_addr_offset();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
FftsPlusAicAivCtxDef::_internal_mutable_task_addr_offset() {
  return &task_addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
FftsPlusAicAivCtxDef::mutable_task_addr_offset() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusAicAivCtxDef.task_addr_offset)
  return _internal_mutable_task_addr_offset();
}

// uint32 input_output_count = 23;
inline void FftsPlusAicAivCtxDef::clear_input_output_count() {
  input_output_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_input_output_count() const {
  return input_output_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::input_output_count() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.input_output_count)
  return _internal_input_output_count();
}
inline void FftsPlusAicAivCtxDef::_internal_set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input_output_count_ = value;
}
inline void FftsPlusAicAivCtxDef::set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input_output_count(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.input_output_count)
}

// repeated string kernel_name = 24;
inline int FftsPlusAicAivCtxDef::_internal_kernel_name_size() const {
  return kernel_name_.size();
}
inline int FftsPlusAicAivCtxDef::kernel_name_size() const {
  return _internal_kernel_name_size();
}
inline void FftsPlusAicAivCtxDef::clear_kernel_name() {
  kernel_name_.Clear();
}
inline std::string* FftsPlusAicAivCtxDef::add_kernel_name() {
  // @@protoc_insertion_point(field_add_mutable:domi.FftsPlusAicAivCtxDef.kernel_name)
  return _internal_add_kernel_name();
}
inline const std::string& FftsPlusAicAivCtxDef::_internal_kernel_name(int index) const {
  return kernel_name_.Get(index);
}
inline const std::string& FftsPlusAicAivCtxDef::kernel_name(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.kernel_name)
  return _internal_kernel_name(index);
}
inline std::string* FftsPlusAicAivCtxDef::mutable_kernel_name(int index) {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusAicAivCtxDef.kernel_name)
  return kernel_name_.Mutable(index);
}
inline void FftsPlusAicAivCtxDef::set_kernel_name(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.kernel_name)
  kernel_name_.Mutable(index)->assign(value);
}
inline void FftsPlusAicAivCtxDef::set_kernel_name(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.kernel_name)
  kernel_name_.Mutable(index)->assign(std::move(value));
}
inline void FftsPlusAicAivCtxDef::set_kernel_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  kernel_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:domi.FftsPlusAicAivCtxDef.kernel_name)
}
inline void FftsPlusAicAivCtxDef::set_kernel_name(int index, const char* value, size_t size) {
  kernel_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:domi.FftsPlusAicAivCtxDef.kernel_name)
}
inline std::string* FftsPlusAicAivCtxDef::_internal_add_kernel_name() {
  return kernel_name_.Add();
}
inline void FftsPlusAicAivCtxDef::add_kernel_name(const std::string& value) {
  kernel_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusAicAivCtxDef.kernel_name)
}
inline void FftsPlusAicAivCtxDef::add_kernel_name(std::string&& value) {
  kernel_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:domi.FftsPlusAicAivCtxDef.kernel_name)
}
inline void FftsPlusAicAivCtxDef::add_kernel_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  kernel_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:domi.FftsPlusAicAivCtxDef.kernel_name)
}
inline void FftsPlusAicAivCtxDef::add_kernel_name(const char* value, size_t size) {
  kernel_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:domi.FftsPlusAicAivCtxDef.kernel_name)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
FftsPlusAicAivCtxDef::kernel_name() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusAicAivCtxDef.kernel_name)
  return kernel_name_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
FftsPlusAicAivCtxDef::mutable_kernel_name() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusAicAivCtxDef.kernel_name)
  return &kernel_name_;
}

// repeated uint32 src_slot = 25;
inline int FftsPlusAicAivCtxDef::_internal_src_slot_size() const {
  return src_slot_.size();
}
inline int FftsPlusAicAivCtxDef::src_slot_size() const {
  return _internal_src_slot_size();
}
inline void FftsPlusAicAivCtxDef::clear_src_slot() {
  src_slot_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_src_slot(int index) const {
  return src_slot_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::src_slot(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.src_slot)
  return _internal_src_slot(index);
}
inline void FftsPlusAicAivCtxDef::set_src_slot(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  src_slot_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.src_slot)
}
inline void FftsPlusAicAivCtxDef::_internal_add_src_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  src_slot_.Add(value);
}
inline void FftsPlusAicAivCtxDef::add_src_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_src_slot(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusAicAivCtxDef.src_slot)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAicAivCtxDef::_internal_src_slot() const {
  return src_slot_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAicAivCtxDef::src_slot() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusAicAivCtxDef.src_slot)
  return _internal_src_slot();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAicAivCtxDef::_internal_mutable_src_slot() {
  return &src_slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAicAivCtxDef::mutable_src_slot() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusAicAivCtxDef.src_slot)
  return _internal_mutable_src_slot();
}

// uint32 policy_pri = 26;
inline void FftsPlusAicAivCtxDef::clear_policy_pri() {
  policy_pri_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_policy_pri() const {
  return policy_pri_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::policy_pri() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.policy_pri)
  return _internal_policy_pri();
}
inline void FftsPlusAicAivCtxDef::_internal_set_policy_pri(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  policy_pri_ = value;
}
inline void FftsPlusAicAivCtxDef::set_policy_pri(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_policy_pri(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.policy_pri)
}

// uint32 thread_window_size = 27;
inline void FftsPlusAicAivCtxDef::clear_thread_window_size() {
  thread_window_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::_internal_thread_window_size() const {
  return thread_window_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicAivCtxDef::thread_window_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicAivCtxDef.thread_window_size)
  return _internal_thread_window_size();
}
inline void FftsPlusAicAivCtxDef::_internal_set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_window_size_ = value;
}
inline void FftsPlusAicAivCtxDef::set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_window_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicAivCtxDef.thread_window_size)
}

// -------------------------------------------------------------------

// FftsPlusMixAicAivCtxDef

// uint32 successor_num = 1;
inline void FftsPlusMixAicAivCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusMixAicAivCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.aten)
}

// uint32 prefetch_config = 3;
inline void FftsPlusMixAicAivCtxDef::clear_prefetch_config() {
  prefetch_config_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_prefetch_config() const {
  return prefetch_config_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::prefetch_config() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.prefetch_config)
  return _internal_prefetch_config();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_config_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_config(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.prefetch_config)
}

// uint32 pred_cnt_init = 4;
inline void FftsPlusMixAicAivCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 5;
inline void FftsPlusMixAicAivCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 6;
inline int FftsPlusMixAicAivCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusMixAicAivCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusMixAicAivCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusMixAicAivCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.successor_list)
}
inline void FftsPlusMixAicAivCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusMixAicAivCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusMixAicAivCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusMixAicAivCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusMixAicAivCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusMixAicAivCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusMixAicAivCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusMixAicAivCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusMixAicAivCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 schem = 7;
inline void FftsPlusMixAicAivCtxDef::clear_schem() {
  schem_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_schem() const {
  return schem_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::schem() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.schem)
  return _internal_schem();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_schem(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  schem_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_schem(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_schem(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.schem)
}

// uint32 atm = 8;
inline void FftsPlusMixAicAivCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.atm)
}

// uint32 prefetch_enable_bitmap = 9;
inline void FftsPlusMixAicAivCtxDef::clear_prefetch_enable_bitmap() {
  prefetch_enable_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_prefetch_enable_bitmap() const {
  return prefetch_enable_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::prefetch_enable_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.prefetch_enable_bitmap)
  return _internal_prefetch_enable_bitmap();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_enable_bitmap_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_prefetch_enable_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_enable_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.prefetch_enable_bitmap)
}

// uint32 prefetch_once_bitmap = 10;
inline void FftsPlusMixAicAivCtxDef::clear_prefetch_once_bitmap() {
  prefetch_once_bitmap_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_prefetch_once_bitmap() const {
  return prefetch_once_bitmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::prefetch_once_bitmap() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.prefetch_once_bitmap)
  return _internal_prefetch_once_bitmap();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_once_bitmap_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_prefetch_once_bitmap(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_once_bitmap(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.prefetch_once_bitmap)
}

// uint32 pmg = 11;
inline void FftsPlusMixAicAivCtxDef::clear_pmg() {
  pmg_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_pmg() const {
  return pmg_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::pmg() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.pmg)
  return _internal_pmg();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pmg_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pmg(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.pmg)
}

// uint32 ns = 12;
inline void FftsPlusMixAicAivCtxDef::clear_ns() {
  ns_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_ns() const {
  return ns_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::ns() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.ns)
  return _internal_ns();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ns_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ns(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.ns)
}

// uint32 part_id = 13;
inline void FftsPlusMixAicAivCtxDef::clear_part_id() {
  part_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_part_id() const {
  return part_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::part_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.part_id)
  return _internal_part_id();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  part_id_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_part_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.part_id)
}

// uint32 qos = 14;
inline void FftsPlusMixAicAivCtxDef::clear_qos() {
  qos_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_qos() const {
  return qos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::qos() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.qos)
  return _internal_qos();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  qos_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_qos(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.qos)
}

// uint32 non_tail_block_ratio_n = 15;
inline void FftsPlusMixAicAivCtxDef::clear_non_tail_block_ratio_n() {
  non_tail_block_ratio_n_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_non_tail_block_ratio_n() const {
  return non_tail_block_ratio_n_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::non_tail_block_ratio_n() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.non_tail_block_ratio_n)
  return _internal_non_tail_block_ratio_n();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_non_tail_block_ratio_n(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_block_ratio_n_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_non_tail_block_ratio_n(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_block_ratio_n(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.non_tail_block_ratio_n)
}

// uint32 tail_block_ratio_n = 16;
inline void FftsPlusMixAicAivCtxDef::clear_tail_block_ratio_n() {
  tail_block_ratio_n_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_tail_block_ratio_n() const {
  return tail_block_ratio_n_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::tail_block_ratio_n() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.tail_block_ratio_n)
  return _internal_tail_block_ratio_n();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_tail_block_ratio_n(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_block_ratio_n_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_tail_block_ratio_n(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_block_ratio_n(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.tail_block_ratio_n)
}

// uint32 thread_id = 17;
inline void FftsPlusMixAicAivCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.thread_id)
}

// uint32 thread_dim = 18;
inline void FftsPlusMixAicAivCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.thread_dim)
}

// uint32 non_tail_block_dim = 19;
inline void FftsPlusMixAicAivCtxDef::clear_non_tail_block_dim() {
  non_tail_block_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_non_tail_block_dim() const {
  return non_tail_block_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::non_tail_block_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.non_tail_block_dim)
  return _internal_non_tail_block_dim();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_block_dim_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_block_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.non_tail_block_dim)
}

// uint32 tail_block_dim = 20;
inline void FftsPlusMixAicAivCtxDef::clear_tail_block_dim() {
  tail_block_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_tail_block_dim() const {
  return tail_block_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::tail_block_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.tail_block_dim)
  return _internal_tail_block_dim();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_block_dim_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_block_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.tail_block_dim)
}

// uint32 aic_task_param_ptr_offset = 21;
inline void FftsPlusMixAicAivCtxDef::clear_aic_task_param_ptr_offset() {
  aic_task_param_ptr_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_aic_task_param_ptr_offset() const {
  return aic_task_param_ptr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::aic_task_param_ptr_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.aic_task_param_ptr_offset)
  return _internal_aic_task_param_ptr_offset();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_aic_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aic_task_param_ptr_offset_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_aic_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aic_task_param_ptr_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.aic_task_param_ptr_offset)
}

// uint32 aiv_task_param_ptr_offset = 22;
inline void FftsPlusMixAicAivCtxDef::clear_aiv_task_param_ptr_offset() {
  aiv_task_param_ptr_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_aiv_task_param_ptr_offset() const {
  return aiv_task_param_ptr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::aiv_task_param_ptr_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.aiv_task_param_ptr_offset)
  return _internal_aiv_task_param_ptr_offset();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_aiv_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aiv_task_param_ptr_offset_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_aiv_task_param_ptr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aiv_task_param_ptr_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.aiv_task_param_ptr_offset)
}

// repeated string kernel_name = 23;
inline int FftsPlusMixAicAivCtxDef::_internal_kernel_name_size() const {
  return kernel_name_.size();
}
inline int FftsPlusMixAicAivCtxDef::kernel_name_size() const {
  return _internal_kernel_name_size();
}
inline void FftsPlusMixAicAivCtxDef::clear_kernel_name() {
  kernel_name_.Clear();
}
inline std::string* FftsPlusMixAicAivCtxDef::add_kernel_name() {
  // @@protoc_insertion_point(field_add_mutable:domi.FftsPlusMixAicAivCtxDef.kernel_name)
  return _internal_add_kernel_name();
}
inline const std::string& FftsPlusMixAicAivCtxDef::_internal_kernel_name(int index) const {
  return kernel_name_.Get(index);
}
inline const std::string& FftsPlusMixAicAivCtxDef::kernel_name(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.kernel_name)
  return _internal_kernel_name(index);
}
inline std::string* FftsPlusMixAicAivCtxDef::mutable_kernel_name(int index) {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusMixAicAivCtxDef.kernel_name)
  return kernel_name_.Mutable(index);
}
inline void FftsPlusMixAicAivCtxDef::set_kernel_name(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.kernel_name)
  kernel_name_.Mutable(index)->assign(value);
}
inline void FftsPlusMixAicAivCtxDef::set_kernel_name(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.kernel_name)
  kernel_name_.Mutable(index)->assign(std::move(value));
}
inline void FftsPlusMixAicAivCtxDef::set_kernel_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  kernel_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:domi.FftsPlusMixAicAivCtxDef.kernel_name)
}
inline void FftsPlusMixAicAivCtxDef::set_kernel_name(int index, const char* value, size_t size) {
  kernel_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:domi.FftsPlusMixAicAivCtxDef.kernel_name)
}
inline std::string* FftsPlusMixAicAivCtxDef::_internal_add_kernel_name() {
  return kernel_name_.Add();
}
inline void FftsPlusMixAicAivCtxDef::add_kernel_name(const std::string& value) {
  kernel_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusMixAicAivCtxDef.kernel_name)
}
inline void FftsPlusMixAicAivCtxDef::add_kernel_name(std::string&& value) {
  kernel_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:domi.FftsPlusMixAicAivCtxDef.kernel_name)
}
inline void FftsPlusMixAicAivCtxDef::add_kernel_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  kernel_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:domi.FftsPlusMixAicAivCtxDef.kernel_name)
}
inline void FftsPlusMixAicAivCtxDef::add_kernel_name(const char* value, size_t size) {
  kernel_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:domi.FftsPlusMixAicAivCtxDef.kernel_name)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
FftsPlusMixAicAivCtxDef::kernel_name() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusMixAicAivCtxDef.kernel_name)
  return kernel_name_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
FftsPlusMixAicAivCtxDef::mutable_kernel_name() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusMixAicAivCtxDef.kernel_name)
  return &kernel_name_;
}

// repeated uint64 task_addr = 24;
inline int FftsPlusMixAicAivCtxDef::_internal_task_addr_size() const {
  return task_addr_.size();
}
inline int FftsPlusMixAicAivCtxDef::task_addr_size() const {
  return _internal_task_addr_size();
}
inline void FftsPlusMixAicAivCtxDef::clear_task_addr() {
  task_addr_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusMixAicAivCtxDef::_internal_task_addr(int index) const {
  return task_addr_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusMixAicAivCtxDef::task_addr(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.task_addr)
  return _internal_task_addr(index);
}
inline void FftsPlusMixAicAivCtxDef::set_task_addr(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.task_addr)
}
inline void FftsPlusMixAicAivCtxDef::_internal_add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_.Add(value);
}
inline void FftsPlusMixAicAivCtxDef::add_task_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_task_addr(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusMixAicAivCtxDef.task_addr)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
FftsPlusMixAicAivCtxDef::_internal_task_addr() const {
  return task_addr_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
FftsPlusMixAicAivCtxDef::task_addr() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusMixAicAivCtxDef.task_addr)
  return _internal_task_addr();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
FftsPlusMixAicAivCtxDef::_internal_mutable_task_addr() {
  return &task_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
FftsPlusMixAicAivCtxDef::mutable_task_addr() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusMixAicAivCtxDef.task_addr)
  return _internal_mutable_task_addr();
}

// repeated uint64 task_addr_offset = 25;
inline int FftsPlusMixAicAivCtxDef::_internal_task_addr_offset_size() const {
  return task_addr_offset_.size();
}
inline int FftsPlusMixAicAivCtxDef::task_addr_offset_size() const {
  return _internal_task_addr_offset_size();
}
inline void FftsPlusMixAicAivCtxDef::clear_task_addr_offset() {
  task_addr_offset_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusMixAicAivCtxDef::_internal_task_addr_offset(int index) const {
  return task_addr_offset_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusMixAicAivCtxDef::task_addr_offset(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.task_addr_offset)
  return _internal_task_addr_offset(index);
}
inline void FftsPlusMixAicAivCtxDef::set_task_addr_offset(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.task_addr_offset)
}
inline void FftsPlusMixAicAivCtxDef::_internal_add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_addr_offset_.Add(value);
}
inline void FftsPlusMixAicAivCtxDef::add_task_addr_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_task_addr_offset(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusMixAicAivCtxDef.task_addr_offset)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
FftsPlusMixAicAivCtxDef::_internal_task_addr_offset() const {
  return task_addr_offset_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
FftsPlusMixAicAivCtxDef::task_addr_offset() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusMixAicAivCtxDef.task_addr_offset)
  return _internal_task_addr_offset();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
FftsPlusMixAicAivCtxDef::_internal_mutable_task_addr_offset() {
  return &task_addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
FftsPlusMixAicAivCtxDef::mutable_task_addr_offset() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusMixAicAivCtxDef.task_addr_offset)
  return _internal_mutable_task_addr_offset();
}

// uint32 input_output_count = 26;
inline void FftsPlusMixAicAivCtxDef::clear_input_output_count() {
  input_output_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_input_output_count() const {
  return input_output_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::input_output_count() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.input_output_count)
  return _internal_input_output_count();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input_output_count_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_input_output_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input_output_count(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.input_output_count)
}

// uint32 save_task_addr = 27;
inline void FftsPlusMixAicAivCtxDef::clear_save_task_addr() {
  save_task_addr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_save_task_addr() const {
  return save_task_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::save_task_addr() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.save_task_addr)
  return _internal_save_task_addr();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_save_task_addr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  save_task_addr_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_save_task_addr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_save_task_addr(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.save_task_addr)
}

// repeated uint32 src_slot = 28;
inline int FftsPlusMixAicAivCtxDef::_internal_src_slot_size() const {
  return src_slot_.size();
}
inline int FftsPlusMixAicAivCtxDef::src_slot_size() const {
  return _internal_src_slot_size();
}
inline void FftsPlusMixAicAivCtxDef::clear_src_slot() {
  src_slot_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_src_slot(int index) const {
  return src_slot_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::src_slot(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.src_slot)
  return _internal_src_slot(index);
}
inline void FftsPlusMixAicAivCtxDef::set_src_slot(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  src_slot_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.src_slot)
}
inline void FftsPlusMixAicAivCtxDef::_internal_add_src_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  src_slot_.Add(value);
}
inline void FftsPlusMixAicAivCtxDef::add_src_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_src_slot(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusMixAicAivCtxDef.src_slot)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusMixAicAivCtxDef::_internal_src_slot() const {
  return src_slot_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusMixAicAivCtxDef::src_slot() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusMixAicAivCtxDef.src_slot)
  return _internal_src_slot();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusMixAicAivCtxDef::_internal_mutable_src_slot() {
  return &src_slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusMixAicAivCtxDef::mutable_src_slot() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusMixAicAivCtxDef.src_slot)
  return _internal_mutable_src_slot();
}

// uint32 policy_pri = 29;
inline void FftsPlusMixAicAivCtxDef::clear_policy_pri() {
  policy_pri_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_policy_pri() const {
  return policy_pri_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::policy_pri() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.policy_pri)
  return _internal_policy_pri();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_policy_pri(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  policy_pri_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_policy_pri(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_policy_pri(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.policy_pri)
}

// uint32 thread_window_size = 30;
inline void FftsPlusMixAicAivCtxDef::clear_thread_window_size() {
  thread_window_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::_internal_thread_window_size() const {
  return thread_window_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusMixAicAivCtxDef::thread_window_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusMixAicAivCtxDef.thread_window_size)
  return _internal_thread_window_size();
}
inline void FftsPlusMixAicAivCtxDef::_internal_set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_window_size_ = value;
}
inline void FftsPlusMixAicAivCtxDef::set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_window_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusMixAicAivCtxDef.thread_window_size)
}

// -------------------------------------------------------------------

// FftsPlusSdmaCtxDef

// uint32 successor_num = 1;
inline void FftsPlusSdmaCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusSdmaCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusSdmaCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusSdmaCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusSdmaCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusSdmaCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.aten)
}

// uint32 pred_cnt_init = 3;
inline void FftsPlusSdmaCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusSdmaCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusSdmaCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 4;
inline void FftsPlusSdmaCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusSdmaCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusSdmaCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 5;
inline int FftsPlusSdmaCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusSdmaCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusSdmaCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusSdmaCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.successor_list)
}
inline void FftsPlusSdmaCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusSdmaCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusSdmaCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusSdmaCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusSdmaCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusSdmaCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusSdmaCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusSdmaCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusSdmaCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 atm = 6;
inline void FftsPlusSdmaCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusSdmaCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusSdmaCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.atm)
}

// uint32 pmg = 7;
inline void FftsPlusSdmaCtxDef::clear_pmg() {
  pmg_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_pmg() const {
  return pmg_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::pmg() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.pmg)
  return _internal_pmg();
}
inline void FftsPlusSdmaCtxDef::_internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pmg_ = value;
}
inline void FftsPlusSdmaCtxDef::set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pmg(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.pmg)
}

// uint32 ns = 8;
inline void FftsPlusSdmaCtxDef::clear_ns() {
  ns_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_ns() const {
  return ns_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::ns() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.ns)
  return _internal_ns();
}
inline void FftsPlusSdmaCtxDef::_internal_set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ns_ = value;
}
inline void FftsPlusSdmaCtxDef::set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ns(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.ns)
}

// uint32 part_id = 9;
inline void FftsPlusSdmaCtxDef::clear_part_id() {
  part_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_part_id() const {
  return part_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::part_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.part_id)
  return _internal_part_id();
}
inline void FftsPlusSdmaCtxDef::_internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  part_id_ = value;
}
inline void FftsPlusSdmaCtxDef::set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_part_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.part_id)
}

// uint32 qos = 10;
inline void FftsPlusSdmaCtxDef::clear_qos() {
  qos_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_qos() const {
  return qos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::qos() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.qos)
  return _internal_qos();
}
inline void FftsPlusSdmaCtxDef::_internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  qos_ = value;
}
inline void FftsPlusSdmaCtxDef::set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_qos(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.qos)
}

// uint32 thread_id = 11;
inline void FftsPlusSdmaCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusSdmaCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusSdmaCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.thread_id)
}

// uint32 thread_dim = 12;
inline void FftsPlusSdmaCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusSdmaCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusSdmaCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.thread_dim)
}

// uint32 sdma_sqe_header = 13;
inline void FftsPlusSdmaCtxDef::clear_sdma_sqe_header() {
  sdma_sqe_header_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_sdma_sqe_header() const {
  return sdma_sqe_header_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::sdma_sqe_header() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.sdma_sqe_header)
  return _internal_sdma_sqe_header();
}
inline void FftsPlusSdmaCtxDef::_internal_set_sdma_sqe_header(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sdma_sqe_header_ = value;
}
inline void FftsPlusSdmaCtxDef::set_sdma_sqe_header(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sdma_sqe_header(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.sdma_sqe_header)
}

// uint32 src_stream_id = 14;
inline void FftsPlusSdmaCtxDef::clear_src_stream_id() {
  src_stream_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_src_stream_id() const {
  return src_stream_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::src_stream_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.src_stream_id)
  return _internal_src_stream_id();
}
inline void FftsPlusSdmaCtxDef::_internal_set_src_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  src_stream_id_ = value;
}
inline void FftsPlusSdmaCtxDef::set_src_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_src_stream_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.src_stream_id)
}

// uint32 src_sub_stream_id = 15;
inline void FftsPlusSdmaCtxDef::clear_src_sub_stream_id() {
  src_sub_stream_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_src_sub_stream_id() const {
  return src_sub_stream_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::src_sub_stream_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.src_sub_stream_id)
  return _internal_src_sub_stream_id();
}
inline void FftsPlusSdmaCtxDef::_internal_set_src_sub_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  src_sub_stream_id_ = value;
}
inline void FftsPlusSdmaCtxDef::set_src_sub_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_src_sub_stream_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.src_sub_stream_id)
}

// uint32 dst_stream_id = 16;
inline void FftsPlusSdmaCtxDef::clear_dst_stream_id() {
  dst_stream_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_dst_stream_id() const {
  return dst_stream_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::dst_stream_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.dst_stream_id)
  return _internal_dst_stream_id();
}
inline void FftsPlusSdmaCtxDef::_internal_set_dst_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dst_stream_id_ = value;
}
inline void FftsPlusSdmaCtxDef::set_dst_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dst_stream_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.dst_stream_id)
}

// uint32 dst_sub_stream_id = 17;
inline void FftsPlusSdmaCtxDef::clear_dst_sub_stream_id() {
  dst_sub_stream_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_dst_sub_stream_id() const {
  return dst_sub_stream_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::dst_sub_stream_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.dst_sub_stream_id)
  return _internal_dst_sub_stream_id();
}
inline void FftsPlusSdmaCtxDef::_internal_set_dst_sub_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dst_sub_stream_id_ = value;
}
inline void FftsPlusSdmaCtxDef::set_dst_sub_stream_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dst_sub_stream_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.dst_sub_stream_id)
}

// uint64 src_addr_base = 18;
inline void FftsPlusSdmaCtxDef::clear_src_addr_base() {
  src_addr_base_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusSdmaCtxDef::_internal_src_addr_base() const {
  return src_addr_base_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusSdmaCtxDef::src_addr_base() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.src_addr_base)
  return _internal_src_addr_base();
}
inline void FftsPlusSdmaCtxDef::_internal_set_src_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  src_addr_base_ = value;
}
inline void FftsPlusSdmaCtxDef::set_src_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_src_addr_base(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.src_addr_base)
}

// uint32 src_addr_offset = 19;
inline void FftsPlusSdmaCtxDef::clear_src_addr_offset() {
  src_addr_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_src_addr_offset() const {
  return src_addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::src_addr_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.src_addr_offset)
  return _internal_src_addr_offset();
}
inline void FftsPlusSdmaCtxDef::_internal_set_src_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  src_addr_offset_ = value;
}
inline void FftsPlusSdmaCtxDef::set_src_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_src_addr_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.src_addr_offset)
}

// uint64 dst_addr_base = 20;
inline void FftsPlusSdmaCtxDef::clear_dst_addr_base() {
  dst_addr_base_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusSdmaCtxDef::_internal_dst_addr_base() const {
  return dst_addr_base_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusSdmaCtxDef::dst_addr_base() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.dst_addr_base)
  return _internal_dst_addr_base();
}
inline void FftsPlusSdmaCtxDef::_internal_set_dst_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  dst_addr_base_ = value;
}
inline void FftsPlusSdmaCtxDef::set_dst_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_dst_addr_base(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.dst_addr_base)
}

// uint32 dst_addr_offset = 21;
inline void FftsPlusSdmaCtxDef::clear_dst_addr_offset() {
  dst_addr_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_dst_addr_offset() const {
  return dst_addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::dst_addr_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.dst_addr_offset)
  return _internal_dst_addr_offset();
}
inline void FftsPlusSdmaCtxDef::_internal_set_dst_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dst_addr_offset_ = value;
}
inline void FftsPlusSdmaCtxDef::set_dst_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dst_addr_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.dst_addr_offset)
}

// uint32 non_tail_data_len = 22;
inline void FftsPlusSdmaCtxDef::clear_non_tail_data_len() {
  non_tail_data_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_non_tail_data_len() const {
  return non_tail_data_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::non_tail_data_len() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.non_tail_data_len)
  return _internal_non_tail_data_len();
}
inline void FftsPlusSdmaCtxDef::_internal_set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_data_len_ = value;
}
inline void FftsPlusSdmaCtxDef::set_non_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_data_len(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.non_tail_data_len)
}

// uint32 tail_data_len = 23;
inline void FftsPlusSdmaCtxDef::clear_tail_data_len() {
  tail_data_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::_internal_tail_data_len() const {
  return tail_data_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusSdmaCtxDef::tail_data_len() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusSdmaCtxDef.tail_data_len)
  return _internal_tail_data_len();
}
inline void FftsPlusSdmaCtxDef::_internal_set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_data_len_ = value;
}
inline void FftsPlusSdmaCtxDef::set_tail_data_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_data_len(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusSdmaCtxDef.tail_data_len)
}

// -------------------------------------------------------------------

// FftsPlusNotifyCtxDef

// uint32 successor_num = 1;
inline void FftsPlusNotifyCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusNotifyCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusNotifyCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusNotifyCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusNotifyCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusNotifyCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.aten)
}

// uint32 pred_cnt_init = 3;
inline void FftsPlusNotifyCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusNotifyCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusNotifyCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 4;
inline void FftsPlusNotifyCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusNotifyCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusNotifyCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 5;
inline int FftsPlusNotifyCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusNotifyCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusNotifyCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusNotifyCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.successor_list)
}
inline void FftsPlusNotifyCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusNotifyCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusNotifyCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusNotifyCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusNotifyCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusNotifyCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusNotifyCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusNotifyCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusNotifyCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 satm = 6;
inline void FftsPlusNotifyCtxDef::clear_satm() {
  satm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_satm() const {
  return satm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::satm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.satm)
  return _internal_satm();
}
inline void FftsPlusNotifyCtxDef::_internal_set_satm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  satm_ = value;
}
inline void FftsPlusNotifyCtxDef::set_satm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_satm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.satm)
}

// uint32 atm = 7;
inline void FftsPlusNotifyCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusNotifyCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusNotifyCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.atm)
}

// uint32 thread_id = 8;
inline void FftsPlusNotifyCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusNotifyCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusNotifyCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.thread_id)
}

// uint32 thread_dim = 9;
inline void FftsPlusNotifyCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusNotifyCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusNotifyCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.thread_dim)
}

// uint32 notify_id_base = 10;
inline void FftsPlusNotifyCtxDef::clear_notify_id_base() {
  notify_id_base_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_notify_id_base() const {
  return notify_id_base_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::notify_id_base() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.notify_id_base)
  return _internal_notify_id_base();
}
inline void FftsPlusNotifyCtxDef::_internal_set_notify_id_base(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  notify_id_base_ = value;
}
inline void FftsPlusNotifyCtxDef::set_notify_id_base(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_notify_id_base(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.notify_id_base)
}

// uint32 auto_window = 11;
inline void FftsPlusNotifyCtxDef::clear_auto_window() {
  auto_window_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_auto_window() const {
  return auto_window_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::auto_window() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.auto_window)
  return _internal_auto_window();
}
inline void FftsPlusNotifyCtxDef::_internal_set_auto_window(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  auto_window_ = value;
}
inline void FftsPlusNotifyCtxDef::set_auto_window(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_auto_window(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.auto_window)
}

// repeated uint32 notify_id = 12;
inline int FftsPlusNotifyCtxDef::_internal_notify_id_size() const {
  return notify_id_.size();
}
inline int FftsPlusNotifyCtxDef::notify_id_size() const {
  return _internal_notify_id_size();
}
inline void FftsPlusNotifyCtxDef::clear_notify_id() {
  notify_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::_internal_notify_id(int index) const {
  return notify_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusNotifyCtxDef::notify_id(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusNotifyCtxDef.notify_id)
  return _internal_notify_id(index);
}
inline void FftsPlusNotifyCtxDef::set_notify_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  notify_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusNotifyCtxDef.notify_id)
}
inline void FftsPlusNotifyCtxDef::_internal_add_notify_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  notify_id_.Add(value);
}
inline void FftsPlusNotifyCtxDef::add_notify_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_notify_id(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusNotifyCtxDef.notify_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusNotifyCtxDef::_internal_notify_id() const {
  return notify_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusNotifyCtxDef::notify_id() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusNotifyCtxDef.notify_id)
  return _internal_notify_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusNotifyCtxDef::_internal_mutable_notify_id() {
  return &notify_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusNotifyCtxDef::mutable_notify_id() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusNotifyCtxDef.notify_id)
  return _internal_mutable_notify_id();
}

// -------------------------------------------------------------------

// FftsPlusWriteValueCtxDef

// uint32 successor_num = 1;
inline void FftsPlusWriteValueCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusWriteValueCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.aten)
}

// uint32 pred_cnt_init = 3;
inline void FftsPlusWriteValueCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 4;
inline void FftsPlusWriteValueCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 5;
inline int FftsPlusWriteValueCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusWriteValueCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusWriteValueCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusWriteValueCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.successor_list)
}
inline void FftsPlusWriteValueCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusWriteValueCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusWriteValueCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusWriteValueCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusWriteValueCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusWriteValueCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusWriteValueCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusWriteValueCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusWriteValueCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 atm = 6;
inline void FftsPlusWriteValueCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.atm)
}

// uint32 thread_id = 7;
inline void FftsPlusWriteValueCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.thread_id)
}

// uint32 thread_dim = 8;
inline void FftsPlusWriteValueCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.thread_dim)
}

// uint32 aw_size = 9;
inline void FftsPlusWriteValueCtxDef::clear_aw_size() {
  aw_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_aw_size() const {
  return aw_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::aw_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.aw_size)
  return _internal_aw_size();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_aw_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aw_size_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_aw_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aw_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.aw_size)
}

// uint32 aw_snoop = 10;
inline void FftsPlusWriteValueCtxDef::clear_aw_snoop() {
  aw_snoop_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_aw_snoop() const {
  return aw_snoop_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::aw_snoop() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.aw_snoop)
  return _internal_aw_snoop();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_aw_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aw_snoop_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_aw_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aw_snoop(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.aw_snoop)
}

// uint32 aw_cache = 11;
inline void FftsPlusWriteValueCtxDef::clear_aw_cache() {
  aw_cache_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_aw_cache() const {
  return aw_cache_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::aw_cache() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.aw_cache)
  return _internal_aw_cache();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_aw_cache(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aw_cache_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_aw_cache(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aw_cache(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.aw_cache)
}

// uint32 aw_prot = 12;
inline void FftsPlusWriteValueCtxDef::clear_aw_prot() {
  aw_prot_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_aw_prot() const {
  return aw_prot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::aw_prot() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.aw_prot)
  return _internal_aw_prot();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_aw_prot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aw_prot_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_aw_prot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aw_prot(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.aw_prot)
}

// uint32 aw_va = 13;
inline void FftsPlusWriteValueCtxDef::clear_aw_va() {
  aw_va_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_aw_va() const {
  return aw_va_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::aw_va() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.aw_va)
  return _internal_aw_va();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_aw_va(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aw_va_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_aw_va(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aw_va(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.aw_va)
}

// uint32 ar_size = 14;
inline void FftsPlusWriteValueCtxDef::clear_ar_size() {
  ar_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_ar_size() const {
  return ar_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::ar_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.ar_size)
  return _internal_ar_size();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_size_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.ar_size)
}

// uint32 ar_snoop = 15;
inline void FftsPlusWriteValueCtxDef::clear_ar_snoop() {
  ar_snoop_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_ar_snoop() const {
  return ar_snoop_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::ar_snoop() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.ar_snoop)
  return _internal_ar_snoop();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_ar_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_snoop_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_ar_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_snoop(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.ar_snoop)
}

// uint32 ar_cache = 16;
inline void FftsPlusWriteValueCtxDef::clear_ar_cache() {
  ar_cache_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_ar_cache() const {
  return ar_cache_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::ar_cache() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.ar_cache)
  return _internal_ar_cache();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_cache_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_cache(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.ar_cache)
}

// uint32 ar_prot = 17;
inline void FftsPlusWriteValueCtxDef::clear_ar_prot() {
  ar_prot_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_ar_prot() const {
  return ar_prot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::ar_prot() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.ar_prot)
  return _internal_ar_prot();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_prot_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_prot(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.ar_prot)
}

// uint32 ar_va = 18;
inline void FftsPlusWriteValueCtxDef::clear_ar_va() {
  ar_va_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_ar_va() const {
  return ar_va_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::ar_va() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.ar_va)
  return _internal_ar_va();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_ar_va(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_va_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_ar_va(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_va(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.ar_va)
}

// uint64 write_addr_base = 19;
inline void FftsPlusWriteValueCtxDef::clear_write_addr_base() {
  write_addr_base_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusWriteValueCtxDef::_internal_write_addr_base() const {
  return write_addr_base_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusWriteValueCtxDef::write_addr_base() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.write_addr_base)
  return _internal_write_addr_base();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_write_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  write_addr_base_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_write_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_write_addr_base(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.write_addr_base)
}

// uint32 write_addr_offset = 20;
inline void FftsPlusWriteValueCtxDef::clear_write_addr_offset() {
  write_addr_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_write_addr_offset() const {
  return write_addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::write_addr_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.write_addr_offset)
  return _internal_write_addr_offset();
}
inline void FftsPlusWriteValueCtxDef::_internal_set_write_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  write_addr_offset_ = value;
}
inline void FftsPlusWriteValueCtxDef::set_write_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_write_addr_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.write_addr_offset)
}

// repeated uint32 write_value = 21;
inline int FftsPlusWriteValueCtxDef::_internal_write_value_size() const {
  return write_value_.size();
}
inline int FftsPlusWriteValueCtxDef::write_value_size() const {
  return _internal_write_value_size();
}
inline void FftsPlusWriteValueCtxDef::clear_write_value() {
  write_value_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::_internal_write_value(int index) const {
  return write_value_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusWriteValueCtxDef::write_value(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusWriteValueCtxDef.write_value)
  return _internal_write_value(index);
}
inline void FftsPlusWriteValueCtxDef::set_write_value(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  write_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusWriteValueCtxDef.write_value)
}
inline void FftsPlusWriteValueCtxDef::_internal_add_write_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  write_value_.Add(value);
}
inline void FftsPlusWriteValueCtxDef::add_write_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_write_value(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusWriteValueCtxDef.write_value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusWriteValueCtxDef::_internal_write_value() const {
  return write_value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusWriteValueCtxDef::write_value() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusWriteValueCtxDef.write_value)
  return _internal_write_value();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusWriteValueCtxDef::_internal_mutable_write_value() {
  return &write_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusWriteValueCtxDef::mutable_write_value() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusWriteValueCtxDef.write_value)
  return _internal_mutable_write_value();
}

// -------------------------------------------------------------------

// FftsPlusAicpuCtxDef

// uint32 successor_num = 1;
inline void FftsPlusAicpuCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusAicpuCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusAicpuCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusAicpuCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusAicpuCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusAicpuCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.aten)
}

// uint32 pred_cnt_init = 3;
inline void FftsPlusAicpuCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusAicpuCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusAicpuCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 4;
inline void FftsPlusAicpuCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusAicpuCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusAicpuCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 5;
inline int FftsPlusAicpuCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusAicpuCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusAicpuCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusAicpuCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.successor_list)
}
inline void FftsPlusAicpuCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusAicpuCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusAicpuCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAicpuCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAicpuCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusAicpuCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAicpuCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAicpuCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusAicpuCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 atm = 6;
inline void FftsPlusAicpuCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusAicpuCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusAicpuCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.atm)
}

// uint32 sqe_index = 7;
inline void FftsPlusAicpuCtxDef::clear_sqe_index() {
  sqe_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_sqe_index() const {
  return sqe_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::sqe_index() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.sqe_index)
  return _internal_sqe_index();
}
inline void FftsPlusAicpuCtxDef::_internal_set_sqe_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sqe_index_ = value;
}
inline void FftsPlusAicpuCtxDef::set_sqe_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sqe_index(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.sqe_index)
}

// uint32 kernel_type = 8;
inline void FftsPlusAicpuCtxDef::clear_kernel_type() {
  kernel_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_kernel_type() const {
  return kernel_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::kernel_type() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.kernel_type)
  return _internal_kernel_type();
}
inline void FftsPlusAicpuCtxDef::_internal_set_kernel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  kernel_type_ = value;
}
inline void FftsPlusAicpuCtxDef::set_kernel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kernel_type(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.kernel_type)
}

// uint32 bm = 9;
inline void FftsPlusAicpuCtxDef::clear_bm() {
  bm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_bm() const {
  return bm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::bm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.bm)
  return _internal_bm();
}
inline void FftsPlusAicpuCtxDef::_internal_set_bm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bm_ = value;
}
inline void FftsPlusAicpuCtxDef::set_bm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.bm)
}

// uint32 topic_type = 10;
inline void FftsPlusAicpuCtxDef::clear_topic_type() {
  topic_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_topic_type() const {
  return topic_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::topic_type() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.topic_type)
  return _internal_topic_type();
}
inline void FftsPlusAicpuCtxDef::_internal_set_topic_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  topic_type_ = value;
}
inline void FftsPlusAicpuCtxDef::set_topic_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_topic_type(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.topic_type)
}

// uint32 qos = 11;
inline void FftsPlusAicpuCtxDef::clear_qos() {
  qos_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_qos() const {
  return qos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::qos() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.qos)
  return _internal_qos();
}
inline void FftsPlusAicpuCtxDef::_internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  qos_ = value;
}
inline void FftsPlusAicpuCtxDef::set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_qos(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.qos)
}

// uint32 thread_id = 12;
inline void FftsPlusAicpuCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusAicpuCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusAicpuCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.thread_id)
}

// uint32 thread_dim = 13;
inline void FftsPlusAicpuCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusAicpuCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusAicpuCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.thread_dim)
}

// uint32 non_tail_block_dim = 14;
inline void FftsPlusAicpuCtxDef::clear_non_tail_block_dim() {
  non_tail_block_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_non_tail_block_dim() const {
  return non_tail_block_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::non_tail_block_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.non_tail_block_dim)
  return _internal_non_tail_block_dim();
}
inline void FftsPlusAicpuCtxDef::_internal_set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_block_dim_ = value;
}
inline void FftsPlusAicpuCtxDef::set_non_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_block_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.non_tail_block_dim)
}

// uint32 tail_block_dim = 15;
inline void FftsPlusAicpuCtxDef::clear_tail_block_dim() {
  tail_block_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_tail_block_dim() const {
  return tail_block_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::tail_block_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.tail_block_dim)
  return _internal_tail_block_dim();
}
inline void FftsPlusAicpuCtxDef::_internal_set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_block_dim_ = value;
}
inline void FftsPlusAicpuCtxDef::set_tail_block_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_block_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.tail_block_dim)
}

// uint32 sub_topic_id = 16;
inline void FftsPlusAicpuCtxDef::clear_sub_topic_id() {
  sub_topic_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_sub_topic_id() const {
  return sub_topic_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::sub_topic_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.sub_topic_id)
  return _internal_sub_topic_id();
}
inline void FftsPlusAicpuCtxDef::_internal_set_sub_topic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sub_topic_id_ = value;
}
inline void FftsPlusAicpuCtxDef::set_sub_topic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sub_topic_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.sub_topic_id)
}

// uint32 topic_id = 17;
inline void FftsPlusAicpuCtxDef::clear_topic_id() {
  topic_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_topic_id() const {
  return topic_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::topic_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.topic_id)
  return _internal_topic_id();
}
inline void FftsPlusAicpuCtxDef::_internal_set_topic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  topic_id_ = value;
}
inline void FftsPlusAicpuCtxDef::set_topic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_topic_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.topic_id)
}

// uint32 group_id = 18;
inline void FftsPlusAicpuCtxDef::clear_group_id() {
  group_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_group_id() const {
  return group_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::group_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.group_id)
  return _internal_group_id();
}
inline void FftsPlusAicpuCtxDef::_internal_set_group_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  group_id_ = value;
}
inline void FftsPlusAicpuCtxDef::set_group_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_group_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.group_id)
}

// uint32 task_param_offset = 19;
inline void FftsPlusAicpuCtxDef::clear_task_param_offset() {
  task_param_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::_internal_task_param_offset() const {
  return task_param_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAicpuCtxDef::task_param_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.task_param_offset)
  return _internal_task_param_offset();
}
inline void FftsPlusAicpuCtxDef::_internal_set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  task_param_offset_ = value;
}
inline void FftsPlusAicpuCtxDef::set_task_param_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_task_param_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAicpuCtxDef.task_param_offset)
}

// .domi.aicpuKernelDef kernel = 20;
inline bool FftsPlusAicpuCtxDef::_internal_has_kernel() const {
  return this != internal_default_instance() && kernel_ != nullptr;
}
inline bool FftsPlusAicpuCtxDef::has_kernel() const {
  return _internal_has_kernel();
}
inline void FftsPlusAicpuCtxDef::clear_kernel() {
  if (GetArena() == nullptr && kernel_ != nullptr) {
    delete kernel_;
  }
  kernel_ = nullptr;
}
inline const ::domi::aicpuKernelDef& FftsPlusAicpuCtxDef::_internal_kernel() const {
  const ::domi::aicpuKernelDef* p = kernel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::aicpuKernelDef*>(
      &::domi::_aicpuKernelDef_default_instance_);
}
inline const ::domi::aicpuKernelDef& FftsPlusAicpuCtxDef::kernel() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAicpuCtxDef.kernel)
  return _internal_kernel();
}
inline void FftsPlusAicpuCtxDef::unsafe_arena_set_allocated_kernel(
    ::domi::aicpuKernelDef* kernel) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(kernel_);
  }
  kernel_ = kernel;
  if (kernel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusAicpuCtxDef.kernel)
}
inline ::domi::aicpuKernelDef* FftsPlusAicpuCtxDef::release_kernel() {
  
  ::domi::aicpuKernelDef* temp = kernel_;
  kernel_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::aicpuKernelDef* FftsPlusAicpuCtxDef::unsafe_arena_release_kernel() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusAicpuCtxDef.kernel)
  
  ::domi::aicpuKernelDef* temp = kernel_;
  kernel_ = nullptr;
  return temp;
}
inline ::domi::aicpuKernelDef* FftsPlusAicpuCtxDef::_internal_mutable_kernel() {
  
  if (kernel_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::aicpuKernelDef>(GetArena());
    kernel_ = p;
  }
  return kernel_;
}
inline ::domi::aicpuKernelDef* FftsPlusAicpuCtxDef::mutable_kernel() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusAicpuCtxDef.kernel)
  return _internal_mutable_kernel();
}
inline void FftsPlusAicpuCtxDef::set_allocated_kernel(::domi::aicpuKernelDef* kernel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete kernel_;
  }
  if (kernel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(kernel);
    if (message_arena != submessage_arena) {
      kernel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kernel, submessage_arena);
    }
    
  } else {
    
  }
  kernel_ = kernel;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusAicpuCtxDef.kernel)
}

// -------------------------------------------------------------------

// aicpuKernelDef

// uint32 args_size = 1;
inline void aicpuKernelDef::clear_args_size() {
  args_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 aicpuKernelDef::_internal_args_size() const {
  return args_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 aicpuKernelDef::args_size() const {
  // @@protoc_insertion_point(field_get:domi.aicpuKernelDef.args_size)
  return _internal_args_size();
}
inline void aicpuKernelDef::_internal_set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  args_size_ = value;
}
inline void aicpuKernelDef::set_args_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_args_size(value);
  // @@protoc_insertion_point(field_set:domi.aicpuKernelDef.args_size)
}

// bytes args = 2;
inline void aicpuKernelDef::clear_args() {
  args_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& aicpuKernelDef::args() const {
  // @@protoc_insertion_point(field_get:domi.aicpuKernelDef.args)
  return _internal_args();
}
inline void aicpuKernelDef::set_args(const std::string& value) {
  _internal_set_args(value);
  // @@protoc_insertion_point(field_set:domi.aicpuKernelDef.args)
}
inline std::string* aicpuKernelDef::mutable_args() {
  // @@protoc_insertion_point(field_mutable:domi.aicpuKernelDef.args)
  return _internal_mutable_args();
}
inline const std::string& aicpuKernelDef::_internal_args() const {
  return args_.Get();
}
inline void aicpuKernelDef::_internal_set_args(const std::string& value) {
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void aicpuKernelDef::set_args(std::string&& value) {
  
  args_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.aicpuKernelDef.args)
}
inline void aicpuKernelDef::set_args(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.aicpuKernelDef.args)
}
inline void aicpuKernelDef::set_args(const void* value,
    size_t size) {
  
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.aicpuKernelDef.args)
}
inline std::string* aicpuKernelDef::_internal_mutable_args() {
  
  return args_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* aicpuKernelDef::release_args() {
  // @@protoc_insertion_point(field_release:domi.aicpuKernelDef.args)
  return args_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void aicpuKernelDef::set_allocated_args(std::string* args) {
  if (args != nullptr) {
    
  } else {
    
  }
  args_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), args,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.aicpuKernelDef.args)
}

// string so_name = 3;
inline void aicpuKernelDef::clear_so_name() {
  so_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& aicpuKernelDef::so_name() const {
  // @@protoc_insertion_point(field_get:domi.aicpuKernelDef.so_name)
  return _internal_so_name();
}
inline void aicpuKernelDef::set_so_name(const std::string& value) {
  _internal_set_so_name(value);
  // @@protoc_insertion_point(field_set:domi.aicpuKernelDef.so_name)
}
inline std::string* aicpuKernelDef::mutable_so_name() {
  // @@protoc_insertion_point(field_mutable:domi.aicpuKernelDef.so_name)
  return _internal_mutable_so_name();
}
inline const std::string& aicpuKernelDef::_internal_so_name() const {
  return so_name_.Get();
}
inline void aicpuKernelDef::_internal_set_so_name(const std::string& value) {
  
  so_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void aicpuKernelDef::set_so_name(std::string&& value) {
  
  so_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.aicpuKernelDef.so_name)
}
inline void aicpuKernelDef::set_so_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  so_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.aicpuKernelDef.so_name)
}
inline void aicpuKernelDef::set_so_name(const char* value,
    size_t size) {
  
  so_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.aicpuKernelDef.so_name)
}
inline std::string* aicpuKernelDef::_internal_mutable_so_name() {
  
  return so_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* aicpuKernelDef::release_so_name() {
  // @@protoc_insertion_point(field_release:domi.aicpuKernelDef.so_name)
  return so_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void aicpuKernelDef::set_allocated_so_name(std::string* so_name) {
  if (so_name != nullptr) {
    
  } else {
    
  }
  so_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), so_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.aicpuKernelDef.so_name)
}

// string kernel_name = 4;
inline void aicpuKernelDef::clear_kernel_name() {
  kernel_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& aicpuKernelDef::kernel_name() const {
  // @@protoc_insertion_point(field_get:domi.aicpuKernelDef.kernel_name)
  return _internal_kernel_name();
}
inline void aicpuKernelDef::set_kernel_name(const std::string& value) {
  _internal_set_kernel_name(value);
  // @@protoc_insertion_point(field_set:domi.aicpuKernelDef.kernel_name)
}
inline std::string* aicpuKernelDef::mutable_kernel_name() {
  // @@protoc_insertion_point(field_mutable:domi.aicpuKernelDef.kernel_name)
  return _internal_mutable_kernel_name();
}
inline const std::string& aicpuKernelDef::_internal_kernel_name() const {
  return kernel_name_.Get();
}
inline void aicpuKernelDef::_internal_set_kernel_name(const std::string& value) {
  
  kernel_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void aicpuKernelDef::set_kernel_name(std::string&& value) {
  
  kernel_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.aicpuKernelDef.kernel_name)
}
inline void aicpuKernelDef::set_kernel_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kernel_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.aicpuKernelDef.kernel_name)
}
inline void aicpuKernelDef::set_kernel_name(const char* value,
    size_t size) {
  
  kernel_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.aicpuKernelDef.kernel_name)
}
inline std::string* aicpuKernelDef::_internal_mutable_kernel_name() {
  
  return kernel_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* aicpuKernelDef::release_kernel_name() {
  // @@protoc_insertion_point(field_release:domi.aicpuKernelDef.kernel_name)
  return kernel_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void aicpuKernelDef::set_allocated_kernel_name(std::string* kernel_name) {
  if (kernel_name != nullptr) {
    
  } else {
    
  }
  kernel_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kernel_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.aicpuKernelDef.kernel_name)
}

// bytes kernel_ext_info = 5;
inline void aicpuKernelDef::clear_kernel_ext_info() {
  kernel_ext_info_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& aicpuKernelDef::kernel_ext_info() const {
  // @@protoc_insertion_point(field_get:domi.aicpuKernelDef.kernel_ext_info)
  return _internal_kernel_ext_info();
}
inline void aicpuKernelDef::set_kernel_ext_info(const std::string& value) {
  _internal_set_kernel_ext_info(value);
  // @@protoc_insertion_point(field_set:domi.aicpuKernelDef.kernel_ext_info)
}
inline std::string* aicpuKernelDef::mutable_kernel_ext_info() {
  // @@protoc_insertion_point(field_mutable:domi.aicpuKernelDef.kernel_ext_info)
  return _internal_mutable_kernel_ext_info();
}
inline const std::string& aicpuKernelDef::_internal_kernel_ext_info() const {
  return kernel_ext_info_.Get();
}
inline void aicpuKernelDef::_internal_set_kernel_ext_info(const std::string& value) {
  
  kernel_ext_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void aicpuKernelDef::set_kernel_ext_info(std::string&& value) {
  
  kernel_ext_info_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:domi.aicpuKernelDef.kernel_ext_info)
}
inline void aicpuKernelDef::set_kernel_ext_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  kernel_ext_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:domi.aicpuKernelDef.kernel_ext_info)
}
inline void aicpuKernelDef::set_kernel_ext_info(const void* value,
    size_t size) {
  
  kernel_ext_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:domi.aicpuKernelDef.kernel_ext_info)
}
inline std::string* aicpuKernelDef::_internal_mutable_kernel_ext_info() {
  
  return kernel_ext_info_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* aicpuKernelDef::release_kernel_ext_info() {
  // @@protoc_insertion_point(field_release:domi.aicpuKernelDef.kernel_ext_info)
  return kernel_ext_info_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void aicpuKernelDef::set_allocated_kernel_ext_info(std::string* kernel_ext_info) {
  if (kernel_ext_info != nullptr) {
    
  } else {
    
  }
  kernel_ext_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kernel_ext_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:domi.aicpuKernelDef.kernel_ext_info)
}

// uint32 kernel_ext_info_size = 6;
inline void aicpuKernelDef::clear_kernel_ext_info_size() {
  kernel_ext_info_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 aicpuKernelDef::_internal_kernel_ext_info_size() const {
  return kernel_ext_info_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 aicpuKernelDef::kernel_ext_info_size() const {
  // @@protoc_insertion_point(field_get:domi.aicpuKernelDef.kernel_ext_info_size)
  return _internal_kernel_ext_info_size();
}
inline void aicpuKernelDef::_internal_set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  kernel_ext_info_size_ = value;
}
inline void aicpuKernelDef::set_kernel_ext_info_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kernel_ext_info_size(value);
  // @@protoc_insertion_point(field_set:domi.aicpuKernelDef.kernel_ext_info_size)
}

// -------------------------------------------------------------------

// FftsPlusDataCtxDef

// uint32 successor_num = 1;
inline void FftsPlusDataCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusDataCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusDataCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusDataCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusDataCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusDataCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.aten)
}

// uint32 cnt_init = 3;
inline void FftsPlusDataCtxDef::clear_cnt_init() {
  cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_cnt_init() const {
  return cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.cnt_init)
  return _internal_cnt_init();
}
inline void FftsPlusDataCtxDef::_internal_set_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cnt_init_ = value;
}
inline void FftsPlusDataCtxDef::set_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.cnt_init)
}

// uint32 cnt = 4;
inline void FftsPlusDataCtxDef::clear_cnt() {
  cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_cnt() const {
  return cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.cnt)
  return _internal_cnt();
}
inline void FftsPlusDataCtxDef::_internal_set_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cnt_ = value;
}
inline void FftsPlusDataCtxDef::set_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.cnt)
}

// repeated uint32 successor_list = 5;
inline int FftsPlusDataCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusDataCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusDataCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusDataCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.successor_list)
}
inline void FftsPlusDataCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusDataCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusDataCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusDataCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusDataCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusDataCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusDataCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusDataCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusDataCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 atm = 6;
inline void FftsPlusDataCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusDataCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusDataCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.atm)
}

// uint32 pmg = 7;
inline void FftsPlusDataCtxDef::clear_pmg() {
  pmg_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_pmg() const {
  return pmg_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::pmg() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.pmg)
  return _internal_pmg();
}
inline void FftsPlusDataCtxDef::_internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pmg_ = value;
}
inline void FftsPlusDataCtxDef::set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pmg(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.pmg)
}

// uint32 ns = 8;
inline void FftsPlusDataCtxDef::clear_ns() {
  ns_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_ns() const {
  return ns_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::ns() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.ns)
  return _internal_ns();
}
inline void FftsPlusDataCtxDef::_internal_set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ns_ = value;
}
inline void FftsPlusDataCtxDef::set_ns(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ns(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.ns)
}

// uint32 part_id = 9;
inline void FftsPlusDataCtxDef::clear_part_id() {
  part_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_part_id() const {
  return part_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::part_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.part_id)
  return _internal_part_id();
}
inline void FftsPlusDataCtxDef::_internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  part_id_ = value;
}
inline void FftsPlusDataCtxDef::set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_part_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.part_id)
}

// uint32 qos = 10;
inline void FftsPlusDataCtxDef::clear_qos() {
  qos_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_qos() const {
  return qos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::qos() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.qos)
  return _internal_qos();
}
inline void FftsPlusDataCtxDef::_internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  qos_ = value;
}
inline void FftsPlusDataCtxDef::set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_qos(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.qos)
}

// uint32 orig_consumer_counter = 11;
inline void FftsPlusDataCtxDef::clear_orig_consumer_counter() {
  orig_consumer_counter_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_orig_consumer_counter() const {
  return orig_consumer_counter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::orig_consumer_counter() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.orig_consumer_counter)
  return _internal_orig_consumer_counter();
}
inline void FftsPlusDataCtxDef::_internal_set_orig_consumer_counter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  orig_consumer_counter_ = value;
}
inline void FftsPlusDataCtxDef::set_orig_consumer_counter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_orig_consumer_counter(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.orig_consumer_counter)
}

// uint32 run_consumer_counter = 12;
inline void FftsPlusDataCtxDef::clear_run_consumer_counter() {
  run_consumer_counter_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_run_consumer_counter() const {
  return run_consumer_counter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::run_consumer_counter() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.run_consumer_counter)
  return _internal_run_consumer_counter();
}
inline void FftsPlusDataCtxDef::_internal_set_run_consumer_counter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  run_consumer_counter_ = value;
}
inline void FftsPlusDataCtxDef::set_run_consumer_counter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_run_consumer_counter(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.run_consumer_counter)
}

// uint32 thread_id = 13;
inline void FftsPlusDataCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusDataCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusDataCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.thread_id)
}

// uint32 thread_dim = 14;
inline void FftsPlusDataCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusDataCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusDataCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.thread_dim)
}

// uint64 addr_base = 15;
inline void FftsPlusDataCtxDef::clear_addr_base() {
  addr_base_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusDataCtxDef::_internal_addr_base() const {
  return addr_base_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusDataCtxDef::addr_base() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.addr_base)
  return _internal_addr_base();
}
inline void FftsPlusDataCtxDef::_internal_set_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  addr_base_ = value;
}
inline void FftsPlusDataCtxDef::set_addr_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_addr_base(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.addr_base)
}

// uint32 addr_offset = 16;
inline void FftsPlusDataCtxDef::clear_addr_offset() {
  addr_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_addr_offset() const {
  return addr_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::addr_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.addr_offset)
  return _internal_addr_offset();
}
inline void FftsPlusDataCtxDef::_internal_set_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  addr_offset_ = value;
}
inline void FftsPlusDataCtxDef::set_addr_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_addr_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.addr_offset)
}

// uint32 non_tail_num_outter = 17;
inline void FftsPlusDataCtxDef::clear_non_tail_num_outter() {
  non_tail_num_outter_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_non_tail_num_outter() const {
  return non_tail_num_outter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::non_tail_num_outter() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.non_tail_num_outter)
  return _internal_non_tail_num_outter();
}
inline void FftsPlusDataCtxDef::_internal_set_non_tail_num_outter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_num_outter_ = value;
}
inline void FftsPlusDataCtxDef::set_non_tail_num_outter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_num_outter(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.non_tail_num_outter)
}

// uint32 non_tail_num_inner = 18;
inline void FftsPlusDataCtxDef::clear_non_tail_num_inner() {
  non_tail_num_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_non_tail_num_inner() const {
  return non_tail_num_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::non_tail_num_inner() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.non_tail_num_inner)
  return _internal_non_tail_num_inner();
}
inline void FftsPlusDataCtxDef::_internal_set_non_tail_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_num_inner_ = value;
}
inline void FftsPlusDataCtxDef::set_non_tail_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_num_inner(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.non_tail_num_inner)
}

// uint32 non_tail_len_inner = 19;
inline void FftsPlusDataCtxDef::clear_non_tail_len_inner() {
  non_tail_len_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_non_tail_len_inner() const {
  return non_tail_len_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::non_tail_len_inner() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.non_tail_len_inner)
  return _internal_non_tail_len_inner();
}
inline void FftsPlusDataCtxDef::_internal_set_non_tail_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_len_inner_ = value;
}
inline void FftsPlusDataCtxDef::set_non_tail_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_len_inner(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.non_tail_len_inner)
}

// uint32 non_tail_stride_outter = 20;
inline void FftsPlusDataCtxDef::clear_non_tail_stride_outter() {
  non_tail_stride_outter_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_non_tail_stride_outter() const {
  return non_tail_stride_outter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::non_tail_stride_outter() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.non_tail_stride_outter)
  return _internal_non_tail_stride_outter();
}
inline void FftsPlusDataCtxDef::_internal_set_non_tail_stride_outter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_stride_outter_ = value;
}
inline void FftsPlusDataCtxDef::set_non_tail_stride_outter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_stride_outter(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.non_tail_stride_outter)
}

// uint32 non_tail_stride_inner = 21;
inline void FftsPlusDataCtxDef::clear_non_tail_stride_inner() {
  non_tail_stride_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_non_tail_stride_inner() const {
  return non_tail_stride_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::non_tail_stride_inner() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.non_tail_stride_inner)
  return _internal_non_tail_stride_inner();
}
inline void FftsPlusDataCtxDef::_internal_set_non_tail_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  non_tail_stride_inner_ = value;
}
inline void FftsPlusDataCtxDef::set_non_tail_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_non_tail_stride_inner(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.non_tail_stride_inner)
}

// uint32 tail_num_outter = 22;
inline void FftsPlusDataCtxDef::clear_tail_num_outter() {
  tail_num_outter_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_tail_num_outter() const {
  return tail_num_outter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::tail_num_outter() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.tail_num_outter)
  return _internal_tail_num_outter();
}
inline void FftsPlusDataCtxDef::_internal_set_tail_num_outter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_num_outter_ = value;
}
inline void FftsPlusDataCtxDef::set_tail_num_outter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_num_outter(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.tail_num_outter)
}

// uint32 tail_num_inner = 23;
inline void FftsPlusDataCtxDef::clear_tail_num_inner() {
  tail_num_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_tail_num_inner() const {
  return tail_num_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::tail_num_inner() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.tail_num_inner)
  return _internal_tail_num_inner();
}
inline void FftsPlusDataCtxDef::_internal_set_tail_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_num_inner_ = value;
}
inline void FftsPlusDataCtxDef::set_tail_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_num_inner(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.tail_num_inner)
}

// uint32 tail_len_inner = 24;
inline void FftsPlusDataCtxDef::clear_tail_len_inner() {
  tail_len_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_tail_len_inner() const {
  return tail_len_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::tail_len_inner() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.tail_len_inner)
  return _internal_tail_len_inner();
}
inline void FftsPlusDataCtxDef::_internal_set_tail_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_len_inner_ = value;
}
inline void FftsPlusDataCtxDef::set_tail_len_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_len_inner(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.tail_len_inner)
}

// uint32 tail_stride_outter = 25;
inline void FftsPlusDataCtxDef::clear_tail_stride_outter() {
  tail_stride_outter_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_tail_stride_outter() const {
  return tail_stride_outter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::tail_stride_outter() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.tail_stride_outter)
  return _internal_tail_stride_outter();
}
inline void FftsPlusDataCtxDef::_internal_set_tail_stride_outter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_stride_outter_ = value;
}
inline void FftsPlusDataCtxDef::set_tail_stride_outter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_stride_outter(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.tail_stride_outter)
}

// uint32 tail_stride_inner = 26;
inline void FftsPlusDataCtxDef::clear_tail_stride_inner() {
  tail_stride_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::_internal_tail_stride_inner() const {
  return tail_stride_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDataCtxDef::tail_stride_inner() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDataCtxDef.tail_stride_inner)
  return _internal_tail_stride_inner();
}
inline void FftsPlusDataCtxDef::_internal_set_tail_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tail_stride_inner_ = value;
}
inline void FftsPlusDataCtxDef::set_tail_stride_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tail_stride_inner(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDataCtxDef.tail_stride_inner)
}

// -------------------------------------------------------------------

// FftsPlusAtStartCtxDef

// uint32 successor_num = 1;
inline void FftsPlusAtStartCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtStartCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusAtStartCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusAtStartCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtStartCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusAtStartCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtStartCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusAtStartCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusAtStartCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtStartCtxDef.aten)
}

// uint32 pred_cnt_init = 3;
inline void FftsPlusAtStartCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtStartCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusAtStartCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusAtStartCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtStartCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 4;
inline void FftsPlusAtStartCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtStartCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusAtStartCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusAtStartCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtStartCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 5;
inline int FftsPlusAtStartCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusAtStartCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusAtStartCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtStartCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusAtStartCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtStartCtxDef.successor_list)
}
inline void FftsPlusAtStartCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusAtStartCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusAtStartCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAtStartCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAtStartCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusAtStartCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAtStartCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAtStartCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusAtStartCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 thread_id = 6;
inline void FftsPlusAtStartCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtStartCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusAtStartCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusAtStartCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtStartCtxDef.thread_id)
}

// uint32 thread_dim = 7;
inline void FftsPlusAtStartCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtStartCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusAtStartCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusAtStartCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtStartCtxDef.thread_dim)
}

// uint32 thread_id_init = 8;
inline void FftsPlusAtStartCtxDef::clear_thread_id_init() {
  thread_id_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::_internal_thread_id_init() const {
  return thread_id_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::thread_id_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtStartCtxDef.thread_id_init)
  return _internal_thread_id_init();
}
inline void FftsPlusAtStartCtxDef::_internal_set_thread_id_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_init_ = value;
}
inline void FftsPlusAtStartCtxDef::set_thread_id_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtStartCtxDef.thread_id_init)
}

// uint32 thread_window_size = 9;
inline void FftsPlusAtStartCtxDef::clear_thread_window_size() {
  thread_window_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::_internal_thread_window_size() const {
  return thread_window_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtStartCtxDef::thread_window_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtStartCtxDef.thread_window_size)
  return _internal_thread_window_size();
}
inline void FftsPlusAtStartCtxDef::_internal_set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_window_size_ = value;
}
inline void FftsPlusAtStartCtxDef::set_thread_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_window_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtStartCtxDef.thread_window_size)
}

// -------------------------------------------------------------------

// FftsPlusAtEndCtxDef

// uint32 at_start_slot_num = 1;
inline void FftsPlusAtEndCtxDef::clear_at_start_slot_num() {
  at_start_slot_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::_internal_at_start_slot_num() const {
  return at_start_slot_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::at_start_slot_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtEndCtxDef.at_start_slot_num)
  return _internal_at_start_slot_num();
}
inline void FftsPlusAtEndCtxDef::_internal_set_at_start_slot_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  at_start_slot_num_ = value;
}
inline void FftsPlusAtEndCtxDef::set_at_start_slot_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_at_start_slot_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtEndCtxDef.at_start_slot_num)
}

// uint32 out_label_slot_num = 2;
inline void FftsPlusAtEndCtxDef::clear_out_label_slot_num() {
  out_label_slot_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::_internal_out_label_slot_num() const {
  return out_label_slot_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::out_label_slot_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtEndCtxDef.out_label_slot_num)
  return _internal_out_label_slot_num();
}
inline void FftsPlusAtEndCtxDef::_internal_set_out_label_slot_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  out_label_slot_num_ = value;
}
inline void FftsPlusAtEndCtxDef::set_out_label_slot_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_out_label_slot_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtEndCtxDef.out_label_slot_num)
}

// uint32 aten = 3;
inline void FftsPlusAtEndCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtEndCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusAtEndCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusAtEndCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtEndCtxDef.aten)
}

// uint32 pred_cnt_init = 4;
inline void FftsPlusAtEndCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtEndCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusAtEndCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusAtEndCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtEndCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 5;
inline void FftsPlusAtEndCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtEndCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusAtEndCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusAtEndCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtEndCtxDef.pred_cnt)
}

// repeated uint32 succ_at_start_slot = 6;
inline int FftsPlusAtEndCtxDef::_internal_succ_at_start_slot_size() const {
  return succ_at_start_slot_.size();
}
inline int FftsPlusAtEndCtxDef::succ_at_start_slot_size() const {
  return _internal_succ_at_start_slot_size();
}
inline void FftsPlusAtEndCtxDef::clear_succ_at_start_slot() {
  succ_at_start_slot_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::_internal_succ_at_start_slot(int index) const {
  return succ_at_start_slot_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::succ_at_start_slot(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtEndCtxDef.succ_at_start_slot)
  return _internal_succ_at_start_slot(index);
}
inline void FftsPlusAtEndCtxDef::set_succ_at_start_slot(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  succ_at_start_slot_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtEndCtxDef.succ_at_start_slot)
}
inline void FftsPlusAtEndCtxDef::_internal_add_succ_at_start_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  succ_at_start_slot_.Add(value);
}
inline void FftsPlusAtEndCtxDef::add_succ_at_start_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_succ_at_start_slot(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusAtEndCtxDef.succ_at_start_slot)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAtEndCtxDef::_internal_succ_at_start_slot() const {
  return succ_at_start_slot_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAtEndCtxDef::succ_at_start_slot() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusAtEndCtxDef.succ_at_start_slot)
  return _internal_succ_at_start_slot();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAtEndCtxDef::_internal_mutable_succ_at_start_slot() {
  return &succ_at_start_slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAtEndCtxDef::mutable_succ_at_start_slot() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusAtEndCtxDef.succ_at_start_slot)
  return _internal_mutable_succ_at_start_slot();
}

// repeated uint32 succ_out_label_slot = 7;
inline int FftsPlusAtEndCtxDef::_internal_succ_out_label_slot_size() const {
  return succ_out_label_slot_.size();
}
inline int FftsPlusAtEndCtxDef::succ_out_label_slot_size() const {
  return _internal_succ_out_label_slot_size();
}
inline void FftsPlusAtEndCtxDef::clear_succ_out_label_slot() {
  succ_out_label_slot_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::_internal_succ_out_label_slot(int index) const {
  return succ_out_label_slot_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::succ_out_label_slot(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtEndCtxDef.succ_out_label_slot)
  return _internal_succ_out_label_slot(index);
}
inline void FftsPlusAtEndCtxDef::set_succ_out_label_slot(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  succ_out_label_slot_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtEndCtxDef.succ_out_label_slot)
}
inline void FftsPlusAtEndCtxDef::_internal_add_succ_out_label_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  succ_out_label_slot_.Add(value);
}
inline void FftsPlusAtEndCtxDef::add_succ_out_label_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_succ_out_label_slot(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusAtEndCtxDef.succ_out_label_slot)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAtEndCtxDef::_internal_succ_out_label_slot() const {
  return succ_out_label_slot_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusAtEndCtxDef::succ_out_label_slot() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusAtEndCtxDef.succ_out_label_slot)
  return _internal_succ_out_label_slot();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAtEndCtxDef::_internal_mutable_succ_out_label_slot() {
  return &succ_out_label_slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusAtEndCtxDef::mutable_succ_out_label_slot() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusAtEndCtxDef.succ_out_label_slot)
  return _internal_mutable_succ_out_label_slot();
}

// uint32 thread_id = 8;
inline void FftsPlusAtEndCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusAtEndCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusAtEndCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusAtEndCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusAtEndCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusAtEndCtxDef.thread_id)
}

// -------------------------------------------------------------------

// FftsPlusLabelCtxDef

// uint32 successor_num = 1;
inline void FftsPlusLabelCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusLabelCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusLabelCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusLabelCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusLabelCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusLabelCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusLabelCtxDef.successor_num)
}

// uint32 pred_cnt_init = 2;
inline void FftsPlusLabelCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusLabelCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusLabelCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusLabelCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusLabelCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusLabelCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusLabelCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 3;
inline void FftsPlusLabelCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusLabelCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusLabelCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusLabelCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusLabelCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusLabelCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusLabelCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 4;
inline int FftsPlusLabelCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusLabelCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusLabelCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusLabelCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusLabelCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusLabelCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusLabelCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusLabelCtxDef.successor_list)
}
inline void FftsPlusLabelCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusLabelCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusLabelCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusLabelCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusLabelCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusLabelCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusLabelCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusLabelCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusLabelCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// -------------------------------------------------------------------

// FftsPlusCaseSwitchCtxDef

// uint32 successor_num = 1;
inline void FftsPlusCaseSwitchCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusCaseSwitchCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.aten)
}

// uint32 start_label_id = 3;
inline void FftsPlusCaseSwitchCtxDef::clear_start_label_id() {
  start_label_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_start_label_id() const {
  return start_label_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::start_label_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.start_label_id)
  return _internal_start_label_id();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_start_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_label_id_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_start_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_label_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.start_label_id)
}

// uint32 label_list_len = 4;
inline void FftsPlusCaseSwitchCtxDef::clear_label_list_len() {
  label_list_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_label_list_len() const {
  return label_list_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::label_list_len() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.label_list_len)
  return _internal_label_list_len();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_label_list_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  label_list_len_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_label_list_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_label_list_len(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.label_list_len)
}

// uint32 pred_cnt_init = 5;
inline void FftsPlusCaseSwitchCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 6;
inline void FftsPlusCaseSwitchCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 7;
inline int FftsPlusCaseSwitchCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusCaseSwitchCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusCaseSwitchCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusCaseSwitchCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.successor_list)
}
inline void FftsPlusCaseSwitchCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusCaseSwitchCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusCaseSwitchCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCaseSwitchCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCaseSwitchCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusCaseSwitchCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCaseSwitchCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCaseSwitchCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusCaseSwitchCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 atm = 8;
inline void FftsPlusCaseSwitchCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.atm)
}

// uint32 thread_id = 9;
inline void FftsPlusCaseSwitchCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.thread_id)
}

// uint32 thread_dim = 10;
inline void FftsPlusCaseSwitchCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.thread_dim)
}

// uint32 ar_size = 11;
inline void FftsPlusCaseSwitchCtxDef::clear_ar_size() {
  ar_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_ar_size() const {
  return ar_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::ar_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.ar_size)
  return _internal_ar_size();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_size_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.ar_size)
}

// uint32 snoop = 12;
inline void FftsPlusCaseSwitchCtxDef::clear_snoop() {
  snoop_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_snoop() const {
  return snoop_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::snoop() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.snoop)
  return _internal_snoop();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  snoop_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_snoop(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.snoop)
}

// uint32 ar_cache = 13;
inline void FftsPlusCaseSwitchCtxDef::clear_ar_cache() {
  ar_cache_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_ar_cache() const {
  return ar_cache_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::ar_cache() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.ar_cache)
  return _internal_ar_cache();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_cache_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_cache(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.ar_cache)
}

// uint32 ar_prot = 14;
inline void FftsPlusCaseSwitchCtxDef::clear_ar_prot() {
  ar_prot_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_ar_prot() const {
  return ar_prot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::ar_prot() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.ar_prot)
  return _internal_ar_prot();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_prot_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_prot(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.ar_prot)
}

// uint32 va = 15;
inline void FftsPlusCaseSwitchCtxDef::clear_va() {
  va_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_va() const {
  return va_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::va() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.va)
  return _internal_va();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_va(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  va_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_va(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_va(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.va)
}

// uint64 load_addr0_base = 16;
inline void FftsPlusCaseSwitchCtxDef::clear_load_addr0_base() {
  load_addr0_base_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusCaseSwitchCtxDef::_internal_load_addr0_base() const {
  return load_addr0_base_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusCaseSwitchCtxDef::load_addr0_base() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.load_addr0_base)
  return _internal_load_addr0_base();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_load_addr0_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  load_addr0_base_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_load_addr0_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_load_addr0_base(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.load_addr0_base)
}

// uint32 ld0_en = 17;
inline void FftsPlusCaseSwitchCtxDef::clear_ld0_en() {
  ld0_en_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_ld0_en() const {
  return ld0_en_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::ld0_en() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.ld0_en)
  return _internal_ld0_en();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_ld0_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ld0_en_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_ld0_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ld0_en(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.ld0_en)
}

// uint32 load_addr0_offset = 18;
inline void FftsPlusCaseSwitchCtxDef::clear_load_addr0_offset() {
  load_addr0_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_load_addr0_offset() const {
  return load_addr0_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::load_addr0_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.load_addr0_offset)
  return _internal_load_addr0_offset();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_load_addr0_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  load_addr0_offset_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_load_addr0_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_load_addr0_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.load_addr0_offset)
}

// uint64 load_addr1_base = 19;
inline void FftsPlusCaseSwitchCtxDef::clear_load_addr1_base() {
  load_addr1_base_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusCaseSwitchCtxDef::_internal_load_addr1_base() const {
  return load_addr1_base_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusCaseSwitchCtxDef::load_addr1_base() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.load_addr1_base)
  return _internal_load_addr1_base();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_load_addr1_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  load_addr1_base_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_load_addr1_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_load_addr1_base(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.load_addr1_base)
}

// uint32 ld1_en = 20;
inline void FftsPlusCaseSwitchCtxDef::clear_ld1_en() {
  ld1_en_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_ld1_en() const {
  return ld1_en_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::ld1_en() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.ld1_en)
  return _internal_ld1_en();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_ld1_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ld1_en_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_ld1_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ld1_en(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.ld1_en)
}

// uint32 load_addr1_offset = 21;
inline void FftsPlusCaseSwitchCtxDef::clear_load_addr1_offset() {
  load_addr1_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::_internal_load_addr1_offset() const {
  return load_addr1_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseSwitchCtxDef::load_addr1_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseSwitchCtxDef.load_addr1_offset)
  return _internal_load_addr1_offset();
}
inline void FftsPlusCaseSwitchCtxDef::_internal_set_load_addr1_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  load_addr1_offset_ = value;
}
inline void FftsPlusCaseSwitchCtxDef::set_load_addr1_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_load_addr1_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseSwitchCtxDef.load_addr1_offset)
}

// -------------------------------------------------------------------

// FftsPlusCaseDefaultCtxDef

// uint32 successor_num = 1;
inline void FftsPlusCaseDefaultCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseDefaultCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusCaseDefaultCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusCaseDefaultCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseDefaultCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusCaseDefaultCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseDefaultCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusCaseDefaultCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusCaseDefaultCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseDefaultCtxDef.aten)
}

// uint32 start_label_id = 3;
inline void FftsPlusCaseDefaultCtxDef::clear_start_label_id() {
  start_label_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::_internal_start_label_id() const {
  return start_label_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::start_label_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseDefaultCtxDef.start_label_id)
  return _internal_start_label_id();
}
inline void FftsPlusCaseDefaultCtxDef::_internal_set_start_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_label_id_ = value;
}
inline void FftsPlusCaseDefaultCtxDef::set_start_label_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_label_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseDefaultCtxDef.start_label_id)
}

// uint32 label_list_len = 4;
inline void FftsPlusCaseDefaultCtxDef::clear_label_list_len() {
  label_list_len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::_internal_label_list_len() const {
  return label_list_len_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::label_list_len() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseDefaultCtxDef.label_list_len)
  return _internal_label_list_len();
}
inline void FftsPlusCaseDefaultCtxDef::_internal_set_label_list_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  label_list_len_ = value;
}
inline void FftsPlusCaseDefaultCtxDef::set_label_list_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_label_list_len(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseDefaultCtxDef.label_list_len)
}

// uint32 pred_cnt_init = 5;
inline void FftsPlusCaseDefaultCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseDefaultCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusCaseDefaultCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusCaseDefaultCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseDefaultCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 6;
inline void FftsPlusCaseDefaultCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseDefaultCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusCaseDefaultCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusCaseDefaultCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseDefaultCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 7;
inline int FftsPlusCaseDefaultCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusCaseDefaultCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusCaseDefaultCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCaseDefaultCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCaseDefaultCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusCaseDefaultCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCaseDefaultCtxDef.successor_list)
}
inline void FftsPlusCaseDefaultCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusCaseDefaultCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusCaseDefaultCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCaseDefaultCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCaseDefaultCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusCaseDefaultCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCaseDefaultCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCaseDefaultCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusCaseDefaultCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// -------------------------------------------------------------------

// FftsPlusCondSwitchCtxDef

// uint32 true_successor_num = 1;
inline void FftsPlusCondSwitchCtxDef::clear_true_successor_num() {
  true_successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_true_successor_num() const {
  return true_successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::true_successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.true_successor_num)
  return _internal_true_successor_num();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_true_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  true_successor_num_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_true_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_true_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.true_successor_num)
}

// uint32 false_successor_num = 2;
inline void FftsPlusCondSwitchCtxDef::clear_false_successor_num() {
  false_successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_false_successor_num() const {
  return false_successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::false_successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.false_successor_num)
  return _internal_false_successor_num();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_false_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  false_successor_num_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_false_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_false_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.false_successor_num)
}

// uint32 aten = 3;
inline void FftsPlusCondSwitchCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.aten)
}

// uint32 condition = 4;
inline void FftsPlusCondSwitchCtxDef::clear_condition() {
  condition_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_condition() const {
  return condition_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::condition() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.condition)
  return _internal_condition();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_condition(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  condition_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_condition(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_condition(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.condition)
}

// uint32 pred_cnt_init = 5;
inline void FftsPlusCondSwitchCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 6;
inline void FftsPlusCondSwitchCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.pred_cnt)
}

// repeated uint32 true_successor_list = 7;
inline int FftsPlusCondSwitchCtxDef::_internal_true_successor_list_size() const {
  return true_successor_list_.size();
}
inline int FftsPlusCondSwitchCtxDef::true_successor_list_size() const {
  return _internal_true_successor_list_size();
}
inline void FftsPlusCondSwitchCtxDef::clear_true_successor_list() {
  true_successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_true_successor_list(int index) const {
  return true_successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::true_successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.true_successor_list)
  return _internal_true_successor_list(index);
}
inline void FftsPlusCondSwitchCtxDef::set_true_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  true_successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.true_successor_list)
}
inline void FftsPlusCondSwitchCtxDef::_internal_add_true_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  true_successor_list_.Add(value);
}
inline void FftsPlusCondSwitchCtxDef::add_true_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_true_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusCondSwitchCtxDef.true_successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCondSwitchCtxDef::_internal_true_successor_list() const {
  return true_successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCondSwitchCtxDef::true_successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusCondSwitchCtxDef.true_successor_list)
  return _internal_true_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCondSwitchCtxDef::_internal_mutable_true_successor_list() {
  return &true_successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCondSwitchCtxDef::mutable_true_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusCondSwitchCtxDef.true_successor_list)
  return _internal_mutable_true_successor_list();
}

// repeated uint32 false_successor_list = 8;
inline int FftsPlusCondSwitchCtxDef::_internal_false_successor_list_size() const {
  return false_successor_list_.size();
}
inline int FftsPlusCondSwitchCtxDef::false_successor_list_size() const {
  return _internal_false_successor_list_size();
}
inline void FftsPlusCondSwitchCtxDef::clear_false_successor_list() {
  false_successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_false_successor_list(int index) const {
  return false_successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::false_successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.false_successor_list)
  return _internal_false_successor_list(index);
}
inline void FftsPlusCondSwitchCtxDef::set_false_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  false_successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.false_successor_list)
}
inline void FftsPlusCondSwitchCtxDef::_internal_add_false_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  false_successor_list_.Add(value);
}
inline void FftsPlusCondSwitchCtxDef::add_false_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_false_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusCondSwitchCtxDef.false_successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCondSwitchCtxDef::_internal_false_successor_list() const {
  return false_successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCondSwitchCtxDef::false_successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusCondSwitchCtxDef.false_successor_list)
  return _internal_false_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCondSwitchCtxDef::_internal_mutable_false_successor_list() {
  return &false_successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCondSwitchCtxDef::mutable_false_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusCondSwitchCtxDef.false_successor_list)
  return _internal_mutable_false_successor_list();
}

// uint32 atm = 9;
inline void FftsPlusCondSwitchCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.atm)
}

// uint32 thread_id = 10;
inline void FftsPlusCondSwitchCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.thread_id)
}

// uint32 thread_dim = 11;
inline void FftsPlusCondSwitchCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.thread_dim)
}

// uint32 ar_size = 12;
inline void FftsPlusCondSwitchCtxDef::clear_ar_size() {
  ar_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_ar_size() const {
  return ar_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::ar_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.ar_size)
  return _internal_ar_size();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_size_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_ar_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.ar_size)
}

// uint32 snoop = 13;
inline void FftsPlusCondSwitchCtxDef::clear_snoop() {
  snoop_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_snoop() const {
  return snoop_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::snoop() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.snoop)
  return _internal_snoop();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  snoop_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_snoop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_snoop(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.snoop)
}

// uint32 ar_cache = 14;
inline void FftsPlusCondSwitchCtxDef::clear_ar_cache() {
  ar_cache_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_ar_cache() const {
  return ar_cache_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::ar_cache() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.ar_cache)
  return _internal_ar_cache();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_cache_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_ar_cache(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_cache(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.ar_cache)
}

// uint32 ar_prot = 15;
inline void FftsPlusCondSwitchCtxDef::clear_ar_prot() {
  ar_prot_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_ar_prot() const {
  return ar_prot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::ar_prot() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.ar_prot)
  return _internal_ar_prot();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ar_prot_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_ar_prot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ar_prot(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.ar_prot)
}

// uint32 va = 16;
inline void FftsPlusCondSwitchCtxDef::clear_va() {
  va_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_va() const {
  return va_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::va() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.va)
  return _internal_va();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_va(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  va_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_va(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_va(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.va)
}

// uint64 load_addr0_base = 17;
inline void FftsPlusCondSwitchCtxDef::clear_load_addr0_base() {
  load_addr0_base_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusCondSwitchCtxDef::_internal_load_addr0_base() const {
  return load_addr0_base_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusCondSwitchCtxDef::load_addr0_base() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.load_addr0_base)
  return _internal_load_addr0_base();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_load_addr0_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  load_addr0_base_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_load_addr0_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_load_addr0_base(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.load_addr0_base)
}

// uint32 ld0_en = 18;
inline void FftsPlusCondSwitchCtxDef::clear_ld0_en() {
  ld0_en_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_ld0_en() const {
  return ld0_en_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::ld0_en() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.ld0_en)
  return _internal_ld0_en();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_ld0_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ld0_en_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_ld0_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ld0_en(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.ld0_en)
}

// uint32 load_addr0_offset = 19;
inline void FftsPlusCondSwitchCtxDef::clear_load_addr0_offset() {
  load_addr0_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_load_addr0_offset() const {
  return load_addr0_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::load_addr0_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.load_addr0_offset)
  return _internal_load_addr0_offset();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_load_addr0_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  load_addr0_offset_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_load_addr0_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_load_addr0_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.load_addr0_offset)
}

// uint64 load_addr1_base = 20;
inline void FftsPlusCondSwitchCtxDef::clear_load_addr1_base() {
  load_addr1_base_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusCondSwitchCtxDef::_internal_load_addr1_base() const {
  return load_addr1_base_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FftsPlusCondSwitchCtxDef::load_addr1_base() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.load_addr1_base)
  return _internal_load_addr1_base();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_load_addr1_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  load_addr1_base_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_load_addr1_base(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_load_addr1_base(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.load_addr1_base)
}

// uint32 ld1_en = 21;
inline void FftsPlusCondSwitchCtxDef::clear_ld1_en() {
  ld1_en_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_ld1_en() const {
  return ld1_en_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::ld1_en() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.ld1_en)
  return _internal_ld1_en();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_ld1_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ld1_en_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_ld1_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ld1_en(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.ld1_en)
}

// uint32 load_addr1_offset = 22;
inline void FftsPlusCondSwitchCtxDef::clear_load_addr1_offset() {
  load_addr1_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_load_addr1_offset() const {
  return load_addr1_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::load_addr1_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.load_addr1_offset)
  return _internal_load_addr1_offset();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_load_addr1_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  load_addr1_offset_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_load_addr1_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_load_addr1_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.load_addr1_offset)
}

// uint32 cmp_value_1 = 23;
inline void FftsPlusCondSwitchCtxDef::clear_cmp_value_1() {
  cmp_value_1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_cmp_value_1() const {
  return cmp_value_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::cmp_value_1() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.cmp_value_1)
  return _internal_cmp_value_1();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_cmp_value_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cmp_value_1_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_cmp_value_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmp_value_1(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.cmp_value_1)
}

// uint32 cmp_value_2 = 24;
inline void FftsPlusCondSwitchCtxDef::clear_cmp_value_2() {
  cmp_value_2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::_internal_cmp_value_2() const {
  return cmp_value_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCondSwitchCtxDef::cmp_value_2() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCondSwitchCtxDef.cmp_value_2)
  return _internal_cmp_value_2();
}
inline void FftsPlusCondSwitchCtxDef::_internal_set_cmp_value_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cmp_value_2_ = value;
}
inline void FftsPlusCondSwitchCtxDef::set_cmp_value_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmp_value_2(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCondSwitchCtxDef.cmp_value_2)
}

// -------------------------------------------------------------------

// FftsPlusCachePersistCtxDef

// uint32 successor_num = 1;
inline void FftsPlusCachePersistCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCachePersistCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusCachePersistCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusCachePersistCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCachePersistCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusCachePersistCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCachePersistCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusCachePersistCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusCachePersistCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCachePersistCtxDef.aten)
}

// uint32 prefetch_config = 3;
inline void FftsPlusCachePersistCtxDef::clear_prefetch_config() {
  prefetch_config_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::_internal_prefetch_config() const {
  return prefetch_config_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::prefetch_config() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCachePersistCtxDef.prefetch_config)
  return _internal_prefetch_config();
}
inline void FftsPlusCachePersistCtxDef::_internal_set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prefetch_config_ = value;
}
inline void FftsPlusCachePersistCtxDef::set_prefetch_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prefetch_config(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCachePersistCtxDef.prefetch_config)
}

// uint32 pred_cnt_init = 4;
inline void FftsPlusCachePersistCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCachePersistCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusCachePersistCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusCachePersistCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCachePersistCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 5;
inline void FftsPlusCachePersistCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCachePersistCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusCachePersistCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusCachePersistCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCachePersistCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 6;
inline int FftsPlusCachePersistCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusCachePersistCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusCachePersistCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCachePersistCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusCachePersistCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCachePersistCtxDef.successor_list)
}
inline void FftsPlusCachePersistCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusCachePersistCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusCachePersistCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCachePersistCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusCachePersistCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusCachePersistCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCachePersistCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusCachePersistCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusCachePersistCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 persistent_size = 7;
inline void FftsPlusCachePersistCtxDef::clear_persistent_size() {
  persistent_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::_internal_persistent_size() const {
  return persistent_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::persistent_size() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCachePersistCtxDef.persistent_size)
  return _internal_persistent_size();
}
inline void FftsPlusCachePersistCtxDef::_internal_set_persistent_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  persistent_size_ = value;
}
inline void FftsPlusCachePersistCtxDef::set_persistent_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_persistent_size(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCachePersistCtxDef.persistent_size)
}

// uint32 persistent_en = 8;
inline void FftsPlusCachePersistCtxDef::clear_persistent_en() {
  persistent_en_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::_internal_persistent_en() const {
  return persistent_en_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::persistent_en() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCachePersistCtxDef.persistent_en)
  return _internal_persistent_en();
}
inline void FftsPlusCachePersistCtxDef::_internal_set_persistent_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  persistent_en_ = value;
}
inline void FftsPlusCachePersistCtxDef::set_persistent_en(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_persistent_en(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCachePersistCtxDef.persistent_en)
}

// uint32 persistent_id = 9;
inline void FftsPlusCachePersistCtxDef::clear_persistent_id() {
  persistent_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::_internal_persistent_id() const {
  return persistent_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusCachePersistCtxDef::persistent_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusCachePersistCtxDef.persistent_id)
  return _internal_persistent_id();
}
inline void FftsPlusCachePersistCtxDef::_internal_set_persistent_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  persistent_id_ = value;
}
inline void FftsPlusCachePersistCtxDef::set_persistent_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_persistent_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusCachePersistCtxDef.persistent_id)
}

// -------------------------------------------------------------------

// FftsPlusDsaCtxDef

// uint32 successor_num = 1;
inline void FftsPlusDsaCtxDef::clear_successor_num() {
  successor_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_successor_num() const {
  return successor_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::successor_num() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.successor_num)
  return _internal_successor_num();
}
inline void FftsPlusDsaCtxDef::_internal_set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  successor_num_ = value;
}
inline void FftsPlusDsaCtxDef::set_successor_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_successor_num(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.successor_num)
}

// uint32 aten = 2;
inline void FftsPlusDsaCtxDef::clear_aten() {
  aten_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_aten() const {
  return aten_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::aten() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.aten)
  return _internal_aten();
}
inline void FftsPlusDsaCtxDef::_internal_set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  aten_ = value;
}
inline void FftsPlusDsaCtxDef::set_aten(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_aten(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.aten)
}

// uint32 pred_cnt_init = 3;
inline void FftsPlusDsaCtxDef::clear_pred_cnt_init() {
  pred_cnt_init_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_pred_cnt_init() const {
  return pred_cnt_init_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::pred_cnt_init() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.pred_cnt_init)
  return _internal_pred_cnt_init();
}
inline void FftsPlusDsaCtxDef::_internal_set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_init_ = value;
}
inline void FftsPlusDsaCtxDef::set_pred_cnt_init(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt_init(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.pred_cnt_init)
}

// uint32 pred_cnt = 4;
inline void FftsPlusDsaCtxDef::clear_pred_cnt() {
  pred_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_pred_cnt() const {
  return pred_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::pred_cnt() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.pred_cnt)
  return _internal_pred_cnt();
}
inline void FftsPlusDsaCtxDef::_internal_set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pred_cnt_ = value;
}
inline void FftsPlusDsaCtxDef::set_pred_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pred_cnt(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.pred_cnt)
}

// repeated uint32 successor_list = 5;
inline int FftsPlusDsaCtxDef::_internal_successor_list_size() const {
  return successor_list_.size();
}
inline int FftsPlusDsaCtxDef::successor_list_size() const {
  return _internal_successor_list_size();
}
inline void FftsPlusDsaCtxDef::clear_successor_list() {
  successor_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_successor_list(int index) const {
  return successor_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::successor_list(int index) const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.successor_list)
  return _internal_successor_list(index);
}
inline void FftsPlusDsaCtxDef::set_successor_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.successor_list)
}
inline void FftsPlusDsaCtxDef::_internal_add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  successor_list_.Add(value);
}
inline void FftsPlusDsaCtxDef::add_successor_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_successor_list(value);
  // @@protoc_insertion_point(field_add:domi.FftsPlusDsaCtxDef.successor_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusDsaCtxDef::_internal_successor_list() const {
  return successor_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
FftsPlusDsaCtxDef::successor_list() const {
  // @@protoc_insertion_point(field_list:domi.FftsPlusDsaCtxDef.successor_list)
  return _internal_successor_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusDsaCtxDef::_internal_mutable_successor_list() {
  return &successor_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
FftsPlusDsaCtxDef::mutable_successor_list() {
  // @@protoc_insertion_point(field_mutable_list:domi.FftsPlusDsaCtxDef.successor_list)
  return _internal_mutable_successor_list();
}

// uint32 atm = 6;
inline void FftsPlusDsaCtxDef::clear_atm() {
  atm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_atm() const {
  return atm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::atm() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.atm)
  return _internal_atm();
}
inline void FftsPlusDsaCtxDef::_internal_set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  atm_ = value;
}
inline void FftsPlusDsaCtxDef::set_atm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atm(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.atm)
}

// uint32 address_offset = 7;
inline void FftsPlusDsaCtxDef::clear_address_offset() {
  address_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_address_offset() const {
  return address_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::address_offset() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.address_offset)
  return _internal_address_offset();
}
inline void FftsPlusDsaCtxDef::_internal_set_address_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  address_offset_ = value;
}
inline void FftsPlusDsaCtxDef::set_address_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_address_offset(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.address_offset)
}

// uint32 thread_id = 8;
inline void FftsPlusDsaCtxDef::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_thread_id() const {
  return thread_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::thread_id() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.thread_id)
  return _internal_thread_id();
}
inline void FftsPlusDsaCtxDef::_internal_set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_id_ = value;
}
inline void FftsPlusDsaCtxDef::set_thread_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.thread_id)
}

// uint32 thread_dim = 9;
inline void FftsPlusDsaCtxDef::clear_thread_dim() {
  thread_dim_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_thread_dim() const {
  return thread_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::thread_dim() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.thread_dim)
  return _internal_thread_dim();
}
inline void FftsPlusDsaCtxDef::_internal_set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  thread_dim_ = value;
}
inline void FftsPlusDsaCtxDef::set_thread_dim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_thread_dim(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.thread_dim)
}

// uint32 start = 10;
inline void FftsPlusDsaCtxDef::clear_start() {
  start_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_start() const {
  return start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::start() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.start)
  return _internal_start();
}
inline void FftsPlusDsaCtxDef::_internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_ = value;
}
inline void FftsPlusDsaCtxDef::set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.start)
}

// uint32 distribution_type = 11;
inline void FftsPlusDsaCtxDef::clear_distribution_type() {
  distribution_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_distribution_type() const {
  return distribution_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::distribution_type() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.distribution_type)
  return _internal_distribution_type();
}
inline void FftsPlusDsaCtxDef::_internal_set_distribution_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  distribution_type_ = value;
}
inline void FftsPlusDsaCtxDef::set_distribution_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_distribution_type(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.distribution_type)
}

// uint32 data_type = 12;
inline void FftsPlusDsaCtxDef::clear_data_type() {
  data_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_data_type() const {
  return data_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::data_type() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.data_type)
  return _internal_data_type();
}
inline void FftsPlusDsaCtxDef::_internal_set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_type_ = value;
}
inline void FftsPlusDsaCtxDef::set_data_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_type(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.data_type)
}

// uint32 alg_type = 13;
inline void FftsPlusDsaCtxDef::clear_alg_type() {
  alg_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_alg_type() const {
  return alg_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::alg_type() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.alg_type)
  return _internal_alg_type();
}
inline void FftsPlusDsaCtxDef::_internal_set_alg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  alg_type_ = value;
}
inline void FftsPlusDsaCtxDef::set_alg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_alg_type(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.alg_type)
}

// uint32 input_vld = 14;
inline void FftsPlusDsaCtxDef::clear_input_vld() {
  input_vld_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_input_vld() const {
  return input_vld_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::input_vld() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.input_vld)
  return _internal_input_vld();
}
inline void FftsPlusDsaCtxDef::_internal_set_input_vld(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input_vld_ = value;
}
inline void FftsPlusDsaCtxDef::set_input_vld(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input_vld(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.input_vld)
}

// uint32 input_value_addr_flag = 15;
inline void FftsPlusDsaCtxDef::clear_input_value_addr_flag() {
  input_value_addr_flag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_input_value_addr_flag() const {
  return input_value_addr_flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::input_value_addr_flag() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.input_value_addr_flag)
  return _internal_input_value_addr_flag();
}
inline void FftsPlusDsaCtxDef::_internal_set_input_value_addr_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input_value_addr_flag_ = value;
}
inline void FftsPlusDsaCtxDef::set_input_value_addr_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input_value_addr_flag(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.input_value_addr_flag)
}

// uint32 input1_value_or_ptr = 16;
inline void FftsPlusDsaCtxDef::clear_input1_value_or_ptr() {
  input1_value_or_ptr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_input1_value_or_ptr() const {
  return input1_value_or_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::input1_value_or_ptr() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.input1_value_or_ptr)
  return _internal_input1_value_or_ptr();
}
inline void FftsPlusDsaCtxDef::_internal_set_input1_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input1_value_or_ptr_ = value;
}
inline void FftsPlusDsaCtxDef::set_input1_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input1_value_or_ptr(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.input1_value_or_ptr)
}

// uint32 input2_value_or_ptr = 17;
inline void FftsPlusDsaCtxDef::clear_input2_value_or_ptr() {
  input2_value_or_ptr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_input2_value_or_ptr() const {
  return input2_value_or_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::input2_value_or_ptr() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.input2_value_or_ptr)
  return _internal_input2_value_or_ptr();
}
inline void FftsPlusDsaCtxDef::_internal_set_input2_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  input2_value_or_ptr_ = value;
}
inline void FftsPlusDsaCtxDef::set_input2_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_input2_value_or_ptr(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.input2_value_or_ptr)
}

// uint32 seed_value_or_ptr = 18;
inline void FftsPlusDsaCtxDef::clear_seed_value_or_ptr() {
  seed_value_or_ptr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_seed_value_or_ptr() const {
  return seed_value_or_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::seed_value_or_ptr() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.seed_value_or_ptr)
  return _internal_seed_value_or_ptr();
}
inline void FftsPlusDsaCtxDef::_internal_set_seed_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  seed_value_or_ptr_ = value;
}
inline void FftsPlusDsaCtxDef::set_seed_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seed_value_or_ptr(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.seed_value_or_ptr)
}

// uint32 random_count_value_or_ptr = 19;
inline void FftsPlusDsaCtxDef::clear_random_count_value_or_ptr() {
  random_count_value_or_ptr_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::_internal_random_count_value_or_ptr() const {
  return random_count_value_or_ptr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FftsPlusDsaCtxDef::random_count_value_or_ptr() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.random_count_value_or_ptr)
  return _internal_random_count_value_or_ptr();
}
inline void FftsPlusDsaCtxDef::_internal_set_random_count_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  random_count_value_or_ptr_ = value;
}
inline void FftsPlusDsaCtxDef::set_random_count_value_or_ptr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_random_count_value_or_ptr(value);
  // @@protoc_insertion_point(field_set:domi.FftsPlusDsaCtxDef.random_count_value_or_ptr)
}

// .domi.DSATaskArgsDef args = 20;
inline bool FftsPlusDsaCtxDef::_internal_has_args() const {
  return this != internal_default_instance() && args_ != nullptr;
}
inline bool FftsPlusDsaCtxDef::has_args() const {
  return _internal_has_args();
}
inline void FftsPlusDsaCtxDef::clear_args() {
  if (GetArena() == nullptr && args_ != nullptr) {
    delete args_;
  }
  args_ = nullptr;
}
inline const ::domi::DSATaskArgsDef& FftsPlusDsaCtxDef::_internal_args() const {
  const ::domi::DSATaskArgsDef* p = args_;
  return p != nullptr ? *p : *reinterpret_cast<const ::domi::DSATaskArgsDef*>(
      &::domi::_DSATaskArgsDef_default_instance_);
}
inline const ::domi::DSATaskArgsDef& FftsPlusDsaCtxDef::args() const {
  // @@protoc_insertion_point(field_get:domi.FftsPlusDsaCtxDef.args)
  return _internal_args();
}
inline void FftsPlusDsaCtxDef::unsafe_arena_set_allocated_args(
    ::domi::DSATaskArgsDef* args) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(args_);
  }
  args_ = args;
  if (args) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:domi.FftsPlusDsaCtxDef.args)
}
inline ::domi::DSATaskArgsDef* FftsPlusDsaCtxDef::release_args() {
  
  ::domi::DSATaskArgsDef* temp = args_;
  args_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::domi::DSATaskArgsDef* FftsPlusDsaCtxDef::unsafe_arena_release_args() {
  // @@protoc_insertion_point(field_release:domi.FftsPlusDsaCtxDef.args)
  
  ::domi::DSATaskArgsDef* temp = args_;
  args_ = nullptr;
  return temp;
}
inline ::domi::DSATaskArgsDef* FftsPlusDsaCtxDef::_internal_mutable_args() {
  
  if (args_ == nullptr) {
    auto* p = CreateMaybeMessage<::domi::DSATaskArgsDef>(GetArena());
    args_ = p;
  }
  return args_;
}
inline ::domi::DSATaskArgsDef* FftsPlusDsaCtxDef::mutable_args() {
  // @@protoc_insertion_point(field_mutable:domi.FftsPlusDsaCtxDef.args)
  return _internal_mutable_args();
}
inline void FftsPlusDsaCtxDef::set_allocated_args(::domi::DSATaskArgsDef* args) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete args_;
  }
  if (args) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(args);
    if (message_arena != submessage_arena) {
      args = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, args, submessage_arena);
    }
    
  } else {
    
  }
  args_ = args;
  // @@protoc_insertion_point(field_set_allocated:domi.FftsPlusDsaCtxDef.args)
}

// -------------------------------------------------------------------

// CmoTaskDef

// uint32 cmo_type = 1;
inline void CmoTaskDef::clear_cmo_type() {
  cmo_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_cmo_type() const {
  return cmo_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::cmo_type() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.cmo_type)
  return _internal_cmo_type();
}
inline void CmoTaskDef::_internal_set_cmo_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cmo_type_ = value;
}
inline void CmoTaskDef::set_cmo_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmo_type(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.cmo_type)
}

// uint32 logic_id = 2;
inline void CmoTaskDef::clear_logic_id() {
  logic_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_logic_id() const {
  return logic_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::logic_id() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.logic_id)
  return _internal_logic_id();
}
inline void CmoTaskDef::_internal_set_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  logic_id_ = value;
}
inline void CmoTaskDef::set_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_logic_id(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.logic_id)
}

// uint32 op_code = 3;
inline void CmoTaskDef::clear_op_code() {
  op_code_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_op_code() const {
  return op_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::op_code() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.op_code)
  return _internal_op_code();
}
inline void CmoTaskDef::_internal_set_op_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_code_ = value;
}
inline void CmoTaskDef::set_op_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_code(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.op_code)
}

// uint32 qos = 4;
inline void CmoTaskDef::clear_qos() {
  qos_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_qos() const {
  return qos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::qos() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.qos)
  return _internal_qos();
}
inline void CmoTaskDef::_internal_set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  qos_ = value;
}
inline void CmoTaskDef::set_qos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_qos(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.qos)
}

// uint32 part_id = 5;
inline void CmoTaskDef::clear_part_id() {
  part_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_part_id() const {
  return part_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::part_id() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.part_id)
  return _internal_part_id();
}
inline void CmoTaskDef::_internal_set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  part_id_ = value;
}
inline void CmoTaskDef::set_part_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_part_id(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.part_id)
}

// uint32 pmg = 6;
inline void CmoTaskDef::clear_pmg() {
  pmg_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_pmg() const {
  return pmg_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::pmg() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.pmg)
  return _internal_pmg();
}
inline void CmoTaskDef::_internal_set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pmg_ = value;
}
inline void CmoTaskDef::set_pmg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pmg(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.pmg)
}

// uint32 num_inner = 7;
inline void CmoTaskDef::clear_num_inner() {
  num_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_num_inner() const {
  return num_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::num_inner() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.num_inner)
  return _internal_num_inner();
}
inline void CmoTaskDef::_internal_set_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  num_inner_ = value;
}
inline void CmoTaskDef::set_num_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_inner(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.num_inner)
}

// uint32 num_outer = 8;
inline void CmoTaskDef::clear_num_outer() {
  num_outer_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_num_outer() const {
  return num_outer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::num_outer() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.num_outer)
  return _internal_num_outer();
}
inline void CmoTaskDef::_internal_set_num_outer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  num_outer_ = value;
}
inline void CmoTaskDef::set_num_outer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_outer(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.num_outer)
}

// uint32 length_inner = 9;
inline void CmoTaskDef::clear_length_inner() {
  length_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_length_inner() const {
  return length_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::length_inner() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.length_inner)
  return _internal_length_inner();
}
inline void CmoTaskDef::_internal_set_length_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  length_inner_ = value;
}
inline void CmoTaskDef::set_length_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_length_inner(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.length_inner)
}

// uint64 source_addr = 10;
inline void CmoTaskDef::clear_source_addr() {
  source_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CmoTaskDef::_internal_source_addr() const {
  return source_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CmoTaskDef::source_addr() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.source_addr)
  return _internal_source_addr();
}
inline void CmoTaskDef::_internal_set_source_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  source_addr_ = value;
}
inline void CmoTaskDef::set_source_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_source_addr(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.source_addr)
}

// uint32 strider_outer = 11;
inline void CmoTaskDef::clear_strider_outer() {
  strider_outer_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_strider_outer() const {
  return strider_outer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::strider_outer() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.strider_outer)
  return _internal_strider_outer();
}
inline void CmoTaskDef::_internal_set_strider_outer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  strider_outer_ = value;
}
inline void CmoTaskDef::set_strider_outer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_strider_outer(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.strider_outer)
}

// uint32 strider_inner = 12;
inline void CmoTaskDef::clear_strider_inner() {
  strider_inner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::_internal_strider_inner() const {
  return strider_inner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoTaskDef::strider_inner() const {
  // @@protoc_insertion_point(field_get:domi.CmoTaskDef.strider_inner)
  return _internal_strider_inner();
}
inline void CmoTaskDef::_internal_set_strider_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  strider_inner_ = value;
}
inline void CmoTaskDef::set_strider_inner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_strider_inner(value);
  // @@protoc_insertion_point(field_set:domi.CmoTaskDef.strider_inner)
}

// -------------------------------------------------------------------

// CmoBarrierTaskDef

// uint32 logic_id_num = 1;
inline void CmoBarrierTaskDef::clear_logic_id_num() {
  logic_id_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoBarrierTaskDef::_internal_logic_id_num() const {
  return logic_id_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoBarrierTaskDef::logic_id_num() const {
  // @@protoc_insertion_point(field_get:domi.CmoBarrierTaskDef.logic_id_num)
  return _internal_logic_id_num();
}
inline void CmoBarrierTaskDef::_internal_set_logic_id_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  logic_id_num_ = value;
}
inline void CmoBarrierTaskDef::set_logic_id_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_logic_id_num(value);
  // @@protoc_insertion_point(field_set:domi.CmoBarrierTaskDef.logic_id_num)
}

// repeated .domi.CmoBarrierInfoDef barrier_info = 2;
inline int CmoBarrierTaskDef::_internal_barrier_info_size() const {
  return barrier_info_.size();
}
inline int CmoBarrierTaskDef::barrier_info_size() const {
  return _internal_barrier_info_size();
}
inline void CmoBarrierTaskDef::clear_barrier_info() {
  barrier_info_.Clear();
}
inline ::domi::CmoBarrierInfoDef* CmoBarrierTaskDef::mutable_barrier_info(int index) {
  // @@protoc_insertion_point(field_mutable:domi.CmoBarrierTaskDef.barrier_info)
  return barrier_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::CmoBarrierInfoDef >*
CmoBarrierTaskDef::mutable_barrier_info() {
  // @@protoc_insertion_point(field_mutable_list:domi.CmoBarrierTaskDef.barrier_info)
  return &barrier_info_;
}
inline const ::domi::CmoBarrierInfoDef& CmoBarrierTaskDef::_internal_barrier_info(int index) const {
  return barrier_info_.Get(index);
}
inline const ::domi::CmoBarrierInfoDef& CmoBarrierTaskDef::barrier_info(int index) const {
  // @@protoc_insertion_point(field_get:domi.CmoBarrierTaskDef.barrier_info)
  return _internal_barrier_info(index);
}
inline ::domi::CmoBarrierInfoDef* CmoBarrierTaskDef::_internal_add_barrier_info() {
  return barrier_info_.Add();
}
inline ::domi::CmoBarrierInfoDef* CmoBarrierTaskDef::add_barrier_info() {
  // @@protoc_insertion_point(field_add:domi.CmoBarrierTaskDef.barrier_info)
  return _internal_add_barrier_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::domi::CmoBarrierInfoDef >&
CmoBarrierTaskDef::barrier_info() const {
  // @@protoc_insertion_point(field_list:domi.CmoBarrierTaskDef.barrier_info)
  return barrier_info_;
}

// -------------------------------------------------------------------

// CmoBarrierInfoDef

// uint32 cmo_type = 1;
inline void CmoBarrierInfoDef::clear_cmo_type() {
  cmo_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoBarrierInfoDef::_internal_cmo_type() const {
  return cmo_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoBarrierInfoDef::cmo_type() const {
  // @@protoc_insertion_point(field_get:domi.CmoBarrierInfoDef.cmo_type)
  return _internal_cmo_type();
}
inline void CmoBarrierInfoDef::_internal_set_cmo_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cmo_type_ = value;
}
inline void CmoBarrierInfoDef::set_cmo_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cmo_type(value);
  // @@protoc_insertion_point(field_set:domi.CmoBarrierInfoDef.cmo_type)
}

// uint32 logic_id = 2;
inline void CmoBarrierInfoDef::clear_logic_id() {
  logic_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoBarrierInfoDef::_internal_logic_id() const {
  return logic_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CmoBarrierInfoDef::logic_id() const {
  // @@protoc_insertion_point(field_get:domi.CmoBarrierInfoDef.logic_id)
  return _internal_logic_id();
}
inline void CmoBarrierInfoDef::_internal_set_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  logic_id_ = value;
}
inline void CmoBarrierInfoDef::set_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_logic_id(value);
  // @@protoc_insertion_point(field_set:domi.CmoBarrierInfoDef.logic_id)
}

// -------------------------------------------------------------------

// NpuGetFloatStatusDef

// uint64 output_addr = 1;
inline void NpuGetFloatStatusDef::clear_output_addr() {
  output_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NpuGetFloatStatusDef::_internal_output_addr() const {
  return output_addr_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NpuGetFloatStatusDef::output_addr() const {
  // @@protoc_insertion_point(field_get:domi.NpuGetFloatStatusDef.output_addr)
  return _internal_output_addr();
}
inline void NpuGetFloatStatusDef::_internal_set_output_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  output_addr_ = value;
}
inline void NpuGetFloatStatusDef::set_output_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_output_addr(value);
  // @@protoc_insertion_point(field_set:domi.NpuGetFloatStatusDef.output_addr)
}

// uint32 output_size = 2;
inline void NpuGetFloatStatusDef::clear_output_size() {
  output_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuGetFloatStatusDef::_internal_output_size() const {
  return output_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuGetFloatStatusDef::output_size() const {
  // @@protoc_insertion_point(field_get:domi.NpuGetFloatStatusDef.output_size)
  return _internal_output_size();
}
inline void NpuGetFloatStatusDef::_internal_set_output_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  output_size_ = value;
}
inline void NpuGetFloatStatusDef::set_output_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_output_size(value);
  // @@protoc_insertion_point(field_set:domi.NpuGetFloatStatusDef.output_size)
}

// uint32 mode = 3;
inline void NpuGetFloatStatusDef::clear_mode() {
  mode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuGetFloatStatusDef::_internal_mode() const {
  return mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuGetFloatStatusDef::mode() const {
  // @@protoc_insertion_point(field_get:domi.NpuGetFloatStatusDef.mode)
  return _internal_mode();
}
inline void NpuGetFloatStatusDef::_internal_set_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mode_ = value;
}
inline void NpuGetFloatStatusDef::set_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:domi.NpuGetFloatStatusDef.mode)
}

// uint32 op_index = 4;
inline void NpuGetFloatStatusDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuGetFloatStatusDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuGetFloatStatusDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.NpuGetFloatStatusDef.op_index)
  return _internal_op_index();
}
inline void NpuGetFloatStatusDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void NpuGetFloatStatusDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.NpuGetFloatStatusDef.op_index)
}

// -------------------------------------------------------------------

// NpuClearFloatStatusDef

// uint32 mode = 1;
inline void NpuClearFloatStatusDef::clear_mode() {
  mode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuClearFloatStatusDef::_internal_mode() const {
  return mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuClearFloatStatusDef::mode() const {
  // @@protoc_insertion_point(field_get:domi.NpuClearFloatStatusDef.mode)
  return _internal_mode();
}
inline void NpuClearFloatStatusDef::_internal_set_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mode_ = value;
}
inline void NpuClearFloatStatusDef::set_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:domi.NpuClearFloatStatusDef.mode)
}

// uint32 op_index = 2;
inline void NpuClearFloatStatusDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuClearFloatStatusDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NpuClearFloatStatusDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.NpuClearFloatStatusDef.op_index)
  return _internal_op_index();
}
inline void NpuClearFloatStatusDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void NpuClearFloatStatusDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.NpuClearFloatStatusDef.op_index)
}

// -------------------------------------------------------------------

// DvppTaskDef

// uint32 op_index = 1;
inline void DvppTaskDef::clear_op_index() {
  op_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DvppTaskDef::_internal_op_index() const {
  return op_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DvppTaskDef::op_index() const {
  // @@protoc_insertion_point(field_get:domi.DvppTaskDef.op_index)
  return _internal_op_index();
}
inline void DvppTaskDef::_internal_set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  op_index_ = value;
}
inline void DvppTaskDef::set_op_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_op_index(value);
  // @@protoc_insertion_point(field_set:domi.DvppTaskDef.op_index)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace domi

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::domi::ArgsInfo_ArgsType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::domi::ArgsInfo_ArgsType>() {
  return ::domi::ArgsInfo_ArgsType_descriptor();
}
template <> struct is_proto_enum< ::domi::ArgsInfo_ArgsFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::domi::ArgsInfo_ArgsFormat>() {
  return ::domi::ArgsInfo_ArgsFormat_descriptor();
}
template <> struct is_proto_enum< ::domi::FftsPlusCtxDef_OpType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::domi::FftsPlusCtxDef_OpType>() {
  return ::domi::FftsPlusCtxDef_OpType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_task_2eproto
